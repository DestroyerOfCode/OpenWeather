{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport WeatherCurrentComponent from './current/WeatherCurrent';\nimport { withTranslation } from 'react-i18next';\nimport WeatherForecastComponent from './forecast/daily/WeatherForecastDaily';\nimport { temperatureDropdownList } from '../buildingBlocks/commonBuildingBlocks';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from '../reducers';\nimport reduxPromise from 'redux-promise';\nimport i18n from 'i18next';\nimport '../i18n';\n\nfunction WeatherApp(props) {\n  _s();\n\n  const [temperature, setTemperature] = useState({\n    \"units\": \"celsius\",\n    \"abbreviation\": \"°C\"\n  });\n  const store = createStore(reducers, null, applyMiddleware(reduxPromise));\n  console.log(temperature);\n  useEffect(() => {}, [props]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => i18n.changeLanguage(\"en\"),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => i18n.changeLanguage(\"sk\"),\n          children: \"SK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => i18n.changeLanguage(\"de\"),\n          children: \"DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), temperatureDropdownList(async (units, abbreviation) => {\n          console.log(units);\n          await setTemperature({\n            \"units\": units,\n            \"abbreviation\": abbreviation\n          });\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), \",\", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: props => {\n            console.log(props);\n            return /*#__PURE__*/_jsxDEV(WeatherCurrentComponent, { ...props,\n              temperature: temperature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 86\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forecast\",\n          render: props => /*#__PURE__*/_jsxDEV(WeatherForecastComponent, { ...props,\n            temperature: temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\n_s(WeatherApp, \"5HfuHlRts+zmO/hNGJ9t8B0xN38=\");\n\n_c = WeatherApp;\nexport default withTranslation()(WeatherApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/WeatherApp.js"],"names":["React","useEffect","useState","Switch","Route","WeatherCurrentComponent","withTranslation","WeatherForecastComponent","temperatureDropdownList","Provider","createStore","applyMiddleware","reducers","reduxPromise","i18n","WeatherApp","props","temperature","setTemperature","store","console","log","changeLanguage","units","abbreviation"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,uBAAP,MAAoC,0BAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,wBAAP,MAAqC,uCAArC;AACA,SAAQC,uBAAR,QAAsC,wCAAtC;AACA,SAAQC,QAAR,QAAwB,aAAxB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,SAAP;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC;AAAC,aAAS,SAAV;AAAqB,oBAAgB;AAArC,GAAD,CAA9C;AACA,QAAMiB,KAAK,GAAGT,WAAW,CAACE,QAAD,EAAW,IAAX,EAAiBD,eAAe,CAACE,YAAD,CAAhC,CAAzB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEAhB,EAAAA,SAAS,CAAC,MAAK,CAEd,CAFQ,EAEP,CAACe,KAAD,CAFO,CAAT;AAGA,sBAAO;AAAA,2BACH,QAAC,QAAD;AAAA,8BACI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAMF,IAAI,CAACQ,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMR,IAAI,CAACQ,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAMR,IAAI,CAACQ,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAIKd,uBAAuB,CAAE,OAAOe,KAAP,EAAcC,YAAd,KAAgC;AACtDJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,gBAAML,cAAc,CAAC;AAAC,qBAAUK,KAAX;AAAkB,4BAAiBC;AAAnC,WAAD,CAApB;AACC,SAHmB,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,oBAWI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,GAAnB;AAAuB,UAAA,MAAM,EAAGR,KAAD,IAAW;AAACI,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAAmB,gCAAO,QAAC,uBAAD,OAA6BA,KAA7B;AAAoC,cAAA,WAAW,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,oBAAP;AAAuE;AAArI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,WAAb;AAAyB,UAAA,MAAM,EAAGD,KAAD,iBAAW,QAAC,wBAAD,OAA8BA,KAA9B;AAAqC,YAAA,WAAW,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH;;GA5BQF,U;;KAAAA,U;AA+BT,eAAgBT,eAAe,GAAGS,UAAH,CAA/B","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport WeatherCurrentComponent from './current/WeatherCurrent';\nimport { withTranslation } from 'react-i18next';\nimport WeatherForecastComponent from './forecast/daily/WeatherForecastDaily';\nimport {temperatureDropdownList} from '../buildingBlocks/commonBuildingBlocks'\nimport {Provider } from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducers from '../reducers';\nimport reduxPromise from 'redux-promise'\nimport i18n from 'i18next'\nimport '../i18n'\n\nfunction WeatherApp (props) {\n\n    const [temperature, setTemperature] = useState({\"units\": \"celsius\", \"abbreviation\": \"°C\"})\n    const store = createStore(reducers, null, applyMiddleware(reduxPromise))\n\n    console.log(temperature)\n\n    useEffect(() =>{\n\n    },[props])\n    return <main> \n        <Provider>\n            <div>                               \n                <button onClick={() => i18n.changeLanguage(\"en\")}>EN</button>\n                <button onClick={() => i18n.changeLanguage(\"sk\")}>SK</button>   \n                <button onClick={() => i18n.changeLanguage(\"de\")}>DE</button>  \n                {temperatureDropdownList( async (units, abbreviation ) => {\n                    console.log(units)\n                    await setTemperature({\"units\" : units, \"abbreviation\" : abbreviation})\n                    }) \n                }\n            </div>,   \n            <Switch>\n                <Route exact path ='/' render={(props) => {console.log(props);return <WeatherCurrentComponent {...props} temperature={temperature}/>}}/>\n                <Route path ='/forecast' render={(props) => <WeatherForecastComponent {...props} temperature={temperature}/>}/>\n            </Switch>\n        </Provider>\n    </main>\n}\n\n\nexport default  withTranslation()(WeatherApp)\n"]},"metadata":{},"sourceType":"module"}