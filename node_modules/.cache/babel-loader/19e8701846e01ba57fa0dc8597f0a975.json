{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/WeatherCurrent.js\";\nimport React from 'react';\nimport WeatherCurrentService from '../../adapters/WeatherCurrentService';\nimport Pagination from '../current/Pagination';\nimport FiltersComponent from './Filters';\nimport { Link } from \"react-router-dom\";\nimport { getWeatherDescription, convertTemperature, keyExistsInArr, findIndexInFilters, changeFilters, addFilterOperatorToExistingFilterName, isAdditionalFilterCheck } from '../../businessLogic/WeatherBusinessLogic';\nimport '../../styles/common/Header.scss';\nimport { nanoid } from \"nanoid\";\nimport i18n from 'i18next';\n\nclass WeatherCurrent extends React.Component {\n  constructor(props) {\n    var _props$location, _props$location$state, _props$location2, _props$location2$stat, _props$location3, _props$location3$stat, _props$location4, _props$location4$stat, _props$location5, _props$location5$stat;\n\n    console.log(props);\n    console.log((props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.filters) !== undefined);\n    console.log(props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : (_props$location2$stat = _props$location2.state) === null || _props$location2$stat === void 0 ? void 0 : _props$location2$stat.currentWeathers);\n    super(props);\n\n    this.internationalizeDescriptions = descriptions => {\n      console.log(descriptions.data);\n      return descriptions.data.map(description => ({\n        \"name\": i18n.t(\"common.description.\" + description.originalValue),\n        \"id\": description.id,\n        \"originalValue\": description.originalValue\n      }));\n    };\n\n    this.internationalizeCountries = countries => {\n      console.log(countries.data);\n      return countries.data.map(country => {\n        // console.log(country)\n        return {\n          \"countryName\": i18n.t(\"common.countryName.\" + country.originalCountryName),\n          \"id\": country.code,\n          \"originalCountryName\": country.originalCountryName\n        };\n      });\n    };\n\n    this.onChangeFilter = (event, filterName, filterOperator) => {\n      var index;\n\n      if (event === \"\" && keyExistsInArr(this.state.filters, filterName)) {\n        index = findIndexInFilters(this.state.filters, filterName);\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: false,\n          filters: changeFilters(index, filterName, filterOperator, this.state.filters)\n        }, function () {\n          this.refreshWeathers(this.state.sortBy, this.state.currentWeathers);\n        });\n      } else if (event !== \"\" && !keyExistsInArr(this.state.filters, filterName)) {\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: true,\n          filters: this.state.filters.concat([{\n            [filterName]: {\n              [filterOperator]: event\n            }\n          }])\n        }, function () {\n          this.refreshWeathers(this.state.sortBy, this.state.currentWeathers);\n        });\n      } else if (event !== \"\" && keyExistsInArr(this.state.filters, filterName)) {\n        index = findIndexInFilters(this.state.filters, filterName);\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: isAdditionalFilterCheck(event, index, filterName, filterOperator),\n          filters: addFilterOperatorToExistingFilterName(event, filterName, filterOperator, this.state.filters)\n        }, function () {\n          this.refreshWeathers(this.state.sortBy, this.state.currentWeathers);\n        });\n      } else {}\n    };\n\n    this.createForecast = () => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.paginate = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.getWeathersOnSpecificPage = () => {\n      const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n      const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n      return this.state.currentWeathers.slice(indexOfFirstPost, indexOfLastPost);\n    };\n\n    this.state = {\n      currentWeathers: (props === null || props === void 0 ? void 0 : (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : (_props$location3$stat = _props$location3.state) === null || _props$location3$stat === void 0 ? void 0 : _props$location3$stat.currentWeathers) !== undefined ? props.location.state.currentWeathers : [],\n      isAscending: true,\n      filters: (props === null || props === void 0 ? void 0 : (_props$location4 = props.location) === null || _props$location4 === void 0 ? void 0 : (_props$location4$stat = _props$location4.state) === null || _props$location4$stat === void 0 ? void 0 : _props$location4$stat.filters) !== undefined ? props.location.state.filters : [],\n      isFilter: (props === null || props === void 0 ? void 0 : (_props$location5 = props.location) === null || _props$location5 === void 0 ? void 0 : (_props$location5$stat = _props$location5.state) === null || _props$location5$stat === void 0 ? void 0 : _props$location5$stat.isFilter) === true,\n      currentPage: 1,\n      itemsPerPage: 100,\n      isAdditionalFilter: false,\n      pageNumbers: [],\n      showPages: 5,\n      filterComponent: null,\n      temperature: props.temperature\n    };\n  } //I added temperatureDropdownList, filterscomponent and header here because I do not want to rerender them\n  //on every update. I cant use shouldComponentUpdate because they either are not components or are functional\n  //meaning they are stateless\n\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n    console.log(this.state.temperature);\n\n    const descriptions = async internationalize => {\n      let desc = await WeatherCurrentService.retrieveAllDescriptions();\n      console.log(desc);\n      return internationalize(desc);\n    };\n\n    const countries = async internationalize => {\n      let countries = await WeatherCurrentService.retrieveAllCountries();\n      console.log(countries);\n      return internationalize(countries);\n    };\n\n    this.setState({\n      filterComponent: /*#__PURE__*/_jsxDEV(FiltersComponent, {\n        temperatureUnits: this.state.temperature.units,\n        countries: countries(this.internationalizeCountries),\n        descriptions: descriptions(this.internationalizeDescriptions),\n        onChangeMethod: this.onChangeFilter\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }, this)\n    }, function (props) {\n      var _props$location6, _props$location6$stat;\n\n      if ((props === null || props === void 0 ? void 0 : (_props$location6 = props.location) === null || _props$location6 === void 0 ? void 0 : (_props$location6$stat = _props$location6.state) === null || _props$location6$stat === void 0 ? void 0 : _props$location6$stat.isFromForecast) !== true) this.refreshWeathers();\n    });\n  }\n\n  refreshWeathers(sortBy, currentWeathers) {\n    console.log(this.state);\n    WeatherCurrentService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, currentWeathers).then(response => {\n      this.setState({\n        currentWeathers: response.data\n      });\n    }).then(() => {\n      if (sortBy) this.setState({\n        isAscending: !this.state.isAscending\n      });\n    }).then(() => {\n      if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({\n        isFilter: false\n      });\n    });\n  }\n\n  header() {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"_id\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.cityId\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"name\", this.state.currentWeathers),\n          children: i18n.t('current.header.cityName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lat\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.latitude\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lon\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.longitude\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"sys.countryName\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.country\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.humidity\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.humidity\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.feels_like\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.feelsLike\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.temperature\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_max\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.maximumTemperature\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_min\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.minimalTemperature\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weather.description\", this.state.currentWeathers),\n          children: i18n.t(\"current.header.description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this);\n  }\n\n  mainBody(currentPosts, temperature) {\n    console.log(temperature.units);\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: currentPosts.map(weather => {\n        var _convertTemperature, _convertTemperature2, _convertTemperature3, _convertTemperature4;\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/forecast\",\n                state: {\n                  \"lat\": weather.coord.lat,\n                  \"lon\": weather.coord.lon,\n                  \"filters\": this.state.filters,\n                  \"currentWeathers\": this.state.currentWeathers\n                }\n              },\n              children: weather.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i18n.t(`common.countryName.${weather.sys.countryName}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${(_convertTemperature = convertTemperature(temperature.units, weather.weatherMain.feels_like)) === null || _convertTemperature === void 0 ? void 0 : _convertTemperature.toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${(_convertTemperature2 = convertTemperature(temperature.units, weather.weatherMain.temp)) === null || _convertTemperature2 === void 0 ? void 0 : _convertTemperature2.toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${(_convertTemperature3 = convertTemperature(temperature.units, weather.weatherMain.temp_max)) === null || _convertTemperature3 === void 0 ? void 0 : _convertTemperature3.toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${(_convertTemperature4 = convertTemperature(temperature.units, weather.weatherMain.temp_min)) === null || _convertTemperature4 === void 0 ? void 0 : _convertTemperature4.toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getWeatherDescription(weather)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    console.log(\"som v render\");\n    console.log(this.props);\n    const currentPaginatedWeathers = this.getWeathersOnSpecificPage();\n\n    let descriptions = async internationalize => internationalize(await WeatherCurrentService.retrieveAllDescriptions());\n\n    let countries = async internationalize => internationalize(await WeatherCurrentService.retrieveAllCountries());\n\n    let filters = /*#__PURE__*/_jsxDEV(FiltersComponent, {\n      temperatureUnits: this.props.temperature.units,\n      countries: countries(this.internationalizeCountries),\n      descriptions: descriptions(this.internationalizeDescriptions),\n      filters: this.state.filters,\n      onChangeMethod: this.onChangeFilter,\n      temperature: this.props.temperature\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }, this);\n\n    const pagination = /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: this.state.currentPage,\n      showPages: this.state.showPages,\n      itemsPerPage: this.state.itemsPerPage,\n      totalItems: this.state.currentWeathers.length,\n      paginate: this.paginate\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 28\n    }, this);\n\n    let container = [filters, pagination];\n    if (this.state.currentWeathers) container.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"weatherTable\",\n      children: [this.header(), this.mainBody(currentPaginatedWeathers, this.props.temperature)]\n    }, nanoid(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 28\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherCurrent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/WeatherCurrent.js"],"names":["React","WeatherCurrentService","Pagination","FiltersComponent","Link","getWeatherDescription","convertTemperature","keyExistsInArr","findIndexInFilters","changeFilters","addFilterOperatorToExistingFilterName","isAdditionalFilterCheck","nanoid","i18n","WeatherCurrent","Component","constructor","props","console","log","location","state","filters","undefined","currentWeathers","internationalizeDescriptions","descriptions","data","map","description","t","originalValue","id","internationalizeCountries","countries","country","originalCountryName","code","onChangeFilter","event","filterName","filterOperator","index","setState","currentPage","isFilter","isAdditionalFilter","refreshWeathers","sortBy","concat","createForecast","paginate","page","getWeathersOnSpecificPage","indexOfLastPost","itemsPerPage","indexOfFirstPost","slice","isAscending","pageNumbers","showPages","filterComponent","temperature","componentDidMount","internationalize","desc","retrieveAllDescriptions","retrieveAllCountries","units","isFromForecast","retrieveAllWeathers","then","response","header","mainBody","currentPosts","weather","_id","pathname","coord","lat","lon","name","sys","countryName","weatherMain","humidity","feels_like","toFixed","abbreviation","temp","temp_max","temp_min","render","currentPaginatedWeathers","pagination","length","container","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport WeatherCurrentService from '../../adapters/WeatherCurrentService';\nimport Pagination from '../current/Pagination'\nimport FiltersComponent from './Filters'\nimport { Link } from \"react-router-dom\";\nimport {getWeatherDescription, \n    convertTemperature,\n    keyExistsInArr,\n    findIndexInFilters,\n    changeFilters,\n    addFilterOperatorToExistingFilterName,\n    isAdditionalFilterCheck,\n    } from '../../businessLogic/WeatherBusinessLogic';\nimport '../../styles/common/Header.scss';\nimport { nanoid } from \"nanoid\";\nimport i18n from 'i18next'\n\nclass WeatherCurrent extends React.Component {\n    constructor(props) {\n        console.log(props)\n        console.log(props?.location?.state?.filters !== undefined )\n        console.log(props?.location?.state?.currentWeathers )\n        super(props)\n        this.state = {\n            currentWeathers:  props?.location?.state?.currentWeathers !== undefined ? props.location.state.currentWeathers : [] ,\n            isAscending: true,\n            filters: props?.location?.state?.filters !== undefined ? props.location.state.filters : [] ,\n            isFilter : props?.location?.state?.isFilter === true ,\n            currentPage : 1,\n            itemsPerPage : 100,\n            isAdditionalFilter : false,\n            pageNumbers : [],\n            showPages: 5,\n            filterComponent: null,\n            temperature: props.temperature\n        }\n    }\n\n    //I added temperatureDropdownList, filterscomponent and header here because I do not want to rerender them\n    //on every update. I cant use shouldComponentUpdate because they either are not components or are functional\n    //meaning they are stateless\n    async componentDidMount() {\n        console.log(\"componentDidMount\")\n        console.log(this.state.temperature)\n        const descriptions = async(internationalize) => {let desc =await WeatherCurrentService.retrieveAllDescriptions(); console.log(desc); return  internationalize(desc)}\n        const countries = async(internationalize) => {let countries =await WeatherCurrentService.retrieveAllCountries(); console.log(countries); return  internationalize(countries)}\n        this.setState({\n            filterComponent: <FiltersComponent key={nanoid()} temperatureUnits = {this.state.temperature.units} countries = {countries(this.internationalizeCountries)}\n            descriptions = {descriptions(this.internationalizeDescriptions)} onChangeMethod={this.onChangeFilter} />\n        },\n            function(props) {if (props?.location?.state?.isFromForecast !== true) this.refreshWeathers()}\n        )\n        \n    }\n    internationalizeDescriptions = (descriptions) => {\n        console.log(descriptions.data)\n        return descriptions.data.map( (description) => (\n            {\"name\" : i18n.t(\"common.description.\" + description.originalValue), \"id\": description.id, \"originalValue\" : description.originalValue}\n        ))\n    }\n\n    internationalizeCountries = (countries) => {\n        console.log(countries.data)\n        return countries.data.map( (country) => {\n            // console.log(country)\n         return {\"countryName\" : i18n.t(\"common.countryName.\" + country.originalCountryName), \"id\": country.code, \"originalCountryName\" : country.originalCountryName}\n        })\n    }\n    refreshWeathers(sortBy, currentWeathers) {\n        console.log(this.state)\n        WeatherCurrentService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, currentWeathers)\n            .then(\n                response => {\n                    this.setState({ currentWeathers: response.data })\n                }\n            ).then( () => {if (sortBy) this.setState({isAscending : !this.state.isAscending})}\n            ).then( () => {if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({isFilter : false})})\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onChangeFilter = (event, filterName, filterOperator) => {\n        var index;\n\n        if (event === \"\" && keyExistsInArr(this.state.filters,filterName))  {\n\n            index = findIndexInFilters(this.state.filters, filterName)\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : false, filters : changeFilters(index, filterName, filterOperator, this.state.filters)}, function () {\n                this.refreshWeathers(this.state.sortBy, this.state.currentWeathers)\n            })\n        }\n\n        else if (event !== \"\" && !(keyExistsInArr(this.state.filters, filterName))){\n\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : true,\n                 filters: this.state.filters.concat([{[filterName]: {[filterOperator] : event}}])}, function () {\n                this.refreshWeathers(this.state.sortBy, this.state.currentWeathers)\n            })\n\n        }\n\n        else if (event !== \"\" && (keyExistsInArr(this.state.filters, filterName))){\n           \n            index = findIndexInFilters(this.state.filters, filterName)\n            \n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : isAdditionalFilterCheck(event, index, filterName, filterOperator), \n                filters : addFilterOperatorToExistingFilterName(event, filterName, filterOperator, this.state.filters)}, function() {\n                    this.refreshWeathers(this.state.sortBy, this.state.currentWeathers)\n            })\n           \n        }\n        else {\n\n        }\n    }\n\n    header(){\n       return (<thead className=\"header\">\n       <tr>\n           <th onClick={() =>this.refreshWeathers(\"_id\", this.state.currentWeathers) }>{i18n.t(\"current.header.cityId\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"name\", this.state.currentWeathers) }>{ i18n.t('current.header.cityName')}</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lat\", this.state.currentWeathers) }>{i18n.t(\"current.header.latitude\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lon\", this.state.currentWeathers) }>{i18n.t(\"current.header.longitude\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"sys.countryName\", this.state.currentWeathers) }>{i18n.t(\"current.header.country\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.humidity\", this.state.currentWeathers) }>{i18n.t(\"current.header.humidity\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.feels_like\", this.state.currentWeathers) }>{i18n.t(\"current.header.feelsLike\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp\", this.state.currentWeathers) }>{i18n.t(\"current.header.temperature\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_max\", this.state.currentWeathers) }>{i18n.t(\"current.header.maximumTemperature\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_min\", this.state.currentWeathers) }>{i18n.t(\"current.header.minimalTemperature\")}</th>\n           <th onClick={() =>this.refreshWeathers(\"weather.description\", this.state.currentWeathers) }>{i18n.t(\"current.header.description\")}</th>                                \n       </tr>\n   </thead>)\n   }\n\ncreateForecast = ()=>{\n    return (\n        <Link  to= '/forecast'></Link>\n    );\n}\n\n   mainBody(currentPosts, temperature){\n       console.log(temperature.units)\n    return (\n\n    <tbody>\n        {\n            currentPosts.map(\n                weather =>{\n                    return (<tr key={nanoid()}>\n                        <td>{weather._id}</td>\n                        <td> <Link to={{pathname: \"/forecast\", state: {\"lat\": weather.coord.lat, \"lon\": weather.coord.lon, \"filters\": this.state.filters, \"currentWeathers\": this.state.currentWeathers} }}>{weather.name}</Link></td>\n                        <td>{weather.coord.lat}</td>\n                        <td>{weather.coord.lon}</td>\n                        <td>{i18n.t(`common.countryName.${weather.sys.countryName}`)}</td>\n                        <td>{weather.weatherMain.humidity}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.feels_like)?.toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp)?.toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp_max)?.toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp_min)?.toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{getWeatherDescription(weather)}</td>\n                    </tr>)}\n            )\n        }\n        </tbody>\n    )\n   }\n\n    paginate = (page) => {\n       this.setState({currentPage : page})\n    }\n\n    getWeathersOnSpecificPage = () => {\n        const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n        const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n        return this.state.currentWeathers.slice(indexOfFirstPost, indexOfLastPost);\n    }\n\n    render() {\n        console.log(\"som v render\")\n        console.log(this.props)\n        const currentPaginatedWeathers = this.getWeathersOnSpecificPage()\n        let descriptions = async(internationalize) => internationalize(await WeatherCurrentService.retrieveAllDescriptions())\n        let countries = async(internationalize) => internationalize(await WeatherCurrentService.retrieveAllCountries())\n\n        let filters = <FiltersComponent key={nanoid()} temperatureUnits = {this.props.temperature.units} countries = {countries(this.internationalizeCountries)}\n            descriptions = {descriptions(this.internationalizeDescriptions)}\n            filters = {this.state.filters} onChangeMethod={this.onChangeFilter} temperature={this.props.temperature} />\n\n        const pagination = <Pagination key={nanoid()} currentPage={this.state.currentPage} showPages={this.state.showPages}\n        itemsPerPage = {this.state.itemsPerPage} totalItems = {this.state.currentWeathers.length} paginate={this.paginate}/>\n        let container= [filters, pagination]\n\n        if (this.state.currentWeathers)\n            container.push(<table key={nanoid()} className=\"weatherTable\">\n                {this.header()}\n                {this.mainBody(currentPaginatedWeathers, this.props.temperature)}\n            </table>\n            )\n\n        return (\n            <div className=\"container\">\n\n                {container}\n            </div>\n        )\n         \n    }\n}\nexport default WeatherCurrent\n"]},"metadata":{},"sourceType":"module"}