{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080'; // const COURSE_API_URL = 'tvoje-pocasie.herokuapp.com'\n// const COURSE_API_URL = process.env.HOST || 'http://localhost:8080'\n\nconst WEATHER_CURRENT_API_URL = `${COURSE_API_URL}/weather/current`;\n\nclass WeatherService {\n  constructor() {\n    this.retrieveAllCountries = async () => await axios.get(`${WEATHER_CURRENT_API_URL}/countries`);\n\n    this.retrieveAllDescriptions = async () => await axios.get(`${WEATHER_CURRENT_API_URL}/descriptions`);\n  }\n\n  retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n    console.log(\"filters: \");\n    console.log(process.env);\n    var filterString = this.buildFilterSt(filters);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filterString,\n      isFilter,\n      isAdditionalFilter\n    };\n    return axios.post(`${WEATHER_CURRENT_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n  buildFilterString(filters) {\n    var filterString = \"\";\n\n    for (var i = 0; i <= (filters === null || filters === void 0 ? void 0 : filters.length) - 1; ++i) {\n      filterString += JSON.stringify(filters[i]);\n      if (filters[i + 1]) filterString += \",\";\n    }\n\n    return filterString;\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/adapters/WeatherCurrentService.js"],"names":["axios","COURSE_API_URL","WEATHER_CURRENT_API_URL","WeatherService","retrieveAllCountries","get","retrieveAllDescriptions","retrieveAllWeathers","sortBy","isAscending","filters","isFilter","isAdditionalFilter","weathers","console","log","process","env","filterString","buildFilterSt","params","post","buildFilterString","i","length","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB,C,CACA;AACA;;AACA,MAAMC,uBAAuB,GAAI,GAAED,cAAe,kBAAlD;;AAEA,MAAME,cAAN,CAAqB;AAAA;AAAA,SAwBjBC,oBAxBiB,GAwBK,YAAa,MAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEH,uBAAwB,YAArC,CAxBzB;;AAAA,SAyBjBI,uBAzBiB,GAyBS,YAAY,MAAMN,KAAK,CAACK,GAAN,CAAW,GAAEH,uBAAwB,eAArC,CAzB3B;AAAA;;AAEjBK,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,kBAAzC,EAA6DC,QAA7D,EAAuE;AACtFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;AACA,QAAIC,YAAY,GAAG,KAAKC,aAAL,CAAmBT,OAAnB,CAAnB;AACA,QAAG,CAACG,QAAJ,EACIA,QAAQ,GAAG,EAAX;AACJ,UAAMO,MAAM,GAAG;AACXZ,MAAAA,MADW;AACHC,MAAAA,WADG;AACUS,MAAAA,YADV;AACwBP,MAAAA,QADxB;AACkCC,MAAAA;AADlC,KAAf;AAGA,WAAOZ,KAAK,CAACqB,IAAN,CAAY,GAAEnB,uBAAwB,kBAAtC,EAAyDW,QAAzD,EAAkE;AAACO,MAAAA;AAAD,KAAlE,CAAP;AACH;;AAEDE,EAAAA,iBAAiB,CAACZ,OAAD,EAAS;AACtB,QAAIQ,YAAY,GAAG,EAAnB;;AACA,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAAAb,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEc,MAAT,IAAgB,CAApC,EAAuC,EAAED,CAAzC,EAA2C;AACvCL,MAAAA,YAAY,IAAGO,IAAI,CAACC,SAAL,CAAehB,OAAO,CAACa,CAAD,CAAtB,CAAf;AACA,UAAIb,OAAO,CAACa,CAAC,GAAC,CAAH,CAAX,EACIL,YAAY,IAAI,GAAhB;AACP;;AACD,WAAOA,YAAP;AACH;;AAtBgB;;AA6BrB,eAAe,IAAIf,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\n// const COURSE_API_URL = 'tvoje-pocasie.herokuapp.com'\n// const COURSE_API_URL = process.env.HOST || 'http://localhost:8080'\nconst WEATHER_CURRENT_API_URL = `${COURSE_API_URL}/weather/current`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n        console.log(\"filters: \")\n        console.log(process.env)\n        var filterString = this.buildFilterSt(filters)\n        if(!weathers)\n            weathers = []\n        const params = {\n            sortBy, isAscending, filterString, isFilter, isAdditionalFilter\n        }\n        return axios.post(`${WEATHER_CURRENT_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify(filters[i]);\n            if (filters[i+1])\n                filterString += \",\"\n        }\n        return filterString\n    }\n\n    retrieveAllCountries =async  () => await  axios.get(`${WEATHER_CURRENT_API_URL}/countries`)\n    retrieveAllDescriptions = async () => await axios.get(`${WEATHER_CURRENT_API_URL}/descriptions`)\n\n\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}