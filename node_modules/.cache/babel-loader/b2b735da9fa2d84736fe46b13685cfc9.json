{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.cityName\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.latitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.latitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.longitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.longitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.humidityFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.humidityTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.feelTemperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.feelTemperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMaxFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMaxTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMinFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMinTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: i18n.t(\"current.filters.pickDescriptions\"),\n      options: changeLanguage(props.descriptions),\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: i18n.t(\"current.filters.pickCountries\"),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst internationalizeDescriptions = descriptions => {\n  // i18n.changeLanguage(\"sk\");\n  descriptions.forEach(description => {\n    console.log(\"description i18n: \" + i18n.t(`common.description.${description.name}`));\n    console.log({\n      \"name\": i18n.t(`common.description.${description.name}`),\n      \"id\": description.id\n    });\n    description.name = i18n.t(`common.description.${description.name}`); // return {\"name\" : i18n.t(`common.description.${description.name}`), \"id\": description.id}\n\n    return;\n  });\n  descriptions.forEach(description => {\n    console.log(\"description: \" + \" name: \" + description.name + \" id: \" + description.id);\n  });\n  return descriptions;\n}; // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromSelectedItems = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","t","event","target","value","isNumber","calculateKelvins","temperatureUnits","changeLanguage","descriptions","makeStringFromSelectedItems","countries","internationalizeDescriptions","forEach","description","console","log","name","id","temperatureValue","parseFloat","toString","item","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","reduce"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    return (\n        <form className=\"currentFiltersWrappes\">\n\n                {/* <p>Latitude</p> */}\n                {<input placeholder= {i18n.t(\"current.filters.cityName\")} onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n\n                {<input placeholder= {i18n.t(\"current.filters.latitudeFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.latitudeTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.longitudeFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.longitudeTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.humidityFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.humidityTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.feelTemperatureFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.feelTemperatureTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureFrom\" )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureTo\" )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMaxFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMaxTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMinFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMinTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect placeholder={i18n.t(\"current.filters.pickDescriptions\")} options = {changeLanguage(props.descriptions)} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect placeholder={i18n.t(\"current.filters.pickCountries\")} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\nconst      internationalizeDescriptions = (descriptions) => {\n    // i18n.changeLanguage(\"sk\");\n    descriptions.forEach(description => {\n        console.log(\"description i18n: \" + i18n.t(`common.description.${description.name}`))\n            console.log( {\"name\" : i18n.t(`common.description.${description.name}`), \"id\": description.id})\n            description.name = i18n.t(`common.description.${description.name}`)\n        // return {\"name\" : i18n.t(`common.description.${description.name}`), \"id\": description.id}\n        return;\n    })\n    descriptions.forEach((description) =>{\n    console.log(\"description: \" +  \" name: \" + description.name + \" id: \" + description.id)\n    })\n    return descriptions\n}\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromSelectedItems= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}