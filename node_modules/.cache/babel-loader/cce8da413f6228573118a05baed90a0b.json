{"ast":null,"code":"import i18n from 'i18next';\nexport const getWeatherDescription = weather => {\n  var weatherItemReduce = (prevVal, currVal, idx) => {\n    console.log(\"currVal.description: \" + currVal.description);\n    return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n  };\n\n  return weather.weather.reduce(weatherItemReduce, '');\n};\nexport const displayDateTime = dateTime => {\n  return dateTime.toLocaleString(\"sk-SK\");\n};\nexport const convertTemperature = (convertTo, temp) => {\n  if (convertTo === \"celsius\") return temp - 273.15;else if (convertTo === \"fahrenheit\") return (temp - 273.15) * 1.8 + 32;else return temp;\n};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/businessLogic/WeatherBusinessLogic.js"],"names":["i18n","getWeatherDescription","weather","weatherItemReduce","prevVal","currVal","idx","console","log","description","reduce","displayDateTime","dateTime","toLocaleString","convertTemperature","convertTo","temp"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAO,MAAMC,qBAAqB,GAAIC,OAAD,IAAa;AAC9C,MAAIC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,KAA2B;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BH,OAAO,CAACI,WAA9C;AACA,WAAOH,GAAG,KAAK,CAAR,GAAaD,OAAO,CAACI,WAArB,GAAqCL,OAAD,GAAY,IAAZ,GAAoBC,OAAO,CAACI,WAAvE;AACH,GAHD;;AAIA,SAAOP,OAAO,CAACA,OAAR,CAAgBQ,MAAhB,CAAuBP,iBAAvB,EAA0C,EAA1C,CAAP;AACH,CANM;AAQP,OAAO,MAAMQ,eAAe,GAAIC,QAAD,IAAc;AACzC,SAAOA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACnD,MAAID,SAAS,KAAK,SAAlB,EACI,OAAOC,IAAI,GAAG,MAAd,CADJ,KAEK,IAAID,SAAS,KAAK,YAAlB,EACD,OAAO,CAACC,IAAI,GAAE,MAAP,IAAiB,GAAjB,GAAuB,EAA9B,CADC,KAEA,OAAOA,IAAP;AACR,CANM","sourcesContent":["import i18n from 'i18next'\nexport const getWeatherDescription = (weather) => {\n    var weatherItemReduce = (prevVal, currVal, idx) => {\n        console.log(\"currVal.description: \" + currVal.description)\n        return idx === 0 ? (currVal.description) : (prevVal) + \", \" + (currVal.description);\n    }\n    return weather.weather.reduce(weatherItemReduce, '')\n}\n\nexport const displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nexport const convertTemperature = (convertTo, temp) => {\n    if (convertTo === \"celsius\")\n        return temp - 273.15\n    else if (convertTo === \"fahrenheit\")\n        return (temp -273.15) * 1.8 + 32\n    else return temp\n}"]},"metadata":{},"sourceType":"module"}