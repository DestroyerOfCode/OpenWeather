{"ast":null,"code":"import{NEW_FILTER}from'./Types';export var fetchPosts=function fetchPosts(){return function(dispatch){fetch('https://jsonplaceholder.typicode.com/posts').then(function(res){return res.json();}).then(function(posts){return dispatch({type:FETCH_POSTS,payload:posts});});};};export var createFilter=function createFilter(postData){return function(dispatch){fetch('https://jsonplaceholder.typicode.com/posts',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(postData)}).then(function(res){return res.json();}).then(function(post){return dispatch({type:NEW_POST,payload:post});});};};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/actions/WeatherCurrentActions.js"],"names":["NEW_FILTER","fetchPosts","dispatch","fetch","then","res","json","posts","type","FETCH_POSTS","payload","createFilter","postData","method","headers","body","JSON","stringify","post","NEW_POST"],"mappings":"AAAA,OAASA,UAAT,KAA2B,SAA3B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAAC,QAAQ,CAAI,CAC1CC,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAG,KAAK,QACTL,CAAAA,QAAQ,CAAC,CACPM,IAAI,CAAEC,WADC,CAEPC,OAAO,CAAEH,KAFF,CAAD,CADC,EAFb,EAQD,CATyB,EAAnB,CAWP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,QAAQ,QAAI,UAAAV,QAAQ,CAAI,CAClDC,KAAK,CAAC,4CAAD,CAA+C,CAClDU,MAAM,CAAE,MAD0C,CAElDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFyC,CAKlDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAL4C,CAA/C,CAAL,CAOGR,IAPH,CAOQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAPX,EAQGF,IARH,CAQQ,SAAAc,IAAI,QACRhB,CAAAA,QAAQ,CAAC,CACPM,IAAI,CAAEW,QADC,CAEPT,OAAO,CAAEQ,IAFF,CAAD,CADA,EARZ,EAcD,CAfmC,EAA7B","sourcesContent":["import { NEW_FILTER } from './Types';\n\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      })\n    );\n};\n\nexport const createFilter = postData => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(post =>\n      dispatch({\n        type: NEW_POST,\n        payload: post\n      })\n    );\n};"]},"metadata":{},"sourceType":"module"}