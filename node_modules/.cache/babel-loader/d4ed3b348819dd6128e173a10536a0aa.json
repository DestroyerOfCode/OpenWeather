{"ast":null,"code":"import _slicedToArray from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import WeatherForecastService from'../../../adapters/WeatherForecastService';import{getWeatherDescription,displayDateTime,convertTemperature}from'../../../businessLogic/WeatherBusinessLogic';import{temperatureDropdownList}from'../../../buildingBlocks/commonBuildingBlocks.js';import'../../../styles/common/Header.scss';function WeatherForecastComponent(props){console.log(\"som vo forecast component\");console.log(\"props: \"+JSON.stringify(props.history.location.state));var _useState=useState({}),_useState2=_slicedToArray(_useState,2),dailyWeatherForecast=_useState2[0],setDailyWeatherForecast=_useState2[1];var _useState3=useState({units:\"celsius\",abbreviation:\"Â°C\"}),_useState4=_slicedToArray(_useState3,2),temperature=_useState4[0],setTemperature=_useState4[1];useEffect(function(){console.log(\"som v useEffect forecast component\");WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon,\"Current,Hourly,Minutely\").then(function(response){return setDailyWeatherForecast(response.data);});},[props.history.location.state.lat,props.history.location.state.lon]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"div\",{children:temperatureDropdownList(function(units,abbreviation){setTemperature({\"units\":units,\"abbreviation\":abbreviation});})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"weatherTable\",children:[createHeader.call(),createMainBody(dailyWeatherForecast,temperature)]})})]})});}var createMainBody=function createMainBody(dailyWeatherForecast,temperature){var _dailyWeatherForecast;return dailyWeatherForecast===null||dailyWeatherForecast===void 0?void 0:(_dailyWeatherForecast=dailyWeatherForecast.daily)===null||_dailyWeatherForecast===void 0?void 0:_dailyWeatherForecast.map(function(dailyWeather){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:displayDateTime(new Date(dailyWeather.sunrise*1000))}),/*#__PURE__*/_jsx(\"td\",{children:displayDateTime(new Date(dailyWeather.sunset*1000))}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.day).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.min).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.max).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.night).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.eve).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.temp.morn).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.feels_like.day).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.feels_like.night).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.feels_like.eve).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(convertTemperature(temperature.units,dailyWeather.feels_like.morn).toFixed(2)).concat(temperature.abbreviation)}),/*#__PURE__*/_jsx(\"td\",{children:dailyWeather.wind_speed}),/*#__PURE__*/_jsx(\"td\",{children:dailyWeather.wind_deg}),/*#__PURE__*/_jsx(\"td\",{children:getWeatherDescription(dailyWeather)})]},dailyWeather.dt);});};var createHeader=function createHeader(){return/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"sunrise\"}),/*#__PURE__*/_jsx(\"th\",{children:\"sunset\"}),/*#__PURE__*/_jsx(\"th\",{children:\"temp\"}),/*#__PURE__*/_jsx(\"th\",{children:\"min\"}),/*#__PURE__*/_jsx(\"th\",{children:\"max\"}),/*#__PURE__*/_jsx(\"th\",{children:\"night\"}),/*#__PURE__*/_jsx(\"th\",{children:\"evening\"}),/*#__PURE__*/_jsx(\"th\",{children:\"morning\"}),/*#__PURE__*/_jsx(\"th\",{children:\"feels like day\"}),/*#__PURE__*/_jsx(\"th\",{children:\"feels like night\"}),/*#__PURE__*/_jsx(\"th\",{children:\"feels like evening\"}),/*#__PURE__*/_jsx(\"th\",{children:\"feels like morning\"}),/*#__PURE__*/_jsx(\"th\",{children:\"wind speed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"wind deg\"}),/*#__PURE__*/_jsx(\"th\",{children:\"description\"})]})});};export default WeatherForecastComponent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/forecast/daily/WeatherForecastDaily.js"],"names":["React","useState","useEffect","WeatherForecastService","getWeatherDescription","displayDateTime","convertTemperature","temperatureDropdownList","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","units","abbreviation","temperature","setTemperature","getDailyForecastByCityName","lat","lon","then","response","data","createHeader","call","createMainBody","daily","map","dailyWeather","Date","sunrise","sunset","temp","day","toFixed","min","max","night","eve","morn","feels_like","wind_speed","wind_deg","dt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../../../adapters/WeatherForecastService';\nimport {getWeatherDescription, displayDateTime, convertTemperature} from '../../../businessLogic/WeatherBusinessLogic';\nimport {temperatureDropdownList} from '../../../buildingBlocks/commonBuildingBlocks.js'\nimport '../../../styles/common/Header.scss'\n function WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({} )\n    const [temperature, setTemperature] = useState({units : \"celsius\", abbreviation : \"Â°C\"})\n    \n    useEffect(() =>{\n       \n        console.log(\"som v useEffect forecast component\")\n        WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon, \"Current,Hourly,Minutely\")\n        .then( response => setDailyWeatherForecast(response.data)) \n        }, [props.history.location.state.lat, props.history.location.state.lon])\n\n    return (\n    <div>\n        <tbody>\n            <div>\n                {temperatureDropdownList( (units, abbreviation ) => {\n                    setTemperature({\"units\" : units, \"abbreviation\" : abbreviation})})\n                    }\n            </div>\n            <div>\n                <table className=\"weatherTable\">\n                    {createHeader.call()}\n                    {createMainBody(dailyWeatherForecast,  temperature)}\n                </table>\n            </div>\n        </tbody>\n    </div>)\n}\n\nconst createMainBody = (dailyWeatherForecast, temperature) => {\n    return (\n        dailyWeatherForecast?.daily?.map(dailyWeather =>{\n            return( \n                <tr key ={ dailyWeather.dt}>\n                    <td>{displayDateTime(new Date(dailyWeather.sunrise * 1000))}</td>\n                    <td>{displayDateTime(new Date(dailyWeather.sunset * 1000))}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.day).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.min).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.max).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.night).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.eve).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.morn).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.day).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.night).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.eve).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.morn).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{dailyWeather.wind_speed}</td>\n                    <td>{dailyWeather.wind_deg}</td>\n                    <td>{getWeatherDescription(dailyWeather)}</td>\n                </tr>)\n        })\n    )\n}\n\nconst createHeader = () => {\n    return ( \n    <thead>\n        <tr>\n            <th>sunrise</th>\n            <th>sunset</th>\n            <th>temp</th>\n            <th>min</th>\n            <th>max</th>\n            <th>night</th>\n            <th>evening</th>\n            <th>morning</th>\n            <th>feels like day</th>\n            <th>feels like night</th>\n            <th>feels like evening</th>\n            <th>feels like morning</th>\n            <th>wind speed</th>\n            <th>wind deg</th>\n            <th>description</th>\n        </tr>\n    </thead>)\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}