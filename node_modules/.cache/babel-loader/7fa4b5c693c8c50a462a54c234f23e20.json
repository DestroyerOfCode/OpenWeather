{"ast":null,"code":"import i18n from'i18next';export var getWeatherDescription=function getWeatherDescription(weather){var weatherItemReduce=function weatherItemReduce(prevVal,currVal,idx){// console.log(\"currVal.description: \" + currVal.description)\nreturn idx===0?i18n.t(\"common.description.\".concat(currVal.description)):\"\".concat(prevVal)+\", \"+i18n.t(\"common.description.\".concat(currVal.description));};return weather.weather.reduce(weatherItemReduce,'');};export var displayDateTime=function displayDateTime(dateTime){return dateTime.toLocaleString(\"sk-SK\");};export var convertTemperature=function convertTemperature(convertTo,temp){// console.log(convertTo)\nif(convertTo===\"celsius\")return temp-273.15;else if(convertTo===\"fahrenheit\")return(temp-273.15)*1.8+32;else return temp;};export var internationalizeDescriptions=function internationalizeDescriptions(descriptions){return descriptions.map(function(description){return{\"name\":i18n.t(\"common.description.\"+description.originalValue),\"id\":description.id,\"originalValue\":description.originalValue};});};export var internationalizeCountries=function internationalizeCountries(descriptions){return descriptions.map(function(country){// console.log(country)\nreturn{\"countryName\":i18n.t(\"common.countryName.\"+country.originalCountryName),\"id\":country.code,\"originalCountryName\":country.originalCountryName};});};export var keyExistsInArr=function keyExistsInArr(arr,key){var exists=false;if(!Array.isArray(key)){arr===null||arr===void 0?void 0:arr.some(function(item){if(item.hasOwnProperty([key])){exists=true;return true;}else return false;});}//since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\nelse{arr===null||arr===void 0?void 0:arr.some(function(item){if(item.includes([key])){exists=true;return true;}else return false;});}return exists;};export var findIndexInFilters=function findIndexInFilters(arr,key){var indexOfKey=0;arr===null||arr===void 0?void 0:arr.some(function(filterName,index,filters){if(filterName.hasOwnProperty([key])){indexOfKey=index;return indexOfKey;}else return false;});return indexOfKey;};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/businessLogic/WeatherBusinessLogic.js"],"names":["i18n","getWeatherDescription","weather","weatherItemReduce","prevVal","currVal","idx","t","description","reduce","displayDateTime","dateTime","toLocaleString","convertTemperature","convertTo","temp","internationalizeDescriptions","descriptions","map","originalValue","id","internationalizeCountries","country","originalCountryName","code","keyExistsInArr","arr","key","exists","Array","isArray","some","item","hasOwnProperty","includes","findIndexInFilters","indexOfKey","filterName","index","filters"],"mappings":"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","sourcesContent":["import i18n from 'i18next'\nexport const getWeatherDescription = (weather) => {\n    var weatherItemReduce = (prevVal, currVal, idx) => {\n        // console.log(\"currVal.description: \" + currVal.description)\n        return idx === 0 ? i18n.t(`common.description.${currVal.description}`) : (`${prevVal}`) + \", \" + i18n.t(`common.description.${currVal.description}`);\n    }\n    return weather.weather.reduce(weatherItemReduce, '')\n}\n\nexport const displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nexport const convertTemperature = (convertTo, temp) => {\n    // console.log(convertTo)\n    if (convertTo === \"celsius\")\n        return temp - 273.15\n    else if (convertTo === \"fahrenheit\")\n        return (temp -273.15) * 1.8 + 32\n    else return temp\n}\n\nexport const internationalizeDescriptions = (descriptions) => {\n    return descriptions.map( (description) => (\n        {\"name\" : i18n.t(\"common.description.\" + description.originalValue), \"id\": description.id, \"originalValue\" : description.originalValue}\n    ))\n}\n\nexport const internationalizeCountries = (descriptions) => {\n    return descriptions.map( (country) => {\n        // console.log(country)\n     return {\"countryName\" : i18n.t(\"common.countryName.\" + country.originalCountryName), \"id\": country.code, \"originalCountryName\" : country.originalCountryName}\n    })\n}\n\nexport const keyExistsInArr = (arr, key) => {\n    let exists = false\n    if (!Array.isArray(key)){\n        arr?.some(item => {\n            if(item.hasOwnProperty([key])) {\n                exists = true;\n                return true\n            }\n            else return false\n        })\n    }\n    //since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\n    else{\n        arr?.some(item => {\n            if(item.includes([key])) {\n                exists = true;\n                return true\n            }\n            else return false\n        })\n    }\n    return exists\n}\n\nexport const findIndexInFilters = (arr, key) => {\n    let indexOfKey = 0\n    arr?.some((filterName, index, filters) => {\n        if(filterName.hasOwnProperty([key])){ \n            indexOfKey = index\n            return indexOfKey\n        }\n        else return false\n    })\n    return indexOfKey\n}\n"]},"metadata":{},"sourceType":"module"}