{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport { Trans, useTranslation } from \"react-i18next\";\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  console.log(\"filtersComponent im here\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeLanguage(\"en\", i18n),\n      children: \"EN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeLanguage(\"sk\", i18n),\n      children: \"SK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: t(\"filters.cityName\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"filters.latitudeFrom\",\n        children: \"latitudeFrom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }, this),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Latitude to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Longitude from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Longitude to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Humidity from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Humidity to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Feel temperature from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Feel temperature to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature max from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature max to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature min from\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature min to\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: \"Pick Descriptions\",\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: \"Pick Countries\",\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"/qWSPWp/J7j1umb0USKiHkyJ7Cw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  console.log(\"temperatureUnits:\" + temperatureUnits + \" and temperatureValue:\" + temperatureValue);\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst changeLanguage = (language, i18n) => {\n  i18n.changeLanguage(language);\n};\n\nconst isNumber = item => {\n  console.log(\"typeof: \" + typeof item);\n  console.log(\"isNan: \" + !isNaN(item));\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromSelectedItems = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","Trans","useTranslation","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","t","i18n","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","console","log","changeLanguage","event","target","value","isNumber","calculateKelvins","temperatureUnits","descriptions","makeStringFromSelectedItems","countries","temperatureValue","parseFloat","toString","language","item","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","name","reduce"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport { Trans, useTranslation } from \"react-i18next\";\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    const { t, i18n } = useTranslation();\n\n\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    console.log(\"filtersComponent im here\")\n    return (\n        <form className=\"currentFiltersWrappes\">\n                <button onClick={() => changeLanguage(\"en\", i18n)}>EN</button>\n                <button onClick={() => changeLanguage(\"sk\", i18n)}>SK</button>\n                {/* <p>Latitude</p> */}\n                {<input placeholder= {t(\"filters.cityName\")} onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n\n                {<input placeholder= {<Trans i18nKey=\"filters.latitudeFrom\">\n        latitudeFrom\n      </Trans>} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\")}}></input>}\n                {<input placeholder= \"Latitude to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= \"Longitude from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= \"Longitude to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= \"Humidity from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= \"Humidity to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= \"Feel temperature from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= \"Feel temperature to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature from\"  onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature to\"  onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature max from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature max to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature min from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature min to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect placeholder=\"Pick Descriptions\" options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect placeholder=\"Pick Countries\" options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    console.log(\"temperatureUnits:\" + temperatureUnits + \" and temperatureValue:\" + temperatureValue)\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\nconst changeLanguage = (language, i18n) => {\n    i18n.changeLanguage(language);\n};\n\nconst isNumber = (item) => {\n    console.log(\"typeof: \" + typeof item)\n    console.log(\"isNan: \" + !isNaN(item))\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromSelectedItems= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}