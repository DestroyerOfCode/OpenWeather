{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  useEffect(() => {\n    console.log(\"som v useEffect forecast component\");\n    console.log(\"func: \");\n    return getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon);\n  }); // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return dailyWeatherForecast;\n}\n\n_s(WeatherForecastComponent, \"bJ5teWGutBLkVhno6XsU0CImiiw=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n  var _dailyWeatherForecast, _dailyWeatherForecast2;\n\n  console.log(\"som v metode getDailyWeatherForecast\");\n  const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\");\n  console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: dailyWeatherForecastFunc === null || dailyWeatherForecastFunc === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecastFunc.data) === null || _dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast2 = _dailyWeatherForecast.daily) === null || _dailyWeatherForecast2 === void 0 ? void 0 : _dailyWeatherForecast2.map(dailyWeather => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyWeather.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 16\n            }, this)\n          }, dailyWeather.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","getDailyWeatherForecast","lat","lon","dailyWeatherForecastFunc","getDailyForecastByCityName","data","daily","map","dailyWeather","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEA,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAQQ,uBAAuB,CAACV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CAA/B;AACH,GAJQ,CAAT,CAPoC,CAapC;;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AAEA,SAAOA,oBAAP;AACH;;GAjBQT,wB;;KAAAA,wB;;AAmBT,MAAMW,uBAAuB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAAA;;AAChDX,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,QAAMW,wBAAwB,GAAG,MAAMf,sBAAsB,CAACgB,0BAAvB,CAAkDH,GAAlD,EAAuDC,GAAvD,EAA4D,yBAA5D,CAAvC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACC,SAAL,CAAeS,wBAAf,CAA3C;AACA,sBAAQ;AAAA,2BAAK;AAAA,6BACT;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBACCA,wBADD,aACCA,wBADD,gDACCA,wBAAwB,CAAEE,IAD3B,oFACC,sBAAgCC,KADjC,2DACC,uBAAuCC,GAAvC,CAA2CC,YAAY,IAAG;AACxD,8BAAQ;AAAA,mCACJ;AAAA,wBAAKA,YAAY,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADI,aAAWD,YAAY,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,kBAAR;AAGF,SAJA;AADD;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAR;AAUH,CAdD;;AAeA,eAAepB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({})\n    \n    useEffect(() =>{\n        console.log(\"som v useEffect forecast component\")\n        console.log(\"func: \" )\n        return (getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon));\n    })\n\n    // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n\n    return dailyWeatherForecast\n}\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\")\n    console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc))\n    return (<div><tbody>\n        <table className=\"table\">\n        {dailyWeatherForecastFunc?.data?.daily?.map(dailyWeather =>{\n           return( <tr key ={ dailyWeather.id}>\n               <td>{dailyWeather.id}</td>\n               </tr>)\n        })}\n        </table>\n    </tbody>\n    </div>)\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}