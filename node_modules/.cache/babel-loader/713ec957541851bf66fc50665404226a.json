{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  constructor() {\n    this.retrieveAllCountries = () => {\n      var countries = axios.get(`${WEATHER_API_URL}/countries`);\n      console.log(\"countries: \" + JSON.stringify(countries));\n      return countries;\n    };\n  }\n\n  retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n    var filterString = this.buildFilterString(filters);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filterString,\n      isFilter,\n      isAdditionalFilter\n    };\n    console.log(JSON.stringify(filters));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n  buildFilterString(filters) {\n    var filterString = \"\";\n    console.log(\"filters?.length: \" + (filters === null || filters === void 0 ? void 0 : filters.length));\n\n    for (var i = 0; i <= (filters === null || filters === void 0 ? void 0 : filters.length) - 1; ++i) {\n      filterString += JSON.stringify(filters[i]);\n      if (filters[i + 1]) filterString += \",\";\n    }\n\n    return filterString;\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllCountries","countries","get","console","log","JSON","stringify","retrieveAllWeathers","sortBy","isAscending","filters","isFilter","isAdditionalFilter","weathers","filterString","buildFilterString","params","post","length","i"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAAA;AAAA,SAwBjBC,oBAxBiB,GAwBM,MAAM;AACzB,UAAIC,SAAS,GAAGL,KAAK,CAACM,GAAN,CAAW,GAAEJ,eAAgB,YAA7B,CAAhB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA5B;AACA,aAAOA,SAAP;AACH,KA5BgB;AAAA;;AAEjBM,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,kBAAzC,EAA6DC,QAA7D,EAAuE;AACtF,QAAIC,YAAY,GAAG,KAAKC,iBAAL,CAAuBL,OAAvB,CAAnB;AACA,QAAG,CAACG,QAAJ,EACIA,QAAQ,GAAG,EAAX;AACJ,UAAMG,MAAM,GAAG;AACXR,MAAAA,MADW;AACHC,MAAAA,WADG;AACUK,MAAAA,YADV;AACwBH,MAAAA,QADxB;AACkCC,MAAAA;AADlC,KAAf;AAGIT,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAZ;AACJ,WAAOd,KAAK,CAACqB,IAAN,CAAY,GAAEnB,eAAgB,kBAA9B,EAAiDe,QAAjD,EAA0D;AAACG,MAAAA;AAAD,KAA1D,CAAP;AACH;;AAEDD,EAAAA,iBAAiB,CAACL,OAAD,EAAS;AACtB,QAAII,YAAY,GAAG,EAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBM,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEQ,MAA/B,CAAZ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,MAAT,IAAgB,CAApC,EAAuC,EAAEC,CAAzC,EAA2C;AACvCL,MAAAA,YAAY,IAAGT,IAAI,CAACC,SAAL,CAAeI,OAAO,CAACS,CAAD,CAAtB,CAAf;AACA,UAAIT,OAAO,CAACS,CAAC,GAAC,CAAH,CAAX,EACIL,YAAY,IAAI,GAAhB;AACP;;AACD,WAAOA,YAAP;AACH;;AAtBgB;;AA+BrB,eAAe,IAAIf,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n        var filterString = this.buildFilterString(filters)\n        if(!weathers)\n            weathers = []\n        const params = {\n            sortBy, isAscending, filterString, isFilter, isAdditionalFilter\n        }\n            console.log(JSON.stringify(filters))\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        console.log(\"filters?.length: \" + filters?.length)\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify(filters[i]);\n            if (filters[i+1])\n                filterString += \",\"\n        }\n        return filterString\n    }\n\n    retrieveAllCountries = () => {\n        var countries = axios.get(`${WEATHER_API_URL}/countries`)\n        console.log(\"countries: \" + JSON.stringify(countries))\n        return countries\n    }\n\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}