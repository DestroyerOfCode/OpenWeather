{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, filterOperator) {\n    //console.log('executed service')\n    console.log(\"Sort: \" + sortBy); // console.log(\"filters: \" + JSON.stringify(filters))\n\n    console.log(\"filterOperator: \" + filterOperator); // if ( filters)\n    //     filters =  JSON.stringify(filters)\n\n    const params = {\n      sortBy,\n      isAscending,\n      filterOperator\n    };\n    console.log(\"params: \" + params);\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, filters, {\n      params\n    });\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","filterOperator","console","log","params","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+C;AAC9D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUL,MAAtB,EAF8D,CAG9D;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBF,cAAjC,EAJ8D,CAM9D;AACA;;AACA,UAAMG,MAAM,GAAG;AACXN,MAAAA,MADW;AACHC,MAAAA,WADG;AACUE,MAAAA;AADV,KAAf;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,MAAzB;AACA,WAAOX,KAAK,CAACY,IAAN,CAAY,GAAEV,eAAgB,kBAA9B,EAAiDK,OAAjD,EAA0D;AAACI,MAAAA;AAAD,KAA1D,CAAP;AACH;;AAhBgB;;AAkBrB,eAAe,IAAIR,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, filterOperator) {\n        //console.log('executed service')\n        console.log(\"Sort: \" +sortBy)\n        // console.log(\"filters: \" + JSON.stringify(filters))\n        console.log(\"filterOperator: \" + filterOperator)\n\n        // if ( filters)\n        //     filters =  JSON.stringify(filters)\n        const params = {\n            sortBy, isAscending, filterOperator\n\n        }\n        console.log(\"params: \" + params )\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, filters, {params});\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}