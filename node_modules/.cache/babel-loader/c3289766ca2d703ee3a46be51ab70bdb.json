{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n    //console.log('executed service')\n    console.log(\"Sort: \" + sortBy); // console.log(\"filter: \" + JSON.stringify(filters))\n\n    console.log(\"filterOperator: \" + filterOperator); // console.log(\"weathers : \" + (weathers))\n    // console.log(\"weathers stringified : \" + JSON.stringify(weathers))\n\n    if (!filters.length) {\n      console.log(\"filters: \" + JSON.stringify(filters)); // filters =  \"\"\n    } else {\n      console.log(\"filter not: \" + JSON.stringify(filters));\n      console.log(\"filter not: \" + filters); // filters = JSON.stringify(filters)\n    }\n\n    if (!weathers) weathers = [];\n    weathers.filters = filters;\n    const params = {\n      sortBy,\n      isAscending,\n      filterOperator\n    };\n    console.log(\"params: \" + JSON.stringify(params));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","filterOperator","weathers","console","log","length","JSON","stringify","params","post","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,QAA/C,EAAyD;AACxE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUN,MAAtB,EAFwE,CAGxE;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,cAAjC,EAJwE,CAKxE;AACA;;AAEA,QAAG,CAACD,OAAO,CAACK,MAAZ,EAAmB;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcE,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA1B,EADe,CAEf;AACH,KAHD,MAII;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBE,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA7B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAkBJ,OAA9B,EAFA,CAIA;AACH;;AACD,QAAG,CAACE,QAAJ,EACIA,QAAQ,GAAG,EAAX;AACJA,IAAAA,QAAQ,CAACF,OAAT,GAAmBA,OAAnB;AACA,UAAMQ,MAAM,GAAG;AACXV,MAAAA,MADW;AACHC,MAAAA,WADG;AACWE,MAAAA;AADX,KAAf;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaE,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAzB;AACA,WAAOf,KAAK,CAACgB,IAAN,CAAY,GAAEd,eAAgB,kBAA9B,EAAiDO,QAAjD,EAA0D;AAACM,MAAAA,MAAD;AAASE,MAAAA,OAAO,EAAE;AAC/E,wBAAgB;AAD+D;AAAlB,KAA1D,CAAP;AAGH;;AA/BgB;;AAiCrB,eAAe,IAAId,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n        //console.log('executed service')\n        console.log(\"Sort: \" +sortBy)\n        // console.log(\"filter: \" + JSON.stringify(filters))\n        console.log(\"filterOperator: \" + filterOperator)\n        // console.log(\"weathers : \" + (weathers))\n        // console.log(\"weathers stringified : \" + JSON.stringify(weathers))\n\n        if(!filters.length){\n            console.log(\"filters: \" + JSON.stringify(filters))\n            // filters =  \"\"\n        }\n        else{\n            console.log(\"filter not: \" + JSON.stringify(filters))\n            console.log(\"filter not: \" + (filters))\n\n            // filters = JSON.stringify(filters)\n        }\n        if(!weathers)\n            weathers = []\n        weathers.filters = filters\n        const params = {\n            sortBy, isAscending,  filterOperator\n        }\n\n        console.log(\"params: \" + JSON.stringify(params) )\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params, headers: {\n            'Content-Type': 'application/json',\n        }});\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}