{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js\";\nimport React, { Component } from 'react';\nimport WeatherService from '../service/WeatherService';\nimport Pagination from './Pagination';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nclass WeatherListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFilterOperatorToExistingFilterName = (event, filterName, filterOperator) => {\n      const arr = this.state.filters;\n      arr.forEach((item, index, filters) => {\n        if (item.hasOwnProperty([filterName])) {\n          filters[index][filterName][filterOperator] = event;\n        }\n      });\n      return arr;\n    };\n\n    this.makeStringFromSelectedItems = items => {\n      var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n      };\n\n      return items.reduce(selectedItemsIntoString, '');\n    };\n\n    this.isNumber = item => {\n      console.log(\"typeof: \" + typeof item);\n      console.log(\"isNan: \" + !isNaN(item));\n      var isNumber = !isNaN(item);\n      if (!isNumber) alert('You must pick a number in this field');\n      return isNumber;\n    };\n\n    this.getWeatherDescription = weather => {\n      var weatherItemReduce = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n      };\n\n      return weather.weather.reduce(weatherItemReduce, '');\n    };\n\n    this.paginate = currentPage => {\n      this.setState({\n        currentPage: currentPage\n      }, function () {\n        console.log(\"currPage: \" + this.state.currentPage);\n      });\n    };\n\n    this.state = {\n      weathers: [],\n      isAscending: true,\n      filters: [],\n      isFilter: false,\n      currentPage: 1,\n      itemsPerPage: 1000,\n      loading: false,\n      isAdditionalFilter: false,\n      pageNumbers: [],\n      countries: [],\n      descriptions: []\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"som v componentDidMOunt weather list\");\n    const countries = await WeatherService.retrieveAllCountries();\n    const descriptions = await WeatherService.retrieveAllDescriptions();\n    this.setState({\n      countries: countries.data,\n      descriptions: descriptions.data\n    }, function () {\n      this.refreshWeathers();\n    });\n  }\n\n  refreshWeathers(sortBy, weathers) {\n    WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, weathers).then(response => {\n      this.setState({\n        weathers: response.data\n      });\n    }).then(() => {\n      if (sortBy) this.setState({\n        isAscending: !this.state.isAscending\n      });\n    }).then(() => {\n      if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({\n        isFilter: false\n      });\n    });\n  }\n\n  keyExistsInArr(arr, key) {\n    let exists = false;\n    console.log(\"arr inside keyExists: \" + JSON.stringify(arr));\n\n    if (!Array.isArray(key)) {\n      arr === null || arr === void 0 ? void 0 : arr.some(item => {\n        if (item.hasOwnProperty([key])) {\n          exists = true;\n          return true;\n        } else return false;\n      });\n    } //since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\n    else {\n        arr === null || arr === void 0 ? void 0 : arr.some(item => {\n          if (item.includes([key])) {\n            exists = true;\n            return true;\n          } else return false;\n        });\n      }\n\n    return exists;\n  }\n\n  findIndexInFilters(arr, key) {\n    let indexOfKey = 0;\n    arr === null || arr === void 0 ? void 0 : arr.some((filterName, index, filters) => {\n      if (filterName.hasOwnProperty([key])) {\n        indexOfKey = index;\n        return indexOfKey;\n      } else return false;\n    });\n    return indexOfKey;\n  }\n\n  changeFilters(index, filterName, filterOperator) {\n    let arr = this.state.filters;\n    console.log(\"arr inside changefilters: \" + JSON.stringify(arr));\n    if (arr[index][filterName][filterOperator]) delete arr[index][filterName][filterOperator];\n    if (Object.keys(arr[index][filterName]).length === 0) arr.splice(index, 1);\n    return arr;\n  }\n\n  onBlurEvent(event, filterName, filterOperator) {\n    console.log(\"event: \" + JSON.stringify(event));\n    console.log(\"filters: \" + JSON.stringify(this.state.filters));\n\n    if (event === \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      var index = this.findIndexInFilters(this.state.filters, filterName);\n      this.setState({\n        currentPage: 1,\n        isFilter: true,\n        isAdditionalFilter: false,\n        filters: this.changeFilters(index, filterName, filterOperator)\n      }, function () {\n        this.refreshWeathers(this.state.sortBy, this.state.weathers);\n      });\n    } else if (event !== \"\" && !this.keyExistsInArr(this.state.filters, filterName)) {\n      this.setState({\n        currentPage: 1,\n        isFilter: true,\n        isAdditionalFilter: true,\n        filters: this.state.filters.concat([{\n          [filterName]: {\n            [filterOperator]: event\n          }\n        }])\n      }, function () {\n        console.log(\"filters inside: \" + this.state.filters);\n        this.refreshWeathers(this.state.sortBy, this.state.weathers);\n      });\n    } else if (event !== \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      //if there are multiple countries and descriptions, backend must make a new query\n      //since no additional filter is added, only value. I am unable to send query request\n      //with an array element\n      const isAdditionalFilterWithContains = event.includes(\",\") ? false : true;\n      this.setState({\n        currentPage: 1,\n        isFilter: true,\n        isAdditionalFilter: isAdditionalFilterWithContains,\n        filters: this.addFilterOperatorToExistingFilterName(event, filterName, filterOperator)\n      }, function () {\n        this.refreshWeathers(this.state.sortBy, this.state.weathers);\n      });\n    } else {\n      console.log(\"inside 4\");\n    }\n  } // this closure's purpose is to create strings to be sent to query params, as no \n  // other way to send arrays exists\n\n\n  filters() {\n    //    console.log(\"coutnries: \" + JSON.stringify(this.state.countries))\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Id\",\n        onBlur: event => {\n          this.onBlurEvent(event.target.value, \"_id\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"City name\",\n        onBlur: event => {\n          this.onBlurEvent(event.target.value, \"name\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        options: this.state.countries,\n        displayValue: \"name\",\n        onSelect: event => {\n          this.onBlurEvent(this.makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n        },\n        onRemove: event => {\n          this.onBlurEvent(this.makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Country\",\n        onBlur: event => {\n          this.onBlurEvent(event.target.value, \"sys.country\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lat\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lat\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lon\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lon\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.humidity\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.humidity\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.feels_like\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.feels_like\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_max\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_max\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min smaller than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_min\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min bigger than\",\n        onBlur: event => {\n          if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_min\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        options: this.state.descriptions,\n        displayValue: \"name\",\n        onSelect: event => {\n          this.onBlurEvent(this.makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n        },\n        onRemove: event => {\n          this.onBlurEvent(this.makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this);\n  }\n\n  header() {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"_id\", this.state.weathers),\n          children: \"cityId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"name\", this.state.weathers),\n          children: \"city Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lat\", this.state.weathers),\n          children: \"latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lon\", this.state.weathers),\n          children: \"longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"sys.country\", this.state.weathers),\n          children: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers),\n          children: \"humidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers),\n          children: \"feels like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp\", this.state.weathers),\n          children: \"temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers),\n          children: \"maximum temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers),\n          children: \"minimal temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weather.description\", this.state.weathers),\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 16\n    }, this);\n  } // descriptions can be multiple per row, to display it I changed its elements to string delimetered by ','\n\n\n  mainBody(currentPosts) {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: currentPosts.map(weather => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.feels_like\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.temp_max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.temp_min\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.getWeatherDescription(weather)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, weather._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    console.log(\"som v render weather list\");\n\n    const pagination = /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: this.state.itemsPerPage,\n      totalItems: this.state.weathers.length,\n      paginate: this.paginate.bind()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 28\n    }, this);\n\n    console.log('after pagination creation');\n    const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n    const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n    const currentWeathers = this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n    let container = [this.filters(), pagination];\n    if (this.state.weathers) container.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [this.header(), this.mainBody(currentWeathers)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 28\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherListComponent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js"],"names":["React","Component","WeatherService","Pagination","Multiselect","WeatherListComponent","constructor","props","addFilterOperatorToExistingFilterName","event","filterName","filterOperator","arr","state","filters","forEach","item","index","hasOwnProperty","makeStringFromSelectedItems","items","selectedItemsIntoString","prevVal","currVal","idx","name","reduce","isNumber","console","log","isNaN","alert","getWeatherDescription","weather","weatherItemReduce","description","paginate","currentPage","setState","weathers","isAscending","isFilter","itemsPerPage","loading","isAdditionalFilter","pageNumbers","countries","descriptions","componentDidMount","retrieveAllCountries","retrieveAllDescriptions","data","refreshWeathers","sortBy","retrieveAllWeathers","then","response","keyExistsInArr","key","exists","JSON","stringify","Array","isArray","some","includes","findIndexInFilters","indexOfKey","changeFilters","Object","keys","length","splice","onBlurEvent","concat","isAdditionalFilterWithContains","target","value","header","mainBody","currentPosts","map","_id","coord","lat","lon","sys","country","weatherMain","humidity","feels_like","temp","temp_max","temp_min","render","pagination","bind","indexOfLastPost","indexOfFirstPost","currentWeathers","slice","container","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport WeatherService from '../service/WeatherService';\nimport Pagination from './Pagination';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nclass WeatherListComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            weathers: [],\n            isAscending: true,\n            filters: [],\n            isFilter : false,\n            currentPage : 1,\n            itemsPerPage : 1000,\n            loading : false,\n            isAdditionalFilter : false,\n            pageNumbers : [],\n            countries : [],\n            descriptions: []\n        }\n    }\n\n    async componentDidMount() {\n        console.log(\"som v componentDidMOunt weather list\")\n        const countries = await WeatherService.retrieveAllCountries()\n        const descriptions = await WeatherService.retrieveAllDescriptions()\n        this.setState({countries : countries.data, descriptions : descriptions.data}, function() {this.refreshWeathers();})\n        \n    }\n\n    refreshWeathers(sortBy, weathers) {\n\n        WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, weathers)\n            .then(\n                response => {\n                    this.setState({ weathers: response.data })\n                }\n            ).then( () => {if (sortBy) this.setState({isAscending : !this.state.isAscending})}\n            ).then( () => {if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({isFilter : false})})\n    }\n\n    keyExistsInArr(arr, key){\n        let exists = false\n        console.log(\"arr inside keyExists: \" + JSON.stringify(arr))\n        if (!Array.isArray(key)){\n            arr?.some(item => {\n                if(item.hasOwnProperty([key])) {\n                    exists = true;\n                    return true\n                }\n                else return false\n            })\n        }\n        //since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\n        else{\n            arr?.some(item => {\n                if(item.includes([key])) {\n                    exists = true;\n                    return true\n                }\n                else return false\n            })\n        }\n        return exists\n    }\n\n    findIndexInFilters(arr, key){\n        let indexOfKey = 0\n        arr?.some((filterName, index, filters) => {\n            if(filterName.hasOwnProperty([key])){ \n                indexOfKey = index\n                return indexOfKey\n            }\n            else return false\n        })\n        return indexOfKey\n    }\n\n    changeFilters(index, filterName, filterOperator) {\n        let arr = this.state.filters\n        console.log(\"arr inside changefilters: \" + JSON.stringify(arr))\n\n        if (arr[index][filterName][filterOperator])\n            delete arr[index][filterName][filterOperator]  \n        if (Object.keys(arr[index][filterName]).length === 0)\n            arr.splice(index, 1)\n        return arr\n    }\n\n    addFilterOperatorToExistingFilterName = (event, filterName, filterOperator) => {\n        const arr = this.state.filters\n        arr.forEach((item, index, filters) => {\n            if (item.hasOwnProperty([filterName])){\n                filters[index][filterName][filterOperator] = event\n            }\n        })\n        return arr\n    }\n\n    onBlurEvent(event, filterName, filterOperator){\n        console.log(\"event: \" + JSON.stringify(event))\n        console.log(\"filters: \" + JSON.stringify(this.state.filters))\n\n        if (event === \"\" && this.keyExistsInArr(this.state.filters,filterName))  {\n            var index = this.findIndexInFilters(this.state.filters, filterName)\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : false, filters : this.changeFilters(index, filterName, filterOperator)}, function () {\n                this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n        }\n\n        else if (event !== \"\" && !(this.keyExistsInArr(this.state.filters, filterName))){\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : true,\n                 filters: this.state.filters.concat([{[filterName]: {[filterOperator] : event}}])}, function () {\n                console.log(\"filters inside: \" + this.state.filters)\n                this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n\n        }\n\n        else if (event !== \"\" && (this.keyExistsInArr(this.state.filters, filterName))){\n            //if there are multiple countries and descriptions, backend must make a new query\n            //since no additional filter is added, only value. I am unable to send query request\n            //with an array element\n            const isAdditionalFilterWithContains = event.includes(\",\") ? false : true\n            \n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : isAdditionalFilterWithContains, \n                filters : this.addFilterOperatorToExistingFilterName(event, filterName, filterOperator)}, function() {\n                    this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n           \n        }\n        else {\n            console.log(\"inside 4\")\n\n        }\n    }\n\n    // this closure's purpose is to create strings to be sent to query params, as no \n    // other way to send arrays exists\n   makeStringFromSelectedItems = (items) => {\n        var selectedItemsIntoString = (prevVal, currVal, idx) => {\n            return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n        }\n        return items.reduce(selectedItemsIntoString, '')\n   }\n\n   isNumber = (item) => {\n    console.log(\"typeof: \" + typeof item)\n    console.log(\"isNan: \" + !isNaN(item))\n        var isNumber = !isNaN(item)\n        if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n   }\n\n   filters() {\n    //    console.log(\"coutnries: \" + JSON.stringify(this.state.countries))\n        return (<div className=\"row\">\n        {<input placeholder= \"Id\" onBlur= {event => {this.onBlurEvent(event.target.value, \"_id\", \"eq\")}}></input>}\n        {<textarea placeholder= \"City name\" onBlur= {event =>{this.onBlurEvent(event.target.value, \"name\", \"eq\")}}></textarea>}\n        {<Multiselect options ={this.state.countries} displayValue='name'  onSelect={event =>{this.onBlurEvent(this.makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}\n        onRemove={event =>{this.onBlurEvent(this.makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}/>}\n        {<textarea placeholder= \"Country\" onBlur= {event =>{this.onBlurEvent(event.target.value, \"sys.country\", \"eq\")}}></textarea>}\n        {<textarea placeholder= \"Latitude smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lat\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Latitude bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lat\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Longitude smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lon\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Longitude bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"coord.lon\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Humidity smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.humidity\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Humidity bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.humidity\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Feel temperature smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.feels_like\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Feel temperature bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.feels_like\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature max smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_max\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature max bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_max\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature min smaller than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_min\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature min bigger than\" onBlur= {event =>{if (this.isNumber(event.target.value)) this.onBlurEvent(event.target.value, \"weatherMain.temp_min\", \"gte\")}}></textarea>}\n        {<Multiselect options ={this.state.descriptions} displayValue='name'  onSelect={event =>{this.onBlurEvent(this.makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}\n        onRemove={event =>{this.onBlurEvent(this.makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}/>}\n\n    </div>)\n   }\n\n   header(){\n       return (<thead>\n       <tr>\n           <th onClick={() =>this.refreshWeathers(\"_id\", this.state.weathers) }>cityId</th>\n           <th onClick={() =>this.refreshWeathers(\"name\", this.state.weathers) }>city Name</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lat\", this.state.weathers) }>latitude</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lon\", this.state.weathers) }>longitude</th>\n           <th onClick={() =>this.refreshWeathers(\"sys.country\", this.state.weathers) }>country</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers) }>humidity</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers) }>feels like</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp\", this.state.weathers) }>temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers) }>maximum temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers) }>minimal temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weather.description\", this.state.weathers) }>description</th>                                \n       </tr>\n   </thead>)\n   }\n\n   // descriptions can be multiple per row, to display it I changed its elements to string delimetered by ','\n    getWeatherDescription = (weather) => {\n        var weatherItemReduce = (prevVal, currVal, idx) => {\n            return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n        }\n\n        return weather.weather.reduce(weatherItemReduce, '')\n    }\n\n\n\n   mainBody(currentPosts){\n    return (\n\n    <tbody>\n        {\n            currentPosts.map(\n                weather =>{\n                    return (<tr key={weather._id}>\n                        <td>{weather._id}</td>\n                        <td>{weather.name}</td>\n                        <td>{weather.coord.lat}</td>\n                        <td>{weather.coord.lon}</td>\n                        <td>{weather.sys.country}</td>\n                        <td>{weather.weatherMain.humidity}</td>\n                        <td>{weather.weatherMain.feels_like}</td>\n                        <td>{weather.weatherMain.temp}</td>\n                        <td>{weather.weatherMain.temp_max}</td>\n                        <td>{weather.weatherMain.temp_min}</td>\n                        <td>{this.getWeatherDescription(weather)}</td>\n                    </tr>)}\n            )\n        }\n        </tbody>\n    )\n   }\n\n    paginate = (currentPage) => {\n       this.setState({currentPage : currentPage}, function(){\n           console.log(\"currPage: \" + this.state.currentPage)\n       })\n\n    }\n\n    render() {\n        console.log(\"som v render weather list\")\n\n        const pagination = <Pagination itemsPerPage = {this.state.itemsPerPage} totalItems = {this.state.weathers.length} paginate={this.paginate.bind()}/>\n        console.log('after pagination creation')\n        const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n        const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n        const currentWeathers = this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n\n        let container= [this.filters(), pagination]\n\n        if (this.state.weathers)\n            container.push(<table className=\"table\">\n                {this.header()}\n                {this.mainBody(currentWeathers)}\n            </table>)\n\n        return (\n            <div className=\"container\">\n             {container}\n            </div>\n        )\n         \n    }\n}\nexport default WeatherListComponent\n"]},"metadata":{},"sourceType":"module"}