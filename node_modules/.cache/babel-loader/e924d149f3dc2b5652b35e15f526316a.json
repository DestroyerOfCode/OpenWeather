{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js\";\nimport React, { Component } from 'react';\nimport WeatherService from '../service/WeatherService';\nimport ReactPaginate from 'react-paginate';\n\nclass WeatherListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.itemsPerPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.refreshWeathers();\n      });\n    };\n\n    this.state = {\n      weathers: [],\n      isAscending: true,\n      filters: [],\n      itemsPerPage: 1000,\n      currentPage: 0\n    };\n  }\n\n  componentDidMount() {\n    this.refreshWeathers();\n  }\n\n  refreshWeathers(sortBy, isFilter, weathers) {\n    WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, isFilter, weathers).then(response => {\n      this.setState({\n        weathers: response.data\n      });\n    }).then(() => {\n      if (sortBy) this.setState({\n        isAscending: !this.state.isAscending\n      });\n    });\n  }\n\n  keyExistsInArr(arr, key) {\n    var exists = false;\n    arr === null || arr === void 0 ? void 0 : arr.some(item => {\n      if (item.hasOwnProperty([key])) exists = true;\n    });\n    return exists;\n  }\n\n  findIndexInFilters(arr, key) {\n    var indexOfKey = 0;\n    arr === null || arr === void 0 ? void 0 : arr.some((filterName, index, filters) => {\n      if (filterName.hasOwnProperty([key])) {\n        indexOfKey = index;\n      }\n    });\n    return indexOfKey;\n  }\n\n  onBlurEvent(event, filterName, filterOperator, isFilter) {\n    if (event.target.value === \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      console.log(\"inside 1\");\n      this.stage.currentPage = 0;\n      var index = this.findIndexInFilters(this.state.filters, filterName);\n      if (this.state.filters[index][filterName][filterOperator]) delete this.state.filters[index][filterName][filterOperator];\n      if (Object.keys(this.state.filters[index][filterName]).length === 0) this.state.filters.splice(index, 1);\n      this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers);\n    } else if (event.target.value !== \"\" && !this.keyExistsInArr(this.state.filters, filterName)) {\n      console.log(\"inside 2\");\n      this.stage.currentPage = 0;\n      this.state.filters.push({\n        [filterName]: {\n          [filterOperator]: event.target.value\n        }\n      });\n      this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers);\n    } else if (event.target.value !== \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      console.log(\"inside 3\");\n      this.stage.currentPage = 0;\n      this.state.filters.forEach((item, index, filters) => {\n        if (item.hasOwnProperty([filterName])) {\n          filters[index][filterName][filterOperator] = event.target.value;\n        }\n      });\n      this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers);\n    } else {\n      console.log(\"inside 4\");\n    }\n  }\n\n  filters() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Id\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"_id\", \"eq\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"City name\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"name\", \"eq\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Country\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"sys.country\", \"eq\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lat\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lat\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lon\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lon\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.humidity\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.humidity\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.feels_like\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.feels_like\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_max\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_max\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_min\", \"lte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_min\", \"gte\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"description\", \"eq\", true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this);\n  }\n\n  header() {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"_id\", false, this.state.weathers),\n          children: \"cityId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"name\", false, this.state.weathers),\n          children: \"city Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lat\", false, this.state.weathers),\n          children: \"latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lon\", false, this.state.weathers),\n          children: \"longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"sys.country\", false, this.state.weathers),\n          children: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.humidity\", false, this.state.weathers),\n          children: \"humidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.feels_like\", false, this.state.weathers),\n          children: \"feels like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp\", false, this.state.weathers),\n          children: \"temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_max\", false, this.state.weathers),\n          children: \"maximum temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_min\", false, this.state.weathers),\n          children: \"minimal temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"description\", false, this.state.weathers),\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }, this);\n  }\n\n  mainBody() {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: this.state.weathers.map(weather => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.coord.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.coord.lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.feels_like\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp_max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp_min\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, weather._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    let container = [this.filters()];\n    if (this.state.weathers) container.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [this.header(), this.mainBody()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 28\n    }, this)); //         container.push( <div>\n    //             <ReactPaginate\n    //                 previousLabel={\"prev\"}\n    //                 nextLabel={\"next\"}\n    //                 breakLabel={\"...\"}\n    //                 breakClassName={\"break-me\"}\n    //                 pageCount={this.state.pageCount}\n    //                 marginPagesDisplayed={2}\n    //                 pageRangeDisplayed={5}\n    //                 onPageChange={this.handlePageClick}\n    //                 containerClassName={\"pagination\"}\n    //                 subContainerClassName={\"pages pagination\"}\n    //                 activeClassName={\"active\"}/>\n    //         </div>\n    // )\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherListComponent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js"],"names":["React","Component","WeatherService","ReactPaginate","WeatherListComponent","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","itemsPerPage","setState","currentPage","refreshWeathers","weathers","isAscending","filters","componentDidMount","sortBy","isFilter","retrieveAllWeathers","then","response","data","keyExistsInArr","arr","key","exists","some","item","hasOwnProperty","findIndexInFilters","indexOfKey","filterName","index","onBlurEvent","event","filterOperator","target","value","console","log","stage","Object","keys","length","splice","push","forEach","header","mainBody","map","weather","_id","name","coord","lat","lon","sys","country","weatherMain","humidity","feels_like","temp","temp_max","temp_min","description","render","container"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport WeatherService from '../service/WeatherService';\nimport ReactPaginate from 'react-paginate';\n\nclass WeatherListComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            weathers: [],\n            isAscending: true,\n            filters: [],\n            itemsPerPage : 1000,\n            currentPage : 0\n        }\n    }\n\n    componentDidMount() {\n        this.refreshWeathers();\n    }\n\n    refreshWeathers(sortBy, isFilter, weathers) {\n        WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters,  isFilter, weathers)\n            .then(\n                response => {\n                    this.setState({ weathers: response.data })\n\n                }\n            ).then( () => {if (sortBy) this.setState({isAscending : !this.state.isAscending})})\n    }\n\n    keyExistsInArr(arr, key){\n        var exists = false\n        arr?.some(item => {\n            if(item.hasOwnProperty([key])) exists = true\n        })\n        return exists\n    }\n\n    findIndexInFilters(arr, key){\n        var indexOfKey = 0\n        arr?.some((filterName, index, filters) => {\n            if(filterName.hasOwnProperty([key])){ \n                indexOfKey = index\n\n            }\n        })\n        return indexOfKey\n    }\n\n    onBlurEvent(event, filterName, filterOperator, isFilter){\n        if (event.target.value === \"\" && this.keyExistsInArr(this.state.filters,filterName))  {\n            console.log(\"inside 1\") \n            this.stage.currentPage = 0\n            var index = this.findIndexInFilters(this.state.filters, filterName)\n\n            if (this.state.filters[index][filterName][filterOperator])\n                delete this.state.filters[index][filterName][filterOperator]  \n\n            if (Object.keys(this.state.filters[index][filterName]).length === 0)\n                this.state.filters.splice(index, 1)\n\n            this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers)\n        }\n\n        else if (event.target.value !== \"\" && !(this.keyExistsInArr(this.state.filters, filterName))){\n            console.log(\"inside 2\")\n            this.stage.currentPage = 0\n\n            this.state.filters.push({[filterName]: {[filterOperator] : event.target.value}})\n            this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers)\n        }\n\n        else if (event.target.value !== \"\" && (this.keyExistsInArr(this.state.filters, filterName))){\n            console.log(\"inside 3\")         \n            this.stage.currentPage = 0\n\n            this.state.filters.forEach((item, index, filters) => {\n                if (item.hasOwnProperty([filterName])){\n                    filters[index][filterName][filterOperator] = event.target.value\n                }\n            })\n\n            this.refreshWeathers(this.state.sortBy, isFilter, this.state.weathers)\n        }\n        else {\n            console.log(\"inside 4\")\n\n        }\n    }\n\n   filters() {\n        return (<div className=\"row\">\n        {<textarea placeholder= \"Id\" onBlur= {event => {this.onBlurEvent(event, \"_id\", \"eq\", true) }}></textarea>}\n        {<textarea placeholder= \"City name\" onBlur= {event =>{this.onBlurEvent(event, \"name\", \"eq\", true)}}></textarea>}\n        {<textarea placeholder= \"Country\" onBlur= {event =>{this.onBlurEvent(event, \"sys.country\", \"eq\", true)}}></textarea>}\n        {<textarea placeholder= \"Latitude smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lat\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Latitude bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lat\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Longitude smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lon\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Longitude bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lon\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Humidity smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.humidity\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Humidity bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.humidity\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Feel temperature smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.feels_like\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Feel temperature bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.feels_like\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature max smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_max\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature max bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_max\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature min smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_min\", \"lte\", true)}}></textarea>}\n        {<textarea placeholder= \"Temperature min bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_min\", \"gte\", true)}}></textarea>}\n        {<textarea placeholder= \"Description\" onBlur= {event =>{this.onBlurEvent(event, \"description\", \"eq\", true)}}></textarea>}\n    </div>)\n   }\n\n   header(){\n       return (<thead>\n       <tr>\n           <th onClick={() =>this.refreshWeathers(\"_id\", false, this.state.weathers) }>cityId</th>\n           <th onClick={() =>this.refreshWeathers(\"name\", false, this.state.weathers) }>city Name</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lat\", false, this.state.weathers) }>latitude</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lon\", false, this.state.weathers) }>longitude</th>\n           <th onClick={() =>this.refreshWeathers(\"sys.country\", false, this.state.weathers) }>country</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.humidity\", false, this.state.weathers) }>humidity</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.feels_like\", false, this.state.weathers) }>feels like</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp\", false, this.state.weathers) }>temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_max\", false, this.state.weathers) }>maximum temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_min\", false, this.state.weathers) }>minimal temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"description\", false, this.state.weathers) }>description</th>                                \n       </tr>\n   </thead>)\n   }\n\n   mainBody(){\n    return (\n\n    <tbody>\n        {\n            this.state.weathers.map(\n                weather =>\n                    <tr key={weather._id}>\n                        <td>{weather._id}</td>\n                        <td>{weather.name}</td>\n                        <td>{weather.coord.lat}</td>\n                        <td>{weather.coord.lon}</td>\n                        <td>{weather.sys.country}</td>\n                        <td>{weather.weatherMain.humidity}</td>\n                        <td>{weather.weatherMain.feels_like}</td>\n                        <td>{weather.weatherMain.temp}</td>\n                        <td>{weather.weatherMain.temp_max}</td>\n                        <td>{weather.weatherMain.temp_min}</td>\n                        <td>{weather.weather[0].description}</td>\n\n                    </tr>\n            )\n        }\n        </tbody>\n    )\n   }\n\n    render() {\n\n        let container= [this.filters()]\n        if (this.state.weathers)\n            container.push(<table className=\"table\">\n            {this.header()}\n            {this.mainBody()}\n        </table>)\n\n//         container.push( <div>\n//             <ReactPaginate\n//                 previousLabel={\"prev\"}\n//                 nextLabel={\"next\"}\n//                 breakLabel={\"...\"}\n//                 breakClassName={\"break-me\"}\n//                 pageCount={this.state.pageCount}\n//                 marginPagesDisplayed={2}\n//                 pageRangeDisplayed={5}\n//                 onPageChange={this.handlePageClick}\n//                 containerClassName={\"pagination\"}\n//                 subContainerClassName={\"pages pagination\"}\n//                 activeClassName={\"active\"}/>\n//         </div>\n// )\n        return (\n            <div className=\"container\">\n             {container}\n            </div>\n        )\n         \n    }\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.itemsPerPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.refreshWeathers()\n        });\n\n    };\n}\nexport default WeatherListComponent\n"]},"metadata":{},"sourceType":"module"}