{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { convertTemperature } from '../../businessLogic/WeatherBusinessLogic';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"City name\",\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Latitude smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Latitude bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Longitude smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Longitude bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Humidity smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Humidity bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Feel temperature smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Feel temperature bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature max smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature max bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature min smaller than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature min bigger than\",\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  console.log(\"temperatureUnits:\" + temperatureUnits + \" and temperatureValue:\" + temperatureValue);\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  console.log(\"typeof: \" + typeof item);\n  console.log(\"isNan: \" + !isNaN(item));\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromSelectedItems = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","convertTemperature","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","event","target","value","isNumber","calculateKelvins","temperatureUnits","descriptions","makeStringFromSelectedItems","countries","temperatureValue","console","log","parseFloat","toString","item","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","name","reduce"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport {convertTemperature} from '../../businessLogic/WeatherBusinessLogic'\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    return (\n        <div className=\"filters\">\n            {<input placeholder= \"City name\" onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n            {<input placeholder= \"Latitude smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n            {<input placeholder= \"Latitude bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\")}}></input>}\n            {<input placeholder= \"Longitude smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n            {<input placeholder= \"Longitude bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n            {<input placeholder= \"Humidity smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n            {<input placeholder= \"Humidity bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n            {<input placeholder= \"Feel temperature smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n            {<input placeholder= \"Feel temperature bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n            {<input placeholder= \"Temperature smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n            {<input placeholder= \"Temperature bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n            {<input placeholder= \"Temperature max smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n            {<input placeholder= \"Temperature max bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n            {<input placeholder= \"Temperature min smaller than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n            {<input placeholder= \"Temperature min bigger than\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n            {<Multiselect options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}\n            onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}/>}\n            {<Multiselect options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}\n            onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}/>}\n\n        </div>)\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    console.log(\"temperatureUnits:\" + temperatureUnits + \" and temperatureValue:\" + temperatureValue)\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\nconst isNumber = (item) => {\n    console.log(\"typeof: \" + typeof item)\n    console.log(\"isNan: \" + !isNaN(item))\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromSelectedItems= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}