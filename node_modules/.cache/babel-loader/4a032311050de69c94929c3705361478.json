{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  var _dailyWeatherForecast;\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState([]); // useEffect(() =>{\n  //     console.log(\"som v useEffect forecast component\")\n  //     console.log(\"func: \" )\n  //     return () => (getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data);\n  // }, [dailyWeatherForecast])\n  // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.daily) === null || _dailyWeatherForecast === void 0 ? void 0 : _dailyWeatherForecast.map(dailyWeather => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dailyWeather.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this)\n      }, dailyWeather.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"HzcZPaLpgszzhLarCK8huINZ3b0=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n  console.log(\"som v metode getDailyWeatherForecast\");\n  const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\");\n  console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc));\n  return dailyWeatherForecastFunc;\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","daily","map","dailyWeather","id","getDailyWeatherForecast","lat","lon","dailyWeatherForecastFunc","getDailyForecastByCityName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEA,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAAA;;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE,CALoC,CAOpC;AACA;AACA;AACA;AACA;AAEA;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AAEA,sBAAQ;AAAA,cACHA,oBADG,aACHA,oBADG,gDACHA,oBAAoB,CAAEE,KADnB,0DACH,sBAA6BC,GAA7B,CAAiCC,YAAY,IAAG;AAC9C,0BAAQ;AAAA,+BACJ;AAAA,oBAAKA,YAAY,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADI,SAAWD,YAAY,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAAR;AAGF,KAJA;AADG;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH;;GAvBQd,wB;;KAAAA,wB;;AAyBT,MAAMe,uBAAuB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChDf,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,QAAMe,wBAAwB,GAAG,MAAMnB,sBAAsB,CAACoB,0BAAvB,CAAkDH,GAAlD,EAAuDC,GAAvD,EAA4D,yBAA5D,CAAvC;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACC,SAAL,CAAea,wBAAf,CAA3C;AACA,SAAOA,wBAAP;AACH,CALD;;AAMA,eAAelB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState([])\n    \n    // useEffect(() =>{\n    //     console.log(\"som v useEffect forecast component\")\n    //     console.log(\"func: \" )\n    //     return () => (getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data);\n    // }, [dailyWeatherForecast])\n\n    // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n\n    return (<tbody>\n        {dailyWeatherForecast?.daily?.map(dailyWeather =>{\n           return( <tr key ={ dailyWeather.id}>\n               <td>{dailyWeather.id}</td>\n               </tr>)\n        })}\n    </tbody>)\n}\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\")\n    console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc))\n    return dailyWeatherForecastFunc\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}