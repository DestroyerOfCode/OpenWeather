{"ast":null,"code":"import _classCallCheck from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var COURSE_API_URL='http://localhost:8080';var WEATHER_CURRENT_API_URL=\"\".concat(COURSE_API_URL,\"/weather/current\");var WeatherService=/*#__PURE__*/function(){function WeatherService(){_classCallCheck(this,WeatherService);this.retrieveAllCountries=function(){return axios.get(\"\".concat(WEATHER_CURRENT_API_URL,\"/countries\"));};this.retrieveAllDescriptions=function(){return axios.get(\"\".concat(WEATHER_CURRENT_API_URL,\"/descriptions\"));};}_createClass(WeatherService,[{key:\"retrieveAllWeathers\",value:function retrieveAllWeathers(sortBy,isAscending,filters,isFilter,isAdditionalFilter,weathers){console.log(\"filters: \");console.log(filters);var filterString=this.buildFilterString(filters);if(!weathers)weathers=[];var params={sortBy:sortBy,isAscending:isAscending,filterString:filterString,isFilter:isFilter,isAdditionalFilter:isAdditionalFilter};return axios.post(\"\".concat(WEATHER_CURRENT_API_URL,\"/retrieve/fromDb\"),weathers,{params:params});}},{key:\"buildFilterString\",value:function buildFilterString(filters){var filterString=\"\";for(var i=0;i<=(filters===null||filters===void 0?void 0:filters.length)-1;++i){filterString+=JSON.stringify(filters[i]);if(filters[i+1])filterString+=\",\";}return filterString;}}]);return WeatherService;}();export default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/adapters/WeatherCurrentService.js"],"names":["axios","COURSE_API_URL","WEATHER_CURRENT_API_URL","WeatherService","retrieveAllCountries","get","retrieveAllDescriptions","sortBy","isAscending","filters","isFilter","isAdditionalFilter","weathers","console","log","filterString","buildFilterString","params","post","i","length","JSON","stringify"],"mappings":"gSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,CAAG,uBAAvB,CACA,GAAMC,CAAAA,uBAAuB,WAAMD,cAAN,oBAA7B,C,GAEME,CAAAA,c,6FAwBFC,oB,CAAuB,iBAAOJ,CAAAA,KAAK,CAACK,GAAN,WAAaH,uBAAb,eAAP,E,MACvBI,uB,CAA0B,iBAAMN,CAAAA,KAAK,CAACK,GAAN,WAAaH,uBAAb,kBAAN,E,6FAvBNK,M,CAAQC,W,CAAaC,O,CAASC,Q,CAAUC,kB,CAAoBC,Q,CAAU,CACtFC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAD,OAAO,CAACC,GAAR,CAAYL,OAAZ,EACA,GAAIM,CAAAA,YAAY,CAAG,KAAKC,iBAAL,CAAuBP,OAAvB,CAAnB,CACA,GAAG,CAACG,QAAJ,CACIA,QAAQ,CAAG,EAAX,CACJ,GAAMK,CAAAA,MAAM,CAAG,CACXV,MAAM,CAANA,MADW,CACHC,WAAW,CAAXA,WADG,CACUO,YAAY,CAAZA,YADV,CACwBL,QAAQ,CAARA,QADxB,CACkCC,kBAAkB,CAAlBA,kBADlC,CAAf,CAGA,MAAOX,CAAAA,KAAK,CAACkB,IAAN,WAAchB,uBAAd,qBAAyDU,QAAzD,CAAkE,CAACK,MAAM,CAANA,MAAD,CAAlE,CAAP,CACH,C,4DAEiBR,O,CAAQ,CACtB,GAAIM,CAAAA,YAAY,CAAG,EAAnB,CACA,IAAI,GAAII,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAAAV,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEW,MAAT,EAAgB,CAApC,CAAuC,EAAED,CAAzC,CAA2C,CACvCJ,YAAY,EAAGM,IAAI,CAACC,SAAL,CAAeb,OAAO,CAACU,CAAD,CAAtB,CAAf,CACA,GAAIV,OAAO,CAACU,CAAC,CAAC,CAAH,CAAX,CACIJ,YAAY,EAAI,GAAhB,CACP,CACD,MAAOA,CAAAA,YAAP,CACH,C,8BAOL,cAAe,IAAIZ,CAAAA,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_CURRENT_API_URL = `${COURSE_API_URL}/weather/current`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n        console.log(\"filters: \")\n        console.log(filters)\n        var filterString = this.buildFilterString(filters)\n        if(!weathers)\n            weathers = []\n        const params = {\n            sortBy, isAscending, filterString, isFilter, isAdditionalFilter\n        }\n        return axios.post(`${WEATHER_CURRENT_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify(filters[i]);\n            if (filters[i+1])\n                filterString += \",\"\n        }\n        return filterString\n    }\n\n    retrieveAllCountries = () =>  axios.get(`${WEATHER_CURRENT_API_URL}/countries`)\n    retrieveAllDescriptions = () => axios.get(`${WEATHER_CURRENT_API_URL}/descriptions`)\n\n\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}