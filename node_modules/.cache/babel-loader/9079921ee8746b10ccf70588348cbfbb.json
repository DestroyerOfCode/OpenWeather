{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/forecast/daily/WeatherForecastDaily.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../../../adapters/WeatherForecastService';\nimport { getWeatherDescription, displayDateTime, convertTemperature } from '../../../businessLogic/WeatherBusinessLogic';\nimport '../../../styles/common/Header.scss';\nimport i18n from 'i18next';\nimport '../../../i18n';\nimport { Link } from \"react-router-dom\";\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  const temperature = props.temperature;\n  console.log(temperature);\n  useEffect(() => {\n    WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat, props.history.location.state.lon, \"Current,Hourly,Minutely\").then(response => setDailyWeatherForecast(response.data));\n  }, [props.history.location.state.lat, props.history.location.state.lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: i18n.t(\"forecast.currentWeather\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"weatherTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [createHeader.call(), createMainBody(dailyWeatherForecast, temperature)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"bJ5teWGutBLkVhno6XsU0CImiiw=\");\n\n_c = WeatherForecastComponent;\n\nconst createMainBody = (dailyWeatherForecast, temperature) => {\n  var _dailyWeatherForecast;\n\n  return dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.daily) === null || _dailyWeatherForecast === void 0 ? void 0 : _dailyWeatherForecast.map(dailyWeather => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunrise * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunset * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.day)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.min)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.max)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.night)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.eve)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.morn)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.day)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.night)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.eve)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.morn)).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_deg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: getWeatherDescription(dailyWeather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, dailyWeather.dt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  });\n};\n\nconst createHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.sunrise\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.sunset\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.temp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.min\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.max\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.night\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.evening\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.morning\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeDay\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeNight\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeEvening\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeMorning\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.windSpeed\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.windDeg\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.description\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/forecast/daily/WeatherForecastDaily.js"],"names":["React","useState","useEffect","WeatherForecastService","getWeatherDescription","displayDateTime","convertTemperature","i18n","Link","WeatherForecastComponent","props","dailyWeatherForecast","setDailyWeatherForecast","temperature","console","log","getDailyForecastByCityName","history","location","state","lat","lon","then","response","data","pathname","t","createHeader","call","createMainBody","daily","map","dailyWeather","Date","sunrise","sunset","parseFloat","units","temp","day","toFixed","abbreviation","min","max","night","eve","morn","feels_like","wind_speed","wind_deg","dt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../../../adapters/WeatherForecastService';\nimport {getWeatherDescription, displayDateTime, convertTemperature} from '../../../businessLogic/WeatherBusinessLogic';\nimport '../../../styles/common/Header.scss'\nimport i18n from 'i18next'\nimport '../../../i18n'\nimport { Link } from \"react-router-dom\";\n function WeatherForecastComponent(props){\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({})\n    const temperature = props.temperature\n    console.log(temperature)\n    useEffect(() =>{\n       \n        WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon, \"Current,Hourly,Minutely\")\n        .then( response => setDailyWeatherForecast(response.data)) \n        }, [props.history.location.state.lat, props.history.location.state.lon])\n\n    return (\n    <div>\n         <Link to= {{pathname: \"/\"}}>\n            <button>{i18n.t(\"forecast.currentWeather\")}</button>\n        </Link>\n            <table className=\"weatherTable\">\n                <tbody>\n                    {createHeader.call()}\n                    {createMainBody(dailyWeatherForecast,  temperature)}\n                </tbody>\n            </table>\n    </div>)\n}\n\nconst createMainBody = (dailyWeatherForecast, temperature) => {\n    return (\n        dailyWeatherForecast?.daily?.map(dailyWeather =>{\n            return( \n                <tr key ={ dailyWeather.dt}>\n                    <td>{displayDateTime(new Date(dailyWeather.sunrise * 1000))}</td>\n                    <td>{displayDateTime(new Date(dailyWeather.sunset * 1000))}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.day)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.min)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.max)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.night)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.eve)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.temp.morn)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.day)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.night)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.eve)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${parseFloat(convertTemperature(temperature.units, dailyWeather.feels_like.morn)).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{dailyWeather.wind_speed}</td>\n                    <td>{dailyWeather.wind_deg}</td>\n                    <td>{getWeatherDescription(dailyWeather)}</td>\n                </tr>)\n        })\n    )\n}\n\nconst createHeader = () => {\n    return ( \n    <thead>\n        <tr>\n            <th>{i18n.t(\"forecast.header.sunrise\")}</th>\n            <th>{i18n.t(\"forecast.header.sunset\")}</th>\n            <th>{i18n.t(\"forecast.header.temp\")}</th>\n            <th>{i18n.t(\"forecast.header.min\")}</th>\n            <th>{i18n.t(\"forecast.header.max\")}</th>\n            <th>{i18n.t(\"forecast.header.night\")}</th>\n            <th>{i18n.t(\"forecast.header.evening\")}</th>\n            <th>{i18n.t(\"forecast.header.morning\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeDay\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeNight\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeEvening\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeMorning\")}</th>\n            <th>{i18n.t(\"forecast.header.windSpeed\")}</th>\n            <th>{i18n.t(\"forecast.header.windDeg\")}</th>\n            <th>{i18n.t(\"forecast.header.description\")}</th>\n        </tr>\n    </thead>)\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}