{"ast":null,"code":"export var getWeatherDescription=function getWeatherDescription(weather){var weatherItemReduce=function weatherItemReduce(prevVal,currVal,idx){return idx===0?currVal.description:prevVal+\", \"+currVal.description;};return weather.weather.reduce(weatherItemReduce,'');};export var displayDateTime=function displayDateTime(dateTime){return dateTime.toLocaleString(\"sk-SK\");};export var convertTemperature=function convertTemperature(convertTo,temp){// console.log(\"convertTo: \" + convertTo)\nif(convertTo===\"celsius\")return temp-273.15;else if(convertTo===\"fahrenheit\")return(temp-273.15)*1.8+32;else return temp;};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/businessLogic/WeatherBusinessLogic.js"],"names":["getWeatherDescription","weather","weatherItemReduce","prevVal","currVal","idx","description","reduce","displayDateTime","dateTime","toLocaleString","convertTemperature","convertTo","temp"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,OAAD,CAAa,CAC9C,GAAIC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAUC,OAAV,CAAmBC,GAAnB,CAA2B,CAC/C,MAAOA,CAAAA,GAAG,GAAK,CAAR,CAAYD,OAAO,CAACE,WAApB,CAAkCH,OAAO,CAAG,IAAV,CAAiBC,OAAO,CAACE,WAAlE,CACH,CAFD,CAIA,MAAOL,CAAAA,OAAO,CAACA,OAAR,CAAgBM,MAAhB,CAAuBL,iBAAvB,CAA0C,EAA1C,CAAP,CACH,CANM,CAQP,MAAO,IAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAc,CACzC,MAAOA,CAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAP,CACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAYC,IAAZ,CAAqB,CACnD;AACA,GAAID,SAAS,GAAK,SAAlB,CACI,MAAOC,CAAAA,IAAI,CAAG,MAAd,CADJ,IAEK,IAAID,SAAS,GAAK,YAAlB,CACD,MAAO,CAACC,IAAI,CAAE,MAAP,EAAiB,GAAjB,CAAuB,EAA9B,CADC,IAEA,OAAOA,CAAAA,IAAP,CACR,CAPM","sourcesContent":["export const getWeatherDescription = (weather) => {\n    var weatherItemReduce = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n    }\n\n    return weather.weather.reduce(weatherItemReduce, '')\n}\n\nexport const displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nexport const convertTemperature = (convertTo, temp) => {\n    // console.log(\"convertTo: \" + convertTo)\n    if (convertTo === \"celsius\")\n        return temp - 273.15\n    else if (convertTo === \"fahrenheit\")\n        return (temp -273.15) * 1.8 + 32\n    else return temp\n}"]},"metadata":{},"sourceType":"module"}