{"ast":null,"code":"import _slicedToArray from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{Multiselect}from'multiselect-react-dropdown';import'../../styles/current/Filters.scss';function FiltersComponent(props){//TODO find out how to call setMethod in buildFilter function\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),filterKey=_useState2[0],setFilterKey=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),filtervalue=_useState4[0],setFilterValue=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),filterOperator=_useState6[0],setFilterOperator=_useState6[1];useEffect(function(){var timeOutId=setTimeout(function(){return props.onChangeMethod(filtervalue,filterKey,filterOperator);},500);return function(){return clearTimeout(timeOutId);};},[filterKey,filtervalue,filterOperator,props]);var buildFilter=function buildFilter(filterValue,filterKey,filterOperator){setFilterValue(filterValue);setFilterKey(filterKey);setFilterOperator(filterOperator);};console.log(\"filtersComponent im here\");return/*#__PURE__*/_jsxs(\"form\",{className:\"currentFiltersWrappes\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"City\",onChange:function onChange(event){buildFilter(event.target.value,\"name\",\"eq\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Latitude from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"coord.lat\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Latitude to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"coord.lat\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Longitude from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"coord.lon\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Longitude to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"coord.lon\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Humidity from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"weatherMain.humidity\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Humidity to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(event.target.value,\"weatherMain.humidity\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Feel temperature from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.feels_like\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Feel temperature to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.feels_like\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature max from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp_max\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature max to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp_max\",\"lte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature min from\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp_min\",\"gte\");}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Temperature min to\",onChange:function onChange(event){if(isNumber(event.target.value))buildFilter(calculateKelvins(props.temperatureUnits,event.target.value),\"weatherMain.temp_min\",\"lte\");}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Multiselect,{placeholder:\"Pick Descriptions\",options:props.descriptions,displayValue:\"name\",showCheckbox:true,onSelect:function onSelect(event){buildFilter(makeStringFromSelectedItems(event),\"weather.description\",\"in\");},onRemove:function onRemove(event){buildFilter(makeStringFromSelectedItems(event),\"weather.description\",\"in\");}}),/*#__PURE__*/_jsx(Multiselect,{placeholder:\"Pick Countries\",options:props.countries,displayValue:\"name\",onSelect:function onSelect(event){buildFilter(makeStringFromSelectedItems(event),\"sys.country\",\"in\");},onRemove:function onRemove(event){buildFilter(makeStringFromSelectedItems(event),\"sys.country\",\"in\");}})]});}// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nvar calculateKelvins=function calculateKelvins(temperatureUnits,temperatureValue){if(temperatureValue===\"\")return\"\";console.log(\"temperatureUnits:\"+temperatureUnits+\" and temperatureValue:\"+temperatureValue);if(temperatureUnits==='celsius')return(parseFloat(temperatureValue)+273.15).toString();if(temperatureUnits==='fahrenheit')return((parseFloat(temperatureValue)+459.67)*5/9).toString();return temperatureValue;};var isNumber=function isNumber(item){console.log(\"typeof: \"+typeof item);console.log(\"isNan: \"+!isNaN(item));var isNumber=!isNaN(item);if(!isNumber)alert('You must pick a number in this field');return isNumber;};// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nvar makeStringFromSelectedItems=function makeStringFromSelectedItems(items){var selectedItemsIntoString=function selectedItemsIntoString(prevVal,currVal,idx){return idx===0?currVal.name:prevVal+\",\"+currVal.name;};return items.reduce(selectedItemsIntoString,'');};export default FiltersComponent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","console","log","event","target","value","isNumber","calculateKelvins","temperatureUnits","descriptions","makeStringFromSelectedItems","countries","temperatureValue","parseFloat","toString","item","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","name","reduce"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    console.log(\"filtersComponent im here\")\n    return (\n        <form className=\"currentFiltersWrappes\">\n\n                {/* <p>Latitude</p> */}\n                {<input placeholder= \"City\" onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n\n                {<input placeholder= \"Latitude from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\")}}></input>}\n                {<input placeholder= \"Latitude to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= \"Longitude from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= \"Longitude to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= \"Humidity from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= \"Humidity to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= \"Feel temperature from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= \"Feel temperature to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature from\"  onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature to\"  onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature max from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature max to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= \"Temperature min from\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= \"Temperature min to\" onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect placeholder=\"Pick Descriptions\" options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect placeholder=\"Pick Countries\" options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromSelectedItems(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    console.log(\"temperatureUnits:\" + temperatureUnits + \" and temperatureValue:\" + temperatureValue)\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\nconst isNumber = (item) => {\n    console.log(\"typeof: \" + typeof item)\n    console.log(\"isNan: \" + !isNaN(item))\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromSelectedItems= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}