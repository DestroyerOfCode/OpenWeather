{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/forecast/daily/WeatherForecastDaily.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../../../adapters/WeatherForecastService';\nimport { getWeatherDescription, displayDateTime, convertTemperature } from '../../../businessLogic/WeatherBusinessLogic';\nimport { temperatureDropdownList } from '../../../buildingBlocks/commonBuildingBlocks.js';\nimport '../../../styles/common/Header.scss';\nimport i18n from 'i18next';\nimport '../../../i18n';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  const [temperature, setTemperature] = useState({\n    units: \"celsius\",\n    abbreviation: \"Â°C\"\n  });\n  useEffect(() => {\n    console.log(\"som v useEffect forecast component\");\n    WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat, props.history.location.state.lon, \"Current,Hourly,Minutely\").then(response => setDailyWeatherForecast(response.data));\n  }, [props.history.location.state.lat, props.history.location.state.lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: temperatureDropdownList((units, abbreviation) => {\n          setTemperature({\n            \"units\": units,\n            \"abbreviation\": abbreviation\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"weatherTable\",\n          children: [createHeader.call(), createMainBody(dailyWeatherForecast, temperature)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"3wQfHOxW9i6Rltr5iePSpRFRU58=\");\n\n_c = WeatherForecastComponent;\n\nconst changeLanguage = language => {\n  i18n.changeLanguage(language);\n};\n\nconst createMainBody = (dailyWeatherForecast, temperature) => {\n  var _dailyWeatherForecast;\n\n  return dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.daily) === null || _dailyWeatherForecast === void 0 ? void 0 : _dailyWeatherForecast.map(dailyWeather => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunrise * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunset * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.day).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.min).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.max).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.night).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.eve).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.temp.morn).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.feels_like.day).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.feels_like.night).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.feels_like.eve).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: `${convertTemperature(temperature.units, dailyWeather.feels_like.morn).toFixed(2)}${temperature.abbreviation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_deg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: getWeatherDescription(dailyWeather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, dailyWeather.dt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this);\n  });\n};\n\nconst createHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.sunrise\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.sunset\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.temp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.min\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.max\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.night\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.evening\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.morning\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeDay\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeNight\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeEvening\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.feelsLikeMorning\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.windSpeed\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.windDeg\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: i18n.t(\"forecast.header.description\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/forecast/daily/WeatherForecastDaily.js"],"names":["React","useState","useEffect","WeatherForecastService","getWeatherDescription","displayDateTime","convertTemperature","temperatureDropdownList","i18n","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","temperature","setTemperature","units","abbreviation","getDailyForecastByCityName","lat","lon","then","response","data","createHeader","call","createMainBody","changeLanguage","language","daily","map","dailyWeather","Date","sunrise","sunset","temp","day","toFixed","min","max","night","eve","morn","feels_like","wind_speed","wind_deg","dt","t"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,SAAQC,qBAAR,EAA+BC,eAA/B,EAAgDC,kBAAhD,QAAyE,6CAAzE;AACA,SAAQC,uBAAR,QAAsC,iDAAtC;AACA,OAAO,oCAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,eAAP;;AACC,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDlB,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC;AAACqB,IAAAA,KAAK,EAAG,SAAT;AAAoBC,IAAAA,YAAY,EAAG;AAAnC,GAAD,CAA9C;AAEArB,EAAAA,SAAS,CAAC,MAAK;AAEXS,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAT,IAAAA,sBAAsB,CAACqB,0BAAvB,CAAkDd,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BQ,GAA/E,EAAmFf,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BS,GAAhH,EAAqH,yBAArH,EACCC,IADD,CACOC,QAAQ,IAAIT,uBAAuB,CAACS,QAAQ,CAACC,IAAV,CAD1C;AAEC,GALI,EAKF,CAACnB,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BQ,GAA9B,EAAmCf,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BS,GAAhE,CALE,CAAT;AAOA,sBACA;AAAA,2BACI;AAAA,8BACI;AAAA,kBACKnB,uBAAuB,CAAE,CAACe,KAAD,EAAQC,YAAR,KAA0B;AAChDF,UAAAA,cAAc,CAAC;AAAC,qBAAUC,KAAX;AAAkB,4BAAiBC;AAAnC,WAAD,CAAd;AAAiE,SAD7C;AAD5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAA,qBACKO,YAAY,CAACC,IAAb,EADL,EAEKC,cAAc,CAACd,oBAAD,EAAwBE,WAAxB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH;;GA/BSX,wB;;KAAAA,wB;;AAiCV,MAAMwB,cAAc,GAAIC,QAAD,IAAc;AACjC1B,EAAAA,IAAI,CAACyB,cAAL,CAAoBC,QAApB;AACH,CAFD;;AAIA,MAAMF,cAAc,GAAG,CAACd,oBAAD,EAAuBE,WAAvB,KAAuC;AAAA;;AAC1D,SACIF,oBADJ,aACIA,oBADJ,gDACIA,oBAAoB,CAAEiB,KAD1B,0DACI,sBAA6BC,GAA7B,CAAiCC,YAAY,IAAG;AAC5C,wBACI;AAAA,8BACI;AAAA,kBAAKhC,eAAe,CAAC,IAAIiC,IAAJ,CAASD,YAAY,CAACE,OAAb,GAAuB,IAAhC,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKlC,eAAe,CAAC,IAAIiC,IAAJ,CAASD,YAAY,CAACG,MAAb,GAAsB,IAA/B,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAM,GAAElC,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBC,GAAtC,CAAlB,CAA6DC,OAA7D,CAAqE,CAArE,CAAwE,GAAEvB,WAAW,CAACG,YAAa;AAA3G;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBG,GAAtC,CAAlB,CAA6DD,OAA7D,CAAqE,CAArE,CAAwE,GAAEvB,WAAW,CAACG,YAAa;AAA3G;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBI,GAAtC,CAAlB,CAA6DF,OAA7D,CAAqE,CAArE,CAAwE,GAAEvB,WAAW,CAACG,YAAa;AAA3G;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBK,KAAtC,CAAlB,CAA+DH,OAA/D,CAAuE,CAAvE,CAA0E,GAAEvB,WAAW,CAACG,YAAa;AAA7G;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBM,GAAtC,CAAlB,CAA6DJ,OAA7D,CAAqE,CAArE,CAAwE,GAAEvB,WAAW,CAACG,YAAa;AAA3G;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACI,IAAb,CAAkBO,IAAtC,CAAlB,CAA8DL,OAA9D,CAAsE,CAAtE,CAAyE,GAAEvB,WAAW,CAACG,YAAa;AAA5G;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACY,UAAb,CAAwBP,GAA5C,CAAlB,CAAmEC,OAAnE,CAA2E,CAA3E,CAA8E,GAAEvB,WAAW,CAACG,YAAa;AAAjH;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACY,UAAb,CAAwBH,KAA5C,CAAlB,CAAqEH,OAArE,CAA6E,CAA7E,CAAgF,GAAEvB,WAAW,CAACG,YAAa;AAAnH;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACY,UAAb,CAAwBF,GAA5C,CAAlB,CAAmEJ,OAAnE,CAA2E,CAA3E,CAA8E,GAAEvB,WAAW,CAACG,YAAa;AAAjH;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA,kBAAM,GAAEjB,kBAAkB,CAACc,WAAW,CAACE,KAAb,EAAoBe,YAAY,CAACY,UAAb,CAAwBD,IAA5C,CAAlB,CAAoEL,OAApE,CAA4E,CAA5E,CAA+E,GAAEvB,WAAW,CAACG,YAAa;AAAlH;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA,kBAAKc,YAAY,CAACa;AAAlB;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA,kBAAKb,YAAY,CAACc;AAAlB;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAA,kBAAK/C,qBAAqB,CAACiC,YAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA,OAAWA,YAAY,CAACe,EAAxB;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBD,CADJ;AAsBH,CAvBD;;AAyBA,MAAMtB,YAAY,GAAG,MAAM;AACvB,sBACA;AAAA,2BACI;AAAA,8BACI;AAAA,kBAAKtB,IAAI,CAAC6C,CAAL,CAAO,yBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,wBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,sBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,qBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,qBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,uBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,yBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,yBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,8BAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,gCAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,kCAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,kCAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,2BAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,yBAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAA,kBAAK7C,IAAI,CAAC6C,CAAL,CAAO,6BAAP;AAAL;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAoBH,CArBD;;AAsBA,eAAe5C,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../../../adapters/WeatherForecastService';\nimport {getWeatherDescription, displayDateTime, convertTemperature} from '../../../businessLogic/WeatherBusinessLogic';\nimport {temperatureDropdownList} from '../../../buildingBlocks/commonBuildingBlocks.js'\nimport '../../../styles/common/Header.scss'\nimport i18n from 'i18next'\nimport '../../../i18n'\n function WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({} )\n    const [temperature, setTemperature] = useState({units : \"celsius\", abbreviation : \"Â°C\"})\n    \n    useEffect(() =>{\n       \n        console.log(\"som v useEffect forecast component\")\n        WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon, \"Current,Hourly,Minutely\")\n        .then( response => setDailyWeatherForecast(response.data)) \n        }, [props.history.location.state.lat, props.history.location.state.lon])\n\n    return (\n    <div>\n        <tbody>\n            <div>\n                {temperatureDropdownList( (units, abbreviation ) => {\n                    setTemperature({\"units\" : units, \"abbreviation\" : abbreviation})})\n                    }\n            </div>\n            <div>\n                <table className=\"weatherTable\">\n                    {createHeader.call()}\n                    {createMainBody(dailyWeatherForecast,  temperature)}\n                </table>\n            </div>\n        </tbody>\n    </div>)\n}\n\nconst changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n};\n\nconst createMainBody = (dailyWeatherForecast, temperature) => {\n    return (\n        dailyWeatherForecast?.daily?.map(dailyWeather =>{\n            return( \n                <tr key ={ dailyWeather.dt}>\n                    <td>{displayDateTime(new Date(dailyWeather.sunrise * 1000))}</td>\n                    <td>{displayDateTime(new Date(dailyWeather.sunset * 1000))}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.day).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.min).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.max).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.night).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.eve).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.temp.morn).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.day).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.night).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.eve).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{`${convertTemperature(temperature.units, dailyWeather.feels_like.morn).toFixed(2)}${temperature.abbreviation}`}</td>\n                    <td>{dailyWeather.wind_speed}</td>\n                    <td>{dailyWeather.wind_deg}</td>\n                    <td>{getWeatherDescription(dailyWeather)}</td>\n                </tr>)\n        })\n    )\n}\n\nconst createHeader = () => {\n    return ( \n    <thead>\n        <tr>\n            <th>{i18n.t(\"forecast.header.sunrise\")}</th>\n            <th>{i18n.t(\"forecast.header.sunset\")}</th>\n            <th>{i18n.t(\"forecast.header.temp\")}</th>\n            <th>{i18n.t(\"forecast.header.min\")}</th>\n            <th>{i18n.t(\"forecast.header.max\")}</th>\n            <th>{i18n.t(\"forecast.header.night\")}</th>\n            <th>{i18n.t(\"forecast.header.evening\")}</th>\n            <th>{i18n.t(\"forecast.header.morning\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeDay\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeNight\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeEvening\")}</th>\n            <th>{i18n.t(\"forecast.header.feelsLikeMorning\")}</th>\n            <th>{i18n.t(\"forecast.header.windSpeed\")}</th>\n            <th>{i18n.t(\"forecast.header.windDeg\")}</th>\n            <th>{i18n.t(\"forecast.header.description\")}</th>\n        </tr>\n    </thead>)\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}