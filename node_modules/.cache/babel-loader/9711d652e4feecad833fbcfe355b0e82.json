{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n    //console.log('executed service')\n    console.log(\"Sort: \" + sortBy);\n    console.log(\"filter: \" + JSON.stringify(filters));\n    console.log(\"filterOperator: \" + filterOperator);\n    console.log(\"weathers : \" + weathers);\n    console.log(\"weathers stringified : \" + JSON.stringify(weathers));\n    if (filters) filters = JSON.stringify(filters);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filters,\n      filterOperator\n    };\n    console.log(\"params: \" + JSON.stringify(params));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","filterOperator","weathers","console","log","JSON","stringify","params","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,QAA/C,EAAyD;AACxE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUN,MAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,cAAjC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAiBF,QAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAxC;AAEA,QAAGF,OAAH,EACIA,OAAO,GAAGK,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAV;AACJ,QAAG,CAACE,QAAJ,EACIA,QAAQ,GAAG,EAAX;AAEJ,UAAMK,MAAM,GAAG;AACXT,MAAAA,MADW;AACHC,MAAAA,WADG;AACUC,MAAAA,OADV;AACmBC,MAAAA;AADnB,KAAf;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAzB;AACA,WAAOd,KAAK,CAACe,IAAN,CAAY,GAAEb,eAAgB,kBAA9B,EAAiDO,QAAjD,EAA0D;AAACK,MAAAA;AAAD,KAA1D,CAAP;AACH;;AArBgB;;AAuBrB,eAAe,IAAIX,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n        //console.log('executed service')\n        console.log(\"Sort: \" +sortBy)\n        console.log(\"filter: \" + JSON.stringify(filters))\n        console.log(\"filterOperator: \" + filterOperator)\n        console.log(\"weathers : \" + (weathers))\n        console.log(\"weathers stringified : \" + JSON.stringify(weathers))\n\n        if(filters)\n            filters = JSON.stringify(filters)\n        if(!weathers)\n            weathers = []\n            \n        const params = {\n            sortBy, isAscending, filters, filterOperator\n        }\n\n        console.log(\"params: \" + JSON.stringify(params) )\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}