{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  const placeholder = (filters, filterKey, placeholderValue) => {\n    console.log(\"im here\");\n    console.log(filters[filterKey]);\n    let ret = placeholderValue;\n    filters.some(item => {\n      console.log(\"item: \" + item.filterKey);\n\n      if (item[filterKey] !== 'undefined') {\n        ret = filterKey;\n        return true;\n      } else {\n        ret = placeholderValue;\n        return false;\n      }\n    });\n    return ret;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"cityName\", i18n.t(\"current.filters.cityName\")),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"latitudeFrom\", i18n.t(\"current.filters.latitudeFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"latitudeTo\", i18n.t(\"current.filters.latitudeTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"longitudeFrom\", i18n.t(\"current.filters.longitudeFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"longitudeTo\", i18n.t(\"current.filters.longitudeTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"humidityFrom\", i18n.t(\"current.filters.humidityFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"humidityTo\", i18n.t(\"current.filters.humidityTo\")),\n      onChange: event => {\n        if (isNumber(event.taprget.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"feelTemperatureFrom\", i18n.t(\"current.filters.feelTemperatureFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"feelTemperatureTo\", i18n.t(\"current.filters.feelTemperatureTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureFrom\", i18n.t(\"current.filters.temperatureFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureTo\", i18n.t(\"current.filters.temperatureTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureMaxFrom\", i18n.t(\"current.filters.temperatureMaxFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureMaxTo\", i18n.t(\"current.filters.temperatureMaxTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureMinFrom\", i18n.t(\"current.filters.temperatureMinFrom\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder(props.filters, \"temperatureMinTo\", i18n.t(\"current.filters.temperatureMinTo\")),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: placeholder(props.filters, \"description\", i18n.t(\"current.filters.pickDescriptions\")),\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: placeholder(props.filters, \"country\", i18n.t(\"current.filters.pickCountries\")),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromDescriptions = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nconst makeStringFromCountries = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","placeholder","filters","placeholderValue","console","log","ret","some","item","t","event","target","value","isNumber","taprget","calculateKelvins","temperatureUnits","descriptions","makeStringFromDescriptions","countries","makeStringFromCountries","temperatureValue","parseFloat","toString","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","originalValue","reduce","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    const placeholder = (filters, filterKey, placeholderValue) => {\n        console.log(\"im here\")\n        console.log(filters[filterKey])\n        let ret = placeholderValue\n        filters.some((item) => {\n            console.log(\"item: \" + item.filterKey)\n           if (item[filterKey] !== 'undefined'){\n               ret = filterKey\n               return true;\n           }\n\n           else {\n                ret = placeholderValue\n                return false;\n           }\n        })\n        return ret\n    }\n    return (\n        <form className=\"currentFiltersWrappes\">\n\n                {/* <p>Latitude</p> */}\n                {<input placeholder= {placeholder(props.filters, \"cityName\", i18n.t(\"current.filters.cityName\"))} onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n\n                {<input placeholder= {placeholder(props.filters, \"latitudeFrom\", i18n.t(\"current.filters.latitudeFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"latitudeTo\", i18n.t(\"current.filters.latitudeTo\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"longitudeFrom\", i18n.t(\"current.filters.longitudeFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"longitudeTo\", i18n.t(\"current.filters.longitudeTo\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"humidityFrom\", i18n.t(\"current.filters.humidityFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"humidityTo\", i18n.t(\"current.filters.humidityTo\"))} onChange= {event =>{if (isNumber(event.taprget.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"feelTemperatureFrom\", i18n.t(\"current.filters.feelTemperatureFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"feelTemperatureTo\", i18n.t(\"current.filters.feelTemperatureTo\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureFrom\", i18n.t(\"current.filters.temperatureFrom\") )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureTo\", i18n.t(\"current.filters.temperatureTo\") )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureMaxFrom\", i18n.t(\"current.filters.temperatureMaxFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureMaxTo\", i18n.t(\"current.filters.temperatureMaxTo\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureMinFrom\", i18n.t(\"current.filters.temperatureMinFrom\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= {placeholder(props.filters, \"temperatureMinTo\", i18n.t(\"current.filters.temperatureMinTo\"))} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect placeholder={placeholder(props.filters, \"description\", i18n.t(\"current.filters.pickDescriptions\"))} options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect placeholder={placeholder(props.filters, \"country\", i18n.t(\"current.filters.pickCountries\"))} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromDescriptions= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nconst makeStringFromCountries= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}