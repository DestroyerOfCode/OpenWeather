{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon));\n  useEffect(() => {\n    console.log(\"som v useEffect forecast component\");\n    getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon);\n  });\n  return;\n}\n\n_s(WeatherForecastComponent, \"2vL2q7uTnv+ZbeaUdCUqdCNHzHs=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = (lat, lon) => {\n  console.log(\"som v metode getDailyWeatherForecast\");\n  return WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Minutely\");\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","getDailyWeatherForecast","lat","lon","getDailyForecastByCityName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEA,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAACc,uBAAuB,CAACV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CAAxB,CAAhE;AAEAf,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAQ,IAAAA,uBAAuB,CAACV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CAAvB;AACH,GAHQ,CAAT;AAIA;AACH;;GAZQb,wB;;KAAAA,wB;;AAcT,MAAMW,uBAAuB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1CX,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,SAAOJ,sBAAsB,CAACe,0BAAvB,CAAkDF,GAAlD,EAAuDC,GAAvD,EAA4D,kBAA5D,CAAP;AACH,CAHD;;AAIA,eAAeb,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon))\n    \n    useEffect(() =>{\n        console.log(\"som v useEffect forecast component\")\n        getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon)\n    })\n    return;\n}\n\nconst getDailyWeatherForecast = (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    return WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Minutely\")\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}