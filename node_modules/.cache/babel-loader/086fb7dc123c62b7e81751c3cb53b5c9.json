{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  const [coordLatFrom, setCoordLatFrom] = useState(0);\n  const [language, setLanguage] = useState(props.language);\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, language, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n    console.log(\"filterStringify: \" + JSON.stringify(filter));\n    console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue);\n    console.log(filterKey in filter);\n    let ret = i18n.t(`current.filters.${translationKey}`);\n    filter.some(item => {\n      if (filterKey in item && item[filterKey][filterOperator] === defaultCompareValue) {\n        // setFunc(props.filters[filterKey][filterOperator])\n        ret = item[filterKey][filterOperator];\n        return true;\n      } else return false;\n    });\n    return ret;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.cityName\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"latitudeFrom\", \"coord.lat\", \"gte\", 0),\n      onChange: event => {\n        if (isNumber(event.target.value)) {\n          setCoordLatFrom(event.target.value);\n          buildFilter(event.target.value, \"coord.lat\", \"gte\");\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.latitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.longitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.longitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.humidityFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.humidityTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.feelTemperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.feelTemperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMaxFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMaxTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMinFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: i18n.t(\"current.filters.temperatureMinTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: i18n.t(\"current.filters.pickDescriptions\"),\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      placeholder: i18n.t(\"current.filters.pickCountries\"),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"lNQPEvf8hDRj3i1ndShRmcUm4UQ=\");\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromDescriptions = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nconst makeStringFromCountries = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","coordLatFrom","setCoordLatFrom","language","setLanguage","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","getPlaceholder","filter","translationKey","defaultCompareValue","console","log","JSON","stringify","ret","t","some","item","event","target","value","filters","isNumber","calculateKelvins","temperatureUnits","descriptions","makeStringFromDescriptions","countries","makeStringFromCountries","temperatureValue","parseFloat","toString","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","originalValue","reduce","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n    const [coordLatFrom, setCoordLatFrom] = useState(0);\n    const [language, setLanguage] = useState(props.language);\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, language, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n        console.log(\"filterStringify: \" + JSON.stringify(filter))\n        console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n        console.log( filterKey in filter)\n        let ret = i18n.t(`current.filters.${translationKey}`);\n        filter.some((item) => {\n        if ( filterKey in item && item[filterKey][filterOperator] === defaultCompareValue) {\n            // setFunc(props.filters[filterKey][filterOperator])\n            ret = item[filterKey][filterOperator];\n            return true;\n        }\n        else return false\n        })\n        return ret;\n    }\n    return (\n        <form className=\"currentFiltersWrappes\">\n                {<input placeholder= {i18n.t(\"current.filters.cityName\")} onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"latitudeFrom\", \"coord.lat\", \"gte\", 0)} onChange= {event =>{if (isNumber(event.target.value)) {setCoordLatFrom(event.target.value); buildFilter(event.target.value, \"coord.lat\", \"gte\")}}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.latitudeTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.longitudeFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.longitudeTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.humidityFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.humidityTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.feelTemperatureFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.feelTemperatureTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureFrom\" )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureTo\" )} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMaxFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMaxTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMinFrom\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= {i18n.t(\"current.filters.temperatureMinTo\")} onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect placeholder={i18n.t(\"current.filters.pickDescriptions\")} options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect placeholder={i18n.t(\"current.filters.pickCountries\")} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromDescriptions= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nconst makeStringFromCountries= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}