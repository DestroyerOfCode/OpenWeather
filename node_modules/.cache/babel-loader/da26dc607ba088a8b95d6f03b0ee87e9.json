{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, isFilter, weathers) {\n    var filterString = this.buildFilterString(filters); // console.log(\"filters?.length: \" + filters?.length)\n    //    console.log(\"filters before POST: \" + JSON.stringify(filters))\n\n    if (!weathers) weathers = []; // console.log(\"weathers: \" + JSON.stringify(weathers))\n\n    const params = {\n      sortBy,\n      isAscending,\n      filterString,\n      isFilter\n    }; // console.log(\"params: \" + JSON.stringify(params) )\n\n    console.log(\"filters: \" + JSON.stringify(filters));\n    console.log(\"filterString: \" + filterString);\n    console.log(\"params: \" + JSON.stringify(params));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n  buildFilterString(filters) {\n    var filterString = \"\";\n    console.log(\"filters?.length: \" + (filters === null || filters === void 0 ? void 0 : filters.length));\n\n    for (var i = 0; i <= (filters === null || filters === void 0 ? void 0 : filters.length) - 1; ++i) {\n      console.log(\"filteringNode : filters[i].filteringNode}): \" + JSON.stringify({\n        \"filteringNode\": filters[i].filteringNode\n      }));\n      filterString += JSON.stringify({\n        \"filteringNode\": filters[i].filteringNode\n      });\n      if (filters[i + 1]) filterString += \",\"; // console.log(\"filters[i]: \" + JSON.stringify(filters[i]))\n    }\n\n    return filterString;\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","isFilter","weathers","filterString","buildFilterString","params","console","log","JSON","stringify","post","length","i","filteringNode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmD;AAClE,QAAIC,YAAY,GAAG,KAAKC,iBAAL,CAAuBJ,OAAvB,CAAnB,CADkE,CAElE;AACJ;;AACI,QAAG,CAACE,QAAJ,EACIA,QAAQ,GAAG,EAAX,CAL8D,CAM9D;;AACJ,UAAMG,MAAM,GAAG;AACXP,MAAAA,MADW;AACHC,MAAAA,WADG;AACUI,MAAAA,YADV;AACwBF,MAAAA;AADxB,KAAf,CAPkE,CAWlE;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAA1B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBJ,YAA/B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAzB;AAEA,WAAOZ,KAAK,CAACiB,IAAN,CAAY,GAAEf,eAAgB,kBAA9B,EAAiDO,QAAjD,EAA0D;AAACG,MAAAA;AAAD,KAA1D,CAAP;AACH;;AAEDD,EAAAA,iBAAiB,CAACJ,OAAD,EAAS;AACtB,QAAIG,YAAY,GAAG,EAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBP,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEW,MAA/B,CAAZ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAAAZ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEW,MAAT,IAAgB,CAApC,EAAuC,EAAEC,CAAzC,EAA2C;AACvCN,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAiDC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAkBT,OAAO,CAACY,CAAD,CAAP,CAAWC;AAA9B,OAAf,CAA7D;AACAV,MAAAA,YAAY,IAAGK,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAkBT,OAAO,CAACY,CAAD,CAAP,CAAWC;AAA9B,OAAf,CAAf;AACA,UAAIb,OAAO,CAACY,CAAC,GAAC,CAAH,CAAX,EACIT,YAAY,IAAI,GAAhB,CAJmC,CAKvC;AACH;;AACD,WAAOA,YAAP;AACH;;AAhCgB;;AAkCrB,eAAe,IAAIP,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, weathers) {\n        var filterString = this.buildFilterString(filters)\n        // console.log(\"filters?.length: \" + filters?.length)\n    //    console.log(\"filters before POST: \" + JSON.stringify(filters))\n        if(!weathers)\n            weathers = []\n            // console.log(\"weathers: \" + JSON.stringify(weathers))\n        const params = {\n            sortBy, isAscending, filterString, isFilter\n        }\n\n        // console.log(\"params: \" + JSON.stringify(params) )\n        console.log(\"filters: \" + JSON.stringify(filters))\n        console.log(\"filterString: \" + filterString)\n        console.log(\"params: \" + JSON.stringify(params))\n\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        console.log(\"filters?.length: \" + filters?.length)\n        for(var i = 0; i <= filters?.length-1; ++i){\n            console.log(\"filteringNode : filters[i].filteringNode}): \" + JSON.stringify({\"filteringNode\" : filters[i].filteringNode}))\n            filterString+= JSON.stringify({\"filteringNode\" : filters[i].filteringNode});\n            if (filters[i+1])\n                filterString += \",\"\n            // console.log(\"filters[i]: \" + JSON.stringify(filters[i]))\n        }\n        return filterString\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}