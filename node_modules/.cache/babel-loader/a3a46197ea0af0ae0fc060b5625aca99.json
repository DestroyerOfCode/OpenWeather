{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  var _dailyWeatherForecast, _dailyWeatherForecast2;\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  useEffect(async () => {\n    (async () => {\n      console.log(\"som v useEffect forecast component\");\n      console.log(\"func: \");\n      const res = await getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data;\n      setDailyWeatherForecast(res);\n    })(dailyWeatherForecast);\n  }, [dailyWeatherForecast]); // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.data) === null || _dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast2 = _dailyWeatherForecast.daily) === null || _dailyWeatherForecast2 === void 0 ? void 0 : _dailyWeatherForecast2.map(dailyWeather => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dailyWeather.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, dailyWeather.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"bJ5teWGutBLkVhno6XsU0CImiiw=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n  console.log(\"som v metode getDailyWeatherForecast\");\n  const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\");\n  console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc));\n  return dailyWeatherForecastFunc;\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","res","getDailyWeatherForecast","lat","lon","data","daily","map","dailyWeather","id","dailyWeatherForecastFunc","getDailyForecastByCityName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEC,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAAA;;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,YAAU;AAChB,KAAE,YAAY;AACVI,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMQ,GAAG,GAAG,MAAMC,uBAAuB,CAACX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAA9B,EAAmCZ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BM,GAAhE,CAAvB,CAA4FC,IAA9G;AACAL,MAAAA,uBAAuB,CAACC,GAAD,CAAvB;AACD,KALF,EAMFF,oBANE;AAMoB,GAPf,EAOiB,CAACA,oBAAD,CAPjB,CAAT,CAPqC,CAgBrC;;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AAEA,sBACA;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,gBACKA,oBADL,aACKA,oBADL,gDACKA,oBAAoB,CAAEM,IAD3B,oFACK,sBAA4BC,KADjC,2DACK,uBAAmCC,GAAnC,CAAuCC,YAAY,IAAG;AACnD,4BACI;AAAA,iCACI;AAAA,sBAAKA,YAAY,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAWD,YAAY,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAWH;;GA9BSnB,wB;;KAAAA,wB;;AAgCV,MAAMY,uBAAuB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChDZ,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,QAAMiB,wBAAwB,GAAG,MAAMrB,sBAAsB,CAACsB,0BAAvB,CAAkDR,GAAlD,EAAuDC,GAAvD,EAA4D,yBAA5D,CAAvC;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACC,SAAL,CAAee,wBAAf,CAA3C;AACA,SAAOA,wBAAP;AACH,CALD;;AAMA,eAAepB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\n function WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({})\n    \n    useEffect(async() =>{\n        ( async () => {\n            console.log(\"som v useEffect forecast component\")\n           console.log(\"func: \" )\n           const res = await getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data\n           setDailyWeatherForecast(res);\n         }\n    )(dailyWeatherForecast)}, [dailyWeatherForecast])\n\n    // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n\n    return (\n    <tbody>\n        <table className=\"table\">\n            {dailyWeatherForecast?.data?.daily?.map(dailyWeather =>{\n                return( \n                    <tr key ={ dailyWeather.id}>\n                        <td>{dailyWeather.id}</td>\n                    </tr>)\n            })}\n        </table>\n    </tbody>)\n}\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\")\n    console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc))\n    return dailyWeatherForecastFunc\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}