{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport WeatherCurrentComponent from './current/WeatherCurrent';\nimport { withTranslation } from 'react-i18next';\nimport WeatherForecastComponent from './forecast/daily/WeatherForecastDaily';\nimport { temperatureDropdownList } from '../buildingBlocks/commonBuildingBlocks';\nimport i18n from 'i18next';\nimport '../i18n';\n\nfunction WeatherApp() {\n  _s();\n\n  const [temperature, setTemperature] = useState({\n    \"units\": \"kelvin\",\n    \"abbreviation\": \"K\"\n  });\n  console.log(temperature);\n  useEffect(() => {\n    return /*#__PURE__*/_jsxDEV(WeatherCurrentComponent, { ...props,\n      temperature: temperature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage(\"en\"),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage(\"sk\"),\n        children: \"SK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage(\"de\"),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), temperatureDropdownList(async (units, abbreviation) => {\n        console.log(units);\n        await setTemperature({\n          \"units\": units,\n          \"abbreviation\": abbreviation\n        });\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), \",\", /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => {\n          console.log(temperature);\n          return /*#__PURE__*/_jsxDEV(WeatherCurrentComponent, { ...props,\n            temperature: temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 88\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forecast\",\n        render: props => /*#__PURE__*/_jsxDEV(WeatherForecastComponent, { ...props,\n          temperature: temperature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}\n\n_s(WeatherApp, \"t+OhaKRpVjRhgoTfqbVIRhU6Pxo=\");\n\n_c = WeatherApp;\nexport default withTranslation()(WeatherApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/WeatherApp.js"],"names":["React","useEffect","useState","Switch","Route","WeatherCurrentComponent","withTranslation","WeatherForecastComponent","temperatureDropdownList","i18n","WeatherApp","temperature","setTemperature","console","log","props","changeLanguage","units","abbreviation"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,uBAAP,MAAoC,0BAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,wBAAP,MAAqC,uCAArC;AACA,SAAQC,uBAAR,QAAsC,wCAAtC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,SAAP;;AAEA,SAASC,UAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAAC,aAAS,QAAV;AAAoB,oBAAgB;AAApC,GAAD,CAA9C;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAK;AACX,wBAAO,QAAC,uBAAD,OAA6Bc,KAA7B;AAAoC,MAAA,WAAW,EAAEJ;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,sBAAO;AAAA,4BACH;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMF,IAAI,CAACO,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMP,IAAI,CAACO,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMP,IAAI,CAACO,cAAL,CAAoB,IAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKR,uBAAuB,CAAE,OAAOS,KAAP,EAAcC,YAAd,KAAgC;AACtDL,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,cAAML,cAAc,CAAC;AAAC,mBAAUK,KAAX;AAAkB,0BAAiBC;AAAnC,SAAD,CAApB;AACC,OAHmB,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,oBAWH,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,GAAnB;AAAuB,QAAA,MAAM,EAAGH,KAAD,IAAW;AAACF,UAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAAyB,8BAAO,QAAC,uBAAD,OAA6BI,KAA7B;AAAoC,YAAA,WAAW,EAAEJ;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAAP;AAAuE;AAA3I;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,WAAb;AAAyB,QAAA,MAAM,EAAGI,KAAD,iBAAW,QAAC,wBAAD,OAA8BA,KAA9B;AAAqC,UAAA,WAAW,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH;;GAzBQD,U;;KAAAA,U;AA4BT,eAAgBJ,eAAe,GAAGI,UAAH,CAA/B","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport WeatherCurrentComponent from './current/WeatherCurrent';\nimport { withTranslation } from 'react-i18next';\nimport WeatherForecastComponent from './forecast/daily/WeatherForecastDaily';\nimport {temperatureDropdownList} from '../buildingBlocks/commonBuildingBlocks'\n\nimport i18n from 'i18next'\nimport '../i18n'\n\nfunction WeatherApp () {\n\n    const [temperature, setTemperature] = useState({\"units\": \"kelvin\", \"abbreviation\": \"K\"})\n    console.log(temperature)\n\n    useEffect(() =>{\n        return <WeatherCurrentComponent {...props} temperature={temperature}/>\n    },[])\n    return <main> \n        <div>                               \n            <button onClick={() => i18n.changeLanguage(\"en\")}>EN</button>\n            <button onClick={() => i18n.changeLanguage(\"sk\")}>SK</button>   \n            <button onClick={() => i18n.changeLanguage(\"de\")}>DE</button>  \n            {temperatureDropdownList( async (units, abbreviation ) => {\n                console.log(units)\n                await setTemperature({\"units\" : units, \"abbreviation\" : abbreviation})\n                }) \n            }\n        </div>,   \n        <Switch>\n            <Route exact path ='/' render={(props) => {console.log(temperature);return <WeatherCurrentComponent {...props} temperature={temperature}/>}}/>\n            <Route path ='/forecast' render={(props) => <WeatherForecastComponent {...props} temperature={temperature}/>}/>\n\n        </Switch>\n    </main>\n}\n\n\nexport default  withTranslation()(WeatherApp)\n"]},"metadata":{},"sourceType":"module"}