{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n    // console.log(\"filterStringify: \" + JSON.stringify(filter))\n    // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n    let ret = \"\"; // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n\n    ret = i18n.t(`current.filters.${translationKey}`);\n    filter.some(item => {\n      // console.log( filterKey in item)\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey])); // setFunc(props.filters[filterKey][filterOperator])\n\n        ret += \" \" + item[filterKey][filterOperator];\n        return true;\n      } else return false;\n    });\n    return ret;\n  };\n\n  const getSelectedDescriptions = (filters, filterKey, filterOperator, descriptions) => {\n    let retArr = [];\n    console.log(filters);\n    filters.some(item => {\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        console.log(\"item[filterKey][filterOperator]: \" + item[filterKey][filterOperator]);\n        item[filterKey][filterOperator].split(\",\").forEach(description => {\n          let originalValue = \"\";\n          descriptions.some(item => {\n            console.log(item);\n\n            if (description === item.originalValue) {\n              originalValue = item.originalValue;\n              return true;\n            }\n\n            return false;\n          });\n          console.log(description);\n          retArr.push({\n            \"name\": i18n.t(`common.description.${description}`),\n            \"originalValue\": originalValue\n          });\n        });\n        return true;\n      }\n\n      return false;\n    });\n    console.log(retArr);\n    return retArr;\n  };\n\n  const getSelectedCountries = (filters, filterKey, filterOperator) => {\n    let retArr = [];\n    filters.some(item => {\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        item[filterKey][filterOperator].split(\",\").forEach(country => {\n          retArr.push({\n            \"name\": country\n          });\n        });\n        return true;\n      }\n\n      return false;\n    });\n    return retArr;\n  };\n\n  console.log(props.descriptions);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"cityName\", \"name\", \"eq\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"\",\n      placeholder: getPlaceholder(props.filters, \"latitudeFrom\", \"coord.lat\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) {\n          buildFilter(event.target.value, \"coord.lat\", \"gte\");\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"latitudeTo\", \"coord.lat\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"longitudeFrom\", \"coord.lon\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"longitudeTo\", \"coord.lon\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"humidityFrom\", \"weatherMain.humidity\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"humidityTo\", \"weatherMain.humidity\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"feelTemperatureFrom\", \"weatherMain.feels_like\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"feelTemperatureTo\", \"weatherMain.feels_like\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureFrom\", \"weatherMain.temp\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureTo\", \"weatherMain.temp\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureMaxFrom\", \"weatherMain.temp_max\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureMaxTo\", \"weatherMain.temp_max\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureMinFrom\", \"weatherMain.temp_min\", \"gte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: getPlaceholder(props.filters, \"temperatureMinTo\", \"weatherMain.temp_min\", \"lte\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions),\n      placeholder: i18n.t(\"current.filters.pickDescriptions\"),\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        console.log(event);\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedCountries(props.filters, \"sys.country\", \"in\"),\n      placeholder: i18n.t(\"current.filters.pickCountries\"),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromDescriptions = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue;\n  };\n\n  console.log(items);\n  console.log(items.reduce(selectedItemsIntoString, ''));\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nconst makeStringFromCountries = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","getPlaceholder","filter","translationKey","defaultCompareValue","ret","t","some","item","console","log","JSON","stringify","getSelectedDescriptions","filters","descriptions","retArr","split","forEach","description","originalValue","push","getSelectedCountries","country","event","target","value","isNumber","calculateKelvins","temperatureUnits","makeStringFromDescriptions","countries","makeStringFromCountries","temperatureValue","parseFloat","toString","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","reduce","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n        // console.log(\"filterStringify: \" + JSON.stringify(filter))\n        // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n        let ret = \"\"\n        // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n            ret = i18n.t(`current.filters.${translationKey}`);\n        filter.some((item) => {\n            // console.log( filterKey in item)\n            if ( filterKey in item && filterOperator in item[filterKey]) {\n                console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey]))\n\n                // setFunc(props.filters[filterKey][filterOperator])\n                ret += \" \" + item[filterKey][filterOperator];\n                return true;\n            }\n            else return false\n        })\n        return ret;\n    }\n\n    const getSelectedDescriptions= (filters, filterKey, filterOperator, descriptions) =>{\n\n        let retArr= []\n        console.log(filters)\n        filters.some((item) => {\n            if (filterKey in item && filterOperator in item[filterKey]){\n                console.log(\"item[filterKey][filterOperator]: \" + item[filterKey][filterOperator])\n                item[filterKey][filterOperator].split(\",\").forEach((description) => {\n                    let originalValue = \"\"\n                    descriptions.some((item) => {\n                        console.log(item)\n                        if(description === item.originalValue){\n                            originalValue = item.originalValue\n                            return true;\n                        } return false\n                    })\n                    console.log(description)\n                    retArr.push({\"name\": i18n.t(`common.description.${description}`), \"originalValue\": originalValue})\n                })\n                return true;\n            }\n            return false;\n        })\n        console.log(retArr)\n        return retArr\n    }\n\n    const getSelectedCountries= (filters, filterKey, filterOperator) =>{\n\n        let retArr = []\n        filters.some((item) =>{\n            if (filterKey in item && filterOperator in item[filterKey]){\n\n                item[filterKey][filterOperator].split(\",\").forEach((country) => {\n                    retArr.push({\"name\": country})\n                })\n                return true;\n            }\n            return false;\n        })\n        return retArr\n    }\n\n    console.log(props.descriptions)\n    return (\n        <form className=\"currentFiltersWrappes\">\n                {<input placeholder= {getPlaceholder(props.filters, \"cityName\", \"name\", \"eq\") } onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n                {<input value=\"\" placeholder= {getPlaceholder(props.filters, \"latitudeFrom\", \"coord.lat\", \"gte\")} onChange= {event =>{if (isNumber(event.target.value)) {buildFilter(event.target.value, \"coord.lat\", \"gte\")}}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"latitudeTo\", \"coord.lat\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"longitudeFrom\", \"coord.lon\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"longitudeTo\", \"coord.lon\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"humidityFrom\", \"weatherMain.humidity\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"humidityTo\", \"weatherMain.humidity\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"feelTemperatureFrom\", \"weatherMain.feels_like\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"feelTemperatureTo\", \"weatherMain.feels_like\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureFrom\", \"weatherMain.temp\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureTo\", \"weatherMain.temp\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureMaxFrom\", \"weatherMain.temp_max\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureMaxTo\", \"weatherMain.temp_max\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureMinFrom\", \"weatherMain.temp_min\", \"gte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input placeholder= {getPlaceholder(props.filters, \"temperatureMinTo\", \"weatherMain.temp_min\", \"lte\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect selectedValues={getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions)} placeholder={i18n.t(\"current.filters.pickDescriptions\")} options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{console.log(event);buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect selectedValues={getSelectedCountries(props.filters, \"sys.country\", \"in\")} placeholder={i18n.t(\"current.filters.pickCountries\")} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromDescriptions= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue\n    }\n    console.log(items)\n    console.log(items.reduce(selectedItemsIntoString, ''))\n    return items.reduce(selectedItemsIntoString, '')\n}\nconst makeStringFromCountries= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}