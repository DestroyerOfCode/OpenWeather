{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/WeatherCurrent.js\";\nimport React, { Component } from 'react';\nimport WeatherCurrentService from '../../adapters/WeatherCurrentService';\nimport Pagination from '../current/Pagination';\nimport FiltersComponent from './Filters';\nimport { Link } from \"react-router-dom\";\nimport { getWeatherDescription, convertTemperature } from '../../businessLogic/WeatherBusinessLogic';\nimport { temperatureDropdownList } from '../../buildingBlocks/commonBuildingBlocks';\nimport '../../styles/common/Header.scss';\nimport '../../styles/current/Filters.scss';\nimport { nanoid } from \"nanoid\";\nimport { withTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport '../../i18n';\n\nclass WeatherCurrent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFilterOperatorToExistingFilterName = (event, filterName, filterOperator) => {\n      const arr = this.state.filters;\n      arr.forEach((item, index, filters) => {\n        if (item.hasOwnProperty([filterName])) {\n          filters[index][filterName][filterOperator] = event;\n        }\n      });\n      return arr;\n    };\n\n    this.onChangeFilter = (event, filterName, filterOperator) => {\n      // console.log(\"event: \" + JSON.stringify(event))\n      // console.log(\"filters: \" + JSON.stringify(this.state.filters))\n      var index;\n\n      if (event === \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n        console.log(\"inside 1\");\n        index = this.findIndexInFilters(this.state.filters, filterName);\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: false,\n          filters: this.changeFilters(index, filterName, filterOperator)\n        }, function () {\n          this.refreshWeathers(this.state.sortBy, this.state.weathers);\n        });\n      } else if (event !== \"\" && !this.keyExistsInArr(this.state.filters, filterName)) {\n        console.log(\"inside 2\");\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: true,\n          filters: this.state.filters.concat([{\n            [filterName]: {\n              [filterOperator]: event\n            }\n          }])\n        }, function () {\n          // console.log(\"filters inside: \" + this.state.filters)\n          this.refreshWeathers(this.state.sortBy, this.state.weathers);\n        });\n      } else if (event !== \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n        console.log(\"inside 3\");\n        index = this.findIndexInFilters(this.state.filters, filterName);\n        this.setState({\n          currentPage: 1,\n          isFilter: true,\n          isAdditionalFilter: this.isAdditionalFilterCheck(event, index, filterName, filterOperator),\n          filters: this.addFilterOperatorToExistingFilterName(event, filterName, filterOperator)\n        }, function () {\n          this.refreshWeathers(this.state.sortBy, this.state.weathers);\n        });\n      } else {\n        console.log(\"inside 4\");\n      }\n    };\n\n    this.createForecast = () => {\n      console.log(\"dfs\");\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.paginate = page => {\n      // if(currentPage !== 0 && currentPage <= lastPage)\n      this.setState({\n        currentPage: page\n      }, function () {\n        console.log(\"currPage: \" + this.state.currentPage);\n      });\n    };\n\n    this.getWeathersOnSpecificPage = () => {\n      console.log('after pagination creation');\n      const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n      const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n      return this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n    };\n\n    this.changeLanguage = (language, i18n) => {\n      i18n.changeLanguage(language);\n    };\n\n    console.log(\"props.t: \" + props.t);\n    this.state = {\n      weathers: [],\n      isAscending: true,\n      filters: [],\n      isFilter: false,\n      currentPage: 1,\n      itemsPerPage: 1000,\n      loading: false,\n      isAdditionalFilter: false,\n      pageNumbers: [],\n      countries: [],\n      descriptions: [],\n      showPages: 5,\n      filterComponent: null,\n      header: null,\n      i18n: props.i18n,\n      t: props.t,\n      temperatureDropdownList: null,\n      temperature: {\n        units: 'celsius',\n        abbreviation: 'Â°C'\n      }\n    };\n  } //I added temperatureDropdownList, filterscomponent and header here because I do not want to rerender them\n  //on every update. I cant use shouldComponentUpdate because they either are not components or are functional\n  //meaning they are stateless\n\n\n  async componentDidMount() {\n    console.log(\"som v componentDidMOunt weather list\");\n    const countries = await WeatherCurrentService.retrieveAllCountries();\n    const descriptions = await WeatherCurrentService.retrieveAllDescriptions();\n    this.setState({\n      countries: countries.data,\n      descriptions: descriptions.data,\n      temperatureDropdownList: temperatureDropdownList((units, abbreviation) => {\n        this.setState({\n          \"temperature\": {\n            \"units\": units,\n            \"abbreviation\": abbreviation\n          }\n        });\n      }),\n      header: this.header()\n    }, function () {\n      this.refreshWeathers();\n    });\n  }\n\n  refreshWeathers(sortBy, weathers) {\n    WeatherCurrentService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, weathers).then(response => {\n      this.setState({\n        weathers: response.data\n      });\n    }).then(() => {\n      if (sortBy) this.setState({\n        isAscending: !this.state.isAscending\n      });\n    }).then(() => {\n      if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({\n        isFilter: false\n      });\n    });\n  }\n\n  keyExistsInArr(arr, key) {\n    let exists = false;\n    console.log(\"arr inside keyExists: \" + JSON.stringify(arr));\n\n    if (!Array.isArray(key)) {\n      arr === null || arr === void 0 ? void 0 : arr.some(item => {\n        if (item.hasOwnProperty([key])) {\n          exists = true;\n          return true;\n        } else return false;\n      });\n    } //since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\n    else {\n        arr === null || arr === void 0 ? void 0 : arr.some(item => {\n          if (item.includes([key])) {\n            exists = true;\n            return true;\n          } else return false;\n        });\n      }\n\n    return exists;\n  }\n\n  findIndexInFilters(arr, key) {\n    let indexOfKey = 0;\n    arr === null || arr === void 0 ? void 0 : arr.some((filterName, index, filters) => {\n      if (filterName.hasOwnProperty([key])) {\n        indexOfKey = index;\n        return indexOfKey;\n      } else return false;\n    });\n    return indexOfKey;\n  }\n\n  changeFilters(index, filterName, filterOperator) {\n    let arr = this.state.filters;\n    console.log(\"arr inside changefilters: \" + JSON.stringify(arr));\n    if (arr[index][filterName][filterOperator]) delete arr[index][filterName][filterOperator];\n    if (Object.keys(arr[index][filterName]).length === 0) arr.splice(index, 1);\n    return arr;\n  }\n\n  isAdditionalFilterCheck(event, index, filterName, filterOperator) {\n    if (this.isNotAdditionalFilterWithContains(event) === false) return false;\n    console.log(\"this.state.filters[index][filterName][filterOperator]: \" + this.state.filters[index][filterName][filterOperator]);\n    if (this.isSameFilterChanged(event, index, filterName, filterOperator) === false) return false;\n    return true;\n  } //if there are multiple countries and descriptions, backend must make a new query\n  //since no additional filter is added, only value. I am unable to send query request\n  //with an array element\n\n\n  isNotAdditionalFilterWithContains(event) {\n    return event.includes(\",\") ? false : true;\n  } // this check is here for times when I change the same filter multiple\n  // times in a row and the filter is same. If it is the same I cant filter\n  // from memory because I could not load some weathers\n\n\n  isSameFilterChanged(event, index, filterName, filterOperator) {\n    console.log(\"event: \" + event);\n    console.log(\"this.state.filters[index][filterName][filterOperator]: \" + this.state.filters[index][filterName][filterOperator]);\n    return filterName === this.state.filters[index][filterName];\n  }\n\n  header(i18n) {\n    console.log(\"i18n v header: \" + i18n);\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"_id\", this.state.weathers),\n          children: \"cityId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"name\", this.state.weathers),\n          children: i18n !== 'undefined' ? i18n.t('header.cityName') : 'cityName'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lat\", this.state.weathers),\n          children: \"latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lon\", this.state.weathers),\n          children: \"longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"sys.country\", this.state.weathers),\n          children: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers),\n          children: \"humidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers),\n          children: \"feels like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp\", this.state.weathers),\n          children: \"temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers),\n          children: \"maximum temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers),\n          children: \"minimal temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weather.description\", this.state.weathers),\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 16\n    }, this);\n  }\n\n  mainBody(currentPosts, temperature) {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: currentPosts.map(weather => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/forecast\",\n                state: {\n                  \"lat\": weather.coord.lat,\n                  \"lon\": weather.coord.lon\n                }\n              },\n              children: weather.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.coord.lon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: weather.weatherMain.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${convertTemperature(temperature.units, weather.weatherMain.feels_like).toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${convertTemperature(temperature.units, weather.weatherMain.temp).toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${convertTemperature(temperature.units, weather.weatherMain.temp_max).toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${convertTemperature(temperature.units, weather.weatherMain.temp_min).toFixed(2)}${temperature.abbreviation}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getWeatherDescription(weather)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    console.log(\"som v render weather list\");\n    const currentWeathers = this.getWeathersOnSpecificPage();\n\n    const filters = /*#__PURE__*/_jsxDEV(FiltersComponent, {\n      temperatureUnits: this.state.temperature.units,\n      countries: this.state.countries,\n      descriptions: this.state.descriptions,\n      onChangeMethod: this.onChangeFilter\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }, this);\n\n    const pagination = /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: this.state.currentPage,\n      showPages: this.state.showPages,\n      itemsPerPage: this.state.itemsPerPage,\n      totalItems: this.state.weathers.length,\n      paginate: this.paginate\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 28\n    }, this);\n\n    const temperatureDropdown = this.state.temperatureDropdownList;\n    let container = [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changeLanguage(\"en\", i18n),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changeLanguage(\"sk\", i18n),\n        children: \"SK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changeLanguage(\"de\", i18n),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }, this), temperatureDropdown, filters, pagination];\n    if (this.state.weathers) container.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"weatherTable\",\n      children: [this.header(i18n), this.mainBody(currentWeathers, this.state.temperature)]\n    }, nanoid(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 28\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withTranslation()(WeatherCurrent);","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/WeatherCurrent.js"],"names":["React","Component","WeatherCurrentService","Pagination","FiltersComponent","Link","getWeatherDescription","convertTemperature","temperatureDropdownList","nanoid","withTranslation","i18n","WeatherCurrent","constructor","props","addFilterOperatorToExistingFilterName","event","filterName","filterOperator","arr","state","filters","forEach","item","index","hasOwnProperty","onChangeFilter","keyExistsInArr","console","log","findIndexInFilters","setState","currentPage","isFilter","isAdditionalFilter","changeFilters","refreshWeathers","sortBy","weathers","concat","isAdditionalFilterCheck","createForecast","paginate","page","getWeathersOnSpecificPage","indexOfLastPost","itemsPerPage","indexOfFirstPost","slice","changeLanguage","language","t","isAscending","loading","pageNumbers","countries","descriptions","showPages","filterComponent","header","temperature","units","abbreviation","componentDidMount","retrieveAllCountries","retrieveAllDescriptions","data","retrieveAllWeathers","then","response","key","exists","JSON","stringify","Array","isArray","some","includes","indexOfKey","Object","keys","length","splice","isNotAdditionalFilterWithContains","isSameFilterChanged","mainBody","currentPosts","map","weather","_id","pathname","coord","lat","lon","name","sys","country","weatherMain","humidity","feels_like","toFixed","temp","temp_max","temp_min","render","currentWeathers","pagination","temperatureDropdown","container","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport WeatherCurrentService from '../../adapters/WeatherCurrentService';\nimport Pagination from '../current/Pagination'\nimport FiltersComponent from './Filters'\nimport { Link } from \"react-router-dom\";\nimport {getWeatherDescription, convertTemperature} from '../../businessLogic/WeatherBusinessLogic';\nimport {temperatureDropdownList} from '../../buildingBlocks/commonBuildingBlocks'\nimport '../../styles/common/Header.scss';\nimport '../../styles/current/Filters.scss'\nimport { nanoid } from \"nanoid\";\nimport { withTranslation } from 'react-i18next';\nimport i18n from 'i18next'\nimport '../../i18n'\nclass WeatherCurrent extends Component {\n    constructor(props) {\n        super(props)\n        console.log(\"props.t: \"+props.t)\n        this.state = {\n            weathers: [],\n            isAscending: true,\n            filters: [],\n            isFilter : false,\n            currentPage : 1,\n            itemsPerPage : 1000,\n            loading : false,\n            isAdditionalFilter : false,\n            pageNumbers : [],\n            countries : [],\n            descriptions: [],\n            showPages: 5,\n            filterComponent: null,\n            header: null,\n            i18n  : props.i18n,\n            t : props.t,\n            temperatureDropdownList: null,\n            temperature: {units: 'celsius', abbreviation: 'Â°C'},            \n        }\n    }\n\n    //I added temperatureDropdownList, filterscomponent and header here because I do not want to rerender them\n    //on every update. I cant use shouldComponentUpdate because they either are not components or are functional\n    //meaning they are stateless\n    async componentDidMount() {\n        console.log(\"som v componentDidMOunt weather list\")\n        const countries = await WeatherCurrentService.retrieveAllCountries()\n        const descriptions = await WeatherCurrentService.retrieveAllDescriptions()\n        this.setState({countries : countries.data, descriptions : descriptions.data, \n            temperatureDropdownList:temperatureDropdownList( (units, abbreviation ) => {\n                this.setState({\"temperature\": {\"units\" : units, \"abbreviation\" : abbreviation}})\n            }),\n            header: this.header()},\n            function() {this.refreshWeathers()}\n        )\n        \n    }\n\n    refreshWeathers(sortBy, weathers) {\n\n        WeatherCurrentService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, this.state.isAdditionalFilter, weathers)\n            .then(\n                response => {\n                    this.setState({ weathers: response.data })\n                }\n            ).then( () => {if (sortBy) this.setState({isAscending : !this.state.isAscending})}\n            ).then( () => {if (typeof this.state.filters !== 'undefined' && this.state.filters === 0) this.setState({isFilter : false})})\n    }\n\n    keyExistsInArr(arr, key){\n        let exists = false\n        console.log(\"arr inside keyExists: \" + JSON.stringify(arr))\n        if (!Array.isArray(key)){\n            arr?.some(item => {\n                if(item.hasOwnProperty([key])) {\n                    exists = true;\n                    return true\n                }\n                else return false\n            })\n        }\n        //since countries and descriptions is a multicheckbox, they are arrays and it has multiple keys and must check not with equals\n        else{\n            arr?.some(item => {\n                if(item.includes([key])) {\n                    exists = true;\n                    return true\n                }\n                else return false\n            })\n        }\n        return exists\n    }\n\n    findIndexInFilters(arr, key){\n        let indexOfKey = 0\n        arr?.some((filterName, index, filters) => {\n            if(filterName.hasOwnProperty([key])){ \n                indexOfKey = index\n                return indexOfKey\n            }\n            else return false\n        })\n        return indexOfKey\n    }\n\n    changeFilters(index, filterName, filterOperator) {\n        let arr = this.state.filters\n        console.log(\"arr inside changefilters: \" + JSON.stringify(arr))\n\n        if (arr[index][filterName][filterOperator])\n            delete arr[index][filterName][filterOperator]  \n        if (Object.keys(arr[index][filterName]).length === 0)\n            arr.splice(index, 1)\n        return arr\n    }\n\n    addFilterOperatorToExistingFilterName = (event, filterName, filterOperator) => {\n        const arr = this.state.filters\n        arr.forEach((item, index, filters) => {\n            if (item.hasOwnProperty([filterName])){\n                filters[index][filterName][filterOperator] = event\n            }\n        })\n        return arr\n    }\n\n    onChangeFilter = (event, filterName, filterOperator) => {\n        // console.log(\"event: \" + JSON.stringify(event))\n        // console.log(\"filters: \" + JSON.stringify(this.state.filters))\n        var index;\n\n        if (event === \"\" && this.keyExistsInArr(this.state.filters,filterName))  {\n            console.log(\"inside 1\")\n\n            index = this.findIndexInFilters(this.state.filters, filterName)\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : false, filters : this.changeFilters(index, filterName, filterOperator)}, function () {\n                this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n        }\n\n        else if (event !== \"\" && !(this.keyExistsInArr(this.state.filters, filterName))){\n            console.log(\"inside 2\")\n\n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : true,\n                 filters: this.state.filters.concat([{[filterName]: {[filterOperator] : event}}])}, function () {\n                // console.log(\"filters inside: \" + this.state.filters)\n                this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n\n        }\n\n        else if (event !== \"\" && (this.keyExistsInArr(this.state.filters, filterName))){\n           \n            console.log(\"inside 3\")\n            index = this.findIndexInFilters(this.state.filters, filterName)\n\n            \n            this.setState({currentPage : 1, isFilter : true, isAdditionalFilter : this.isAdditionalFilterCheck(event, index, filterName, filterOperator), \n                filters : this.addFilterOperatorToExistingFilterName(event, filterName, filterOperator)}, function() {\n                    this.refreshWeathers(this.state.sortBy, this.state.weathers)\n            })\n           \n        }\n        else {\n            console.log(\"inside 4\")\n\n        }\n    }\n\n    isAdditionalFilterCheck(event, index, filterName, filterOperator){\n        if (this.isNotAdditionalFilterWithContains(event) === false)\n            return false\n        console.log(\"this.state.filters[index][filterName][filterOperator]: \" + this.state.filters[index][filterName][filterOperator])\n        if (this.isSameFilterChanged(event, index, filterName, filterOperator) === false)\n            return false\n        return true\n                \n    }   \n\n    //if there are multiple countries and descriptions, backend must make a new query\n    //since no additional filter is added, only value. I am unable to send query request\n    //with an array element\n    isNotAdditionalFilterWithContains(event){\n       return event.includes(\",\") ? false : true\n    }\n    \n    // this check is here for times when I change the same filter multiple\n    // times in a row and the filter is same. If it is the same I cant filter\n    // from memory because I could not load some weathers\n    isSameFilterChanged(event, index, filterName, filterOperator){\n        console.log(\"event: \" + event)\n        console.log(\"this.state.filters[index][filterName][filterOperator]: \" + this.state.filters[index][filterName][filterOperator])\n       return filterName === this.state.filters[index][filterName]\n    }\n    header(i18n){\n        console.log(\"i18n v header: \" + i18n)\n       return (<thead className=\"header\">\n       <tr>\n           <th onClick={() =>this.refreshWeathers(\"_id\", this.state.weathers) }>{\"cityId\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"name\", this.state.weathers) }>{ i18n !== 'undefined' ? i18n.t('header.cityName') : 'cityName'}</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lat\", this.state.weathers) }>{\"latitude\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lon\", this.state.weathers) }>{\"longitude\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"sys.country\", this.state.weathers) }>{\"country\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers) }>{\"humidity\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers) }>{\"feels like\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp\", this.state.weathers) }>{\"temperature\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers) }>{\"maximum temperature\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers) }>{\"minimal temperature\"}</th>\n           <th onClick={() =>this.refreshWeathers(\"weather.description\", this.state.weathers) }>{\"description\"}</th>                                \n       </tr>\n   </thead>)\n   }\n\ncreateForecast = ()=>{\n    console.log(\"dfs\")\n    return (\n        <Link  to= '/forecast'></Link>\n    );\n}\n\n   mainBody(currentPosts, temperature){\n    return (\n\n    <tbody>\n        {\n            currentPosts.map(\n                weather =>{\n                    return (<tr key={nanoid()}>\n                        <td>{weather._id}</td>\n                        <td> <Link to={{pathname: \"/forecast\", state: {\"lat\": weather.coord.lat, \"lon\": weather.coord.lon} }}>{weather.name}</Link></td>\n                        <td>{weather.coord.lat}</td>\n                        <td>{weather.coord.lon}</td>\n                        <td>{weather.sys.country}</td>\n                        <td>{weather.weatherMain.humidity}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.feels_like).toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp).toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp_max).toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{`${convertTemperature(temperature.units, weather.weatherMain.temp_min).toFixed(2)}${temperature.abbreviation}`}</td>\n                        <td>{getWeatherDescription(weather)}</td>\n                    </tr>)}\n            )\n        }\n        </tbody>\n    )\n   }\n\n    paginate = (page) => {\n        // if(currentPage !== 0 && currentPage <= lastPage)\n       this.setState({currentPage : page}, function(){\n           console.log(\"currPage: \" + this.state.currentPage)\n       })\n\n    }\n\n    getWeathersOnSpecificPage = () => {\n        console.log('after pagination creation')\n        const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n        const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n        return this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n    }\n    changeLanguage = (language, i18n) => {\n        i18n.changeLanguage(language);\n    };\n    render() {\n        console.log(\"som v render weather list\")\n\n        const currentWeathers = this.getWeathersOnSpecificPage()\n        const filters = <FiltersComponent key={nanoid()} temperatureUnits = {this.state.temperature.units} countries = {this.state.countries}\n        descriptions = {this.state.descriptions} onChangeMethod={this.onChangeFilter} />\n\n        const pagination = <Pagination key={nanoid()} currentPage={this.state.currentPage} showPages={this.state.showPages}\n        itemsPerPage = {this.state.itemsPerPage} totalItems = {this.state.weathers.length} paginate={this.paginate}/>\n\n        const temperatureDropdown = this.state.temperatureDropdownList\n\n        let container= [<div>                               \n        <button onClick={() => this.changeLanguage(\"en\", i18n)}>EN</button>\n        <button onClick={() => this.changeLanguage(\"sk\", i18n)}>SK</button>   \n        <button onClick={() => this.changeLanguage(\"de\", i18n)}>DE</button>   </div>,\n        temperatureDropdown, filters, pagination]\n\n        if (this.state.weathers)\n            container.push(<table key={nanoid()} className=\"weatherTable\">\n                {this.header(i18n)}\n                {this.mainBody(currentWeathers, this.state.temperature)}\n            </table>\n            )\n\n        return (\n            <div className=\"container\">\n\n                {container}\n            </div>\n        )\n         \n    }\n}\nexport default withTranslation()(WeatherCurrent)\n"]},"metadata":{},"sourceType":"module"}