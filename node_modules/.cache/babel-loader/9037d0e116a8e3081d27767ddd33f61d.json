{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState([]);\n  useEffect(async () => {\n    console.log(\"som v useEffect forecast component\");\n    console.log(\"func: \");\n    await getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).then(response => {\n      setDailyWeatherForecast(response.data);\n    });\n  }, [dailyWeatherForecast]);\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return [setDailyWeatherForecast];\n}\n\n_s(WeatherForecastComponent, \"5GVhPiYLoJrQAx5GZZtmOhZ9ncU=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n  console.log(\"som v metode getDailyWeatherForecast\");\n  const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\");\n  console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc));\n  return dailyWeatherForecastFunc;\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","getDailyWeatherForecast","lat","lon","then","response","data","dailyWeatherForecastFunc","getDailyForecastByCityName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEA,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,YAAW;AACjBI,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAOQ,uBAAuB,CAACV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CAAvB,CAA4FC,IAA5F,CACHC,QAAQ,IAAI;AACRL,MAAAA,uBAAuB,CAACK,QAAQ,CAACC,IAAV,CAAvB;AACH,KAHE,CAAP;AAKH,GARQ,EAQN,CAACP,oBAAD,CARM,CAAT;AAUAP,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AAEA,SAAO,CAACC,uBAAD,CAAP;AACH;;GApBQV,wB;;KAAAA,wB;;AAsBT,MAAMW,uBAAuB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChDX,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,QAAMc,wBAAwB,GAAG,MAAMlB,sBAAsB,CAACmB,0BAAvB,CAAkDN,GAAlD,EAAuDC,GAAvD,EAA4D,yBAA5D,CAAvC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACC,SAAL,CAAeY,wBAAf,CAA3C;AACA,SAAOA,wBAAP;AACH,CALD;;AAMA,eAAejB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState([])\n    \n    useEffect(async () =>{\n        console.log(\"som v useEffect forecast component\")\n        console.log(\"func: \" )\n        await (getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).then(\n            response => {\n                setDailyWeatherForecast(response.data)\n            }\n        ));\n    }, [dailyWeatherForecast])\n\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n\n    return [setDailyWeatherForecast];\n}\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\")\n    console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc))\n    return dailyWeatherForecastFunc\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}