{"ast":null,"code":"import axios from 'axios';\nimport WeatherComponent from '../component/WeatherListComponent';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filterOperator, weathers) {\n    //console.log('executed service')\n    console.log(\"Sort: \" + sortBy);\n    console.log(\"filterOperator: \" + filterOperator);\n    console.log(\"weathers : \" + weathers);\n    console.log(\"weathers stringified : \" + JSON.stringify(weathers));\n    console.log(\"weathers stringified : \" + JSON.stringify(WeatherComponent.state));\n    const filters = JSON.stringify(WeatherComponent.state.filters);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filters,\n      filterOperator\n    };\n    console.log(\"params: \" + JSON.stringify(params));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","WeatherComponent","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filterOperator","weathers","console","log","JSON","stringify","state","filters","params","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,cAAtB,EAAsCC,QAAtC,EAAgD;AAC/D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUL,MAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,cAAjC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAiBF,QAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BC,IAAI,CAACC,SAAL,CAAeZ,gBAAgB,CAACa,KAAhC,CAAxC;AAEE,UAAOC,OAAO,GAAGH,IAAI,CAACC,SAAL,CAAeZ,gBAAgB,CAACa,KAAjB,CAAuBC,OAAtC,CAAjB;AACF,QAAG,CAACN,QAAJ,EACIA,QAAQ,GAAG,EAAX;AAEJ,UAAMO,MAAM,GAAG;AACXV,MAAAA,MADW;AACHC,MAAAA,WADG;AACUQ,MAAAA,OADV;AACmBP,MAAAA;AADnB,KAAf;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeG,MAAf,CAAzB;AACA,WAAOhB,KAAK,CAACiB,IAAN,CAAY,GAAEd,eAAgB,kBAA9B,EAAiDM,QAAjD,EAA0D;AAACO,MAAAA;AAAD,KAA1D,CAAP;AACH;;AApBgB;;AAsBrB,eAAe,IAAIZ,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport WeatherComponent from '../component/WeatherListComponent'\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filterOperator, weathers) {\n        //console.log('executed service')\n        console.log(\"Sort: \" +sortBy)\n        console.log(\"filterOperator: \" + filterOperator)\n        console.log(\"weathers : \" + (weathers))\n        console.log(\"weathers stringified : \" + JSON.stringify(weathers))\n        console.log(\"weathers stringified : \" + JSON.stringify(WeatherComponent.state))\n\n          const  filters = JSON.stringify(WeatherComponent.state.filters)\n        if(!weathers)\n            weathers = []\n            \n        const params = {\n            sortBy, isAscending, filters, filterOperator\n        }\n\n        console.log(\"params: \" + JSON.stringify(params) )\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}