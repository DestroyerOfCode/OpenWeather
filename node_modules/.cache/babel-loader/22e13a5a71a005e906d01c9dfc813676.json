{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport { convertTemperature } from '../../businessLogic/WeatherBusinessLogic';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"name\", \"eq\"),\n      placeholder: i18n.t(\"current.filters.cityName\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.latitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) {\n          buildFilter(event.target.value, \"coord.lat\", \"gte\");\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.latitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.longitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.longitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.humidityFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.humidityTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.feelTemperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.feelTemperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMaxFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMaxTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMinFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMinTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions),\n      placeholder: i18n.t(\"current.filters.pickDescriptions\"),\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedCountries(props.filters, \"sys.country\", \"in\"),\n      placeholder: i18n.t(\"current.filters.pickCountries\"),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst getPlaceholder = (filter, translationKey, filterKey, filterOperator) => {\n  // console.log(\"filterStringify: \" + JSON.stringify(filter))\n  // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n  let ret = \"\"; // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n\n  ret = i18n.t(`current.filters.${translationKey}`);\n  filter.some(item => {\n    // console.log( filterKey in item)\n    if (filterKey in item && filterOperator in item[filterKey]) {\n      // setFunc(props.filters[filterKey][filterOperator])\n      ret += \" \" + item[filterKey][filterOperator];\n      return true;\n    } else return false;\n  });\n  return ret;\n};\n\nconst getSelectedDescriptions = (filters, filterKey, filterOperator, descriptions) => {\n  let retArr = [];\n  filters.some(item => {\n    if (filterKey in item && filterOperator in item[filterKey]) {\n      item[filterKey][filterOperator].split(\",\").forEach(description => {\n        let originalValue = \"\";\n        descriptions.some(item => {\n          if (description === item.originalValue) {\n            originalValue = item.originalValue;\n            return true;\n          }\n\n          return false;\n        });\n        retArr.push({\n          \"name\": i18n.t(`common.description.${description}`),\n          \"originalValue\": originalValue\n        });\n      });\n      return true;\n    }\n\n    return false;\n  });\n  return retArr;\n};\n\nconst getSelectedCountries = (filters, filterKey, filterOperator) => {\n  let retArr = [];\n  filters.some(item => {\n    if (filterKey in item && filterOperator in item[filterKey]) {\n      item[filterKey][filterOperator].split(\",\").forEach(country => {\n        retArr.push({\n          \"name\": country\n        });\n      });\n      return true;\n    }\n\n    return false;\n  });\n  return retArr;\n};\n\nconst getOriginalValue = (filter, temperature, filterKey, filterOperator) => {\n  let ret = \"\";\n  const temperatureKeys = [\"weatherMain.humidity\", \"weatherMain.humidity\", \"weatherMain.feels_like\", \"weatherMain.temp\", \"weatherMain.temp_max\", \"weatherMain.temp_min\"]; // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n\n  filter.some(item => {\n    // console.log( filterKey in item)\n    if (filterKey in item && filterOperator in item[filterKey]) {\n      if (temperatureKeys.includes(Object.keys(item)[0])) ret = Number(convertTemperature(temperature.units, item[filterKey][filterOperator])).toFixed(2);else ret = item[filterKey][filterOperator];\n      return true;\n    } else return false;\n  });\n  if (ret !== \"\") return ret;\n  return;\n}; // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item) || item.includes('-');\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromDescriptions = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nconst makeStringFromCountries = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","convertTemperature","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","getOriginalValue","filters","temperature","t","event","target","value","isNumber","calculateKelvins","temperatureUnits","getSelectedDescriptions","descriptions","makeStringFromDescriptions","getSelectedCountries","countries","makeStringFromCountries","getPlaceholder","filter","translationKey","ret","some","item","retArr","split","forEach","description","originalValue","push","country","temperatureKeys","includes","Object","keys","Number","units","toFixed","temperatureValue","parseFloat","toString","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","reduce","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport {convertTemperature} from '../../businessLogic/WeatherBusinessLogic'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n        return (\n        <form className=\"currentFiltersWrappes\">\n                <label>Name</label>\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"name\", \"eq\")} placeholder= {i18n.t(\"current.filters.cityName\") } onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n                <label>Name</label>\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"gte\")} placeholder= {i18n.t(\"current.filters.latitudeFrom\")} onChange= {event =>{if (isNumber(event.target.value)) {buildFilter(event.target.value, \"coord.lat\", \"gte\")}}}></input>}\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"lte\")} placeholder= {i18n.t(\"current.filters.latitudeTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                <label>Name</label>\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"gte\")} placeholder= {i18n.t(\"current.filters.longitudeFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"lte\")} placeholder= {i18n.t(\"current.filters.longitudeTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                <label>Name</label>\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"gte\")} placeholder= {i18n.t(\"current.filters.humidityFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"lte\")} placeholder= {i18n.t(\"current.filters.humidityTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"gte\")} placeholder= {i18n.t(\"current.filters.feelTemperatureFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"lte\")} placeholder= {i18n.t(\"current.filters.feelTemperatureTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureMaxFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureMaxTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureMinFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n            {<input defaultValue={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureMinTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n            <br></br>\n            {<Multiselect selectedValues={getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions)} placeholder={i18n.t(\"current.filters.pickDescriptions\")} options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}\n            onRemove={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}/>}\n                {<Multiselect selectedValues={getSelectedCountries(props.filters, \"sys.country\", \"in\")} placeholder={i18n.t(\"current.filters.pickCountries\")} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}\n            onRemove={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\nconst getPlaceholder = (filter, translationKey, filterKey, filterOperator) => {\n    // console.log(\"filterStringify: \" + JSON.stringify(filter))\n    // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n    let ret = \"\"\n    // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n        ret = i18n.t(`current.filters.${translationKey}`);\n    filter.some((item) => {\n        // console.log( filterKey in item)\n        if ( filterKey in item && filterOperator in item[filterKey]) {\n            // setFunc(props.filters[filterKey][filterOperator])\n            ret += \" \" + item[filterKey][filterOperator];\n            return true;\n        }\n        else return false\n    })\n    return ret;\n}\nconst getSelectedDescriptions= (filters, filterKey, filterOperator, descriptions) =>{\n    let retArr= []\n    filters.some((item) => {\n        if (filterKey in item && filterOperator in item[filterKey]){\n            item[filterKey][filterOperator].split(\",\").forEach((description) => {\n                let originalValue = \"\"\n                descriptions.some((item) => {\n                    if(description === item.originalValue){\n                        originalValue = item.originalValue\n                        return true;\n                    } return false\n                })\n                retArr.push({\"name\": i18n.t(`common.description.${description}`), \"originalValue\": originalValue})\n            })\n            return true;\n        }\n        return false;\n    })\n    return retArr\n}\nconst getSelectedCountries= (filters, filterKey, filterOperator) =>{\n    let retArr = []\n    filters.some((item) =>{\n        if (filterKey in item && filterOperator in item[filterKey]){\n            item[filterKey][filterOperator].split(\",\").forEach((country) => {\n                retArr.push({\"name\": country})\n            })\n            return true;\n        }\n        return false;\n    })\n    return retArr\n}\nconst getOriginalValue =    (filter, temperature, filterKey, filterOperator) => {\n    let ret = \"\"\n    const temperatureKeys= [\"weatherMain.humidity\",\n    \"weatherMain.humidity\",\n    \"weatherMain.feels_like\",\n    \"weatherMain.temp\",\n    \"weatherMain.temp_max\",\n    \"weatherMain.temp_min\"]\n    // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n    filter.some((item) => {\n        // console.log( filterKey in item)\n        if ( filterKey in item && filterOperator in item[filterKey]) {\n            if (temperatureKeys.includes(Object.keys(item)[0]))\n                ret = Number(convertTemperature(temperature.units, item[filterKey][filterOperator])).toFixed(2)\n            else ret = item[filterKey][filterOperator]\n            return true;\n        }\n        else return false\n    })\n    if(ret !== \"\")\n        return ret;\n    return;\n}\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item) || item.includes('-')\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromDescriptions= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nconst makeStringFromCountries= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}