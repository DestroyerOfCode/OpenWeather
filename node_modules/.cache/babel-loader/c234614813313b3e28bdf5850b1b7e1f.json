{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\nimport WeatherBusinessLogic from '../businessLogic/WeatherBusinessLogic';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  useEffect(() => {\n    console.log(\"som v useEffect forecast component\");\n    console.log(\"func: \");\n    WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat, props.history.location.state.lon, \"Current,Hourly,Minutely\").then(response => setDailyWeatherForecast(response.data)); //    console.log(\"res: \" + JSON.stringify(res))\n    //    setDailyWeatherForecast(res);\n  }, [props.history.location.state.lat, props.history.location.state.lon]); // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [createHeader.call(), createMainBody(dailyWeatherForecast)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"bJ5teWGutBLkVhno6XsU0CImiiw=\");\n\n_c = WeatherForecastComponent;\n\nconst createMainBody = dailyWeatherForecast => {\n  var _dailyWeatherForecast;\n\n  return dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.daily) === null || _dailyWeatherForecast === void 0 ? void 0 : _dailyWeatherForecast.map(dailyWeather => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.dt * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunrise * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayDateTime(new Date(dailyWeather.sunset * 1000))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.min\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.max\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.night\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.eve\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.temp.morn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.feels_like.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.feels_like.night\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.feels_like.eve\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.feels_like.morn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.dew_point\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.wind_deg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.weather[0].id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: WeatherBusinessLogic.getWeatherDescription(dailyWeather.weather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.clouds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.pop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.uvi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.rain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: dailyWeather.snow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, dailyWeather.dt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  });\n};\n\nconst displayDateTime = dateTime => {\n  return dateTime.toLocaleString(\"sk-SK\");\n};\n\nconst createHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"dt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"sunrise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"sunset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"temp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"max\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"night\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"evening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"morning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"feels like day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"feels like night\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"feels like evening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"feels like morning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"dew point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"wind speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"wind deg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"clouds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"pop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"uvi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"rain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"snow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherBusinessLogic","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","getDailyForecastByCityName","lat","lon","then","response","data","createHeader","call","createMainBody","daily","map","dailyWeather","displayDateTime","Date","dt","sunrise","sunset","temp","day","min","max","night","eve","morn","feels_like","dew_point","wind_speed","wind_deg","weather","icon","id","getWeatherDescription","main","clouds","pop","uvi","rain","snow","dateTime","toLocaleString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;;AAEC,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAEPK,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAL,IAAAA,sBAAsB,CAACa,0BAAvB,CAAkDV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA/E,EAAmFX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhH,EAAqH,yBAArH,EACAC,IADA,CACMC,QAAQ,IAAIL,uBAAuB,CAACK,QAAQ,CAACC,IAAV,CADzC,EAJQ,CAMX;AACA;AACE,GARG,EAQD,CAACf,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CARC,CAAT,CAPqC,CAiBrC;;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AACA,sBACA;AAAA,2BAEI;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,mBACKQ,YAAY,CAACC,IAAb,EADL,EAEKC,cAAc,CAACV,oBAAD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAUH;;GA7BST,wB;;KAAAA,wB;;AA+BV,MAAMmB,cAAc,GAAIV,oBAAD,IAA0B;AAAA;;AAC7C,SACIA,oBADJ,aACIA,oBADJ,gDACIA,oBAAoB,CAAEW,KAD1B,0DACI,sBAA6BC,GAA7B,CAAiCC,YAAY,IAAG;AAC5C,wBACI;AAAA,8BACI;AAAA,kBAAKC,eAAe,CAAC,IAAIC,IAAJ,CAASF,YAAY,CAACG,EAAb,GAAkB,IAA3B,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF,eAAe,CAAC,IAAIC,IAAJ,CAASF,YAAY,CAACI,OAAb,GAAuB,IAAhC,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKH,eAAe,CAAC,IAAIC,IAAJ,CAASF,YAAY,CAACK,MAAb,GAAsB,IAA/B,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAKL,YAAY,CAACM,IAAb,CAAkBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAKP,YAAY,CAACM,IAAb,CAAkBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAKR,YAAY,CAACM,IAAb,CAAkBG;AAAvB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAKT,YAAY,CAACM,IAAb,CAAkBI;AAAvB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAKV,YAAY,CAACM,IAAb,CAAkBK;AAAvB;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,kBAAKX,YAAY,CAACM,IAAb,CAAkBM;AAAvB;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA,kBAAKZ,YAAY,CAACa,UAAb,CAAwBN;AAA7B;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA,kBAAKP,YAAY,CAACa,UAAb,CAAwBH;AAA7B;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA,kBAAKV,YAAY,CAACa,UAAb,CAAwBF;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA,kBAAKX,YAAY,CAACa,UAAb,CAAwBD;AAA7B;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA,kBAAKZ,YAAY,CAACc;AAAlB;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAA,kBAAKd,YAAY,CAACe;AAAlB;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAA,kBAAKf,YAAY,CAACgB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAA,kBAAKhB,YAAY,CAACiB,OAAb,CAAqB,CAArB,EAAwBC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAA,kBAAKlB,YAAY,CAACiB,OAAb,CAAqB,CAArB,EAAwBE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AAAA,kBAAK1C,oBAAoB,CAAC2C,qBAArB,CAA2CpB,YAAY,CAACiB,OAAxD;AAAL;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAA,kBAAKjB,YAAY,CAACiB,OAAb,CAAqB,CAArB,EAAwBI;AAA7B;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AAAA,kBAAKrB,YAAY,CAACsB;AAAlB;AAAA;AAAA;AAAA;AAAA,cArBJ,eAsBI;AAAA,kBAAKtB,YAAY,CAACuB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AAAA,kBAAKvB,YAAY,CAACwB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAwBI;AAAA,kBAAKxB,YAAY,CAACyB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAyBI;AAAA,kBAAKzB,YAAY,CAAC0B;AAAlB;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA,OAAW1B,YAAY,CAACG,EAAxB;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH,GA7BD,CADJ;AAgCH,CAjCD;;AAmCA,MAAMF,eAAe,GAAI0B,QAAD,IAAc;AAClC,SAAOA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAP;AACH,CAFD;;AAIA,MAAMjC,YAAY,GAAG,MAAM;AACvB,sBACA;AAAA,2BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AA8BH,CA/BD;;AAgCA,eAAejB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\nimport WeatherBusinessLogic from '../businessLogic/WeatherBusinessLogic';\n\n function WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({} )\n    \n    useEffect(() =>{\n       \n            console.log(\"som v useEffect forecast component\")\n           console.log(\"func: \" )\n           WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon, \"Current,Hourly,Minutely\").\n           then( response => setDailyWeatherForecast(response.data)) \n        //    console.log(\"res: \" + JSON.stringify(res))\n        //    setDailyWeatherForecast(res);\n         }, [props.history.location.state.lat, props.history.location.state.lon])\n\n    // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n    return (\n    <div>\n\n        <tbody>\n            <table className=\"table\">\n                {createHeader.call()}\n                {createMainBody(dailyWeatherForecast)}\n            </table>\n        </tbody>\n    </div>)\n}\n\nconst createMainBody = (dailyWeatherForecast) => {\n    return (\n        dailyWeatherForecast?.daily?.map(dailyWeather =>{\n            return( \n                <tr key ={ dailyWeather.dt}>\n                    <td>{displayDateTime(new Date(dailyWeather.dt * 1000))}</td>\n                    <td>{displayDateTime(new Date(dailyWeather.sunrise * 1000))}</td>\n                    <td>{displayDateTime(new Date(dailyWeather.sunset * 1000))}</td>\n                    <td>{dailyWeather.temp.day}</td>\n                    <td>{dailyWeather.temp.min}</td>\n                    <td>{dailyWeather.temp.max}</td>\n                    <td>{dailyWeather.temp.night}</td>\n                    <td>{dailyWeather.temp.eve}</td>\n                    <td>{dailyWeather.temp.morn}</td>\n                    <td>{dailyWeather.feels_like.day}</td>\n                    <td>{dailyWeather.feels_like.night}</td>\n                    <td>{dailyWeather.feels_like.eve}</td>\n                    <td>{dailyWeather.feels_like.morn}</td>\n                    <td>{dailyWeather.dew_point}</td>\n                    <td>{dailyWeather.wind_speed}</td>\n                    <td>{dailyWeather.wind_deg}</td>\n                    <td>{dailyWeather.weather[0].icon}</td>\n                    <td>{dailyWeather.weather[0].id}</td>\n                    <td>{WeatherBusinessLogic.getWeatherDescription(dailyWeather.weather)}</td>\n                    <td>{dailyWeather.weather[0].main}</td>\n                    <td>{dailyWeather.clouds}</td>\n                    <td>{dailyWeather.pop}</td>\n                    <td>{dailyWeather.uvi}</td>\n                    <td>{dailyWeather.rain}</td>\n                    <td>{dailyWeather.snow}</td>\n                </tr>)\n        })\n    )\n}\n\nconst displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nconst createHeader = () => {\n    return ( \n    <thead>\n        <tr>\n            <th>dt</th>\n            <th>sunrise</th>\n            <th>sunset</th>\n            <th>temp</th>\n            <th>min</th>\n            <th>max</th>\n            <th>night</th>\n            <th>evening</th>\n            <th>morning</th>\n            <th>feels like day</th>\n            <th>feels like night</th>\n            <th>feels like evening</th>\n            <th>feels like morning</th>\n            <th>dew point</th>\n            <th>wind speed</th>\n            <th>wind deg</th>\n            <th>icon</th>\n            <th>id</th>\n            <th>description</th>\n            <th>main</th>\n            <th>clouds</th>\n            <th>pop</th>\n            <th>uvi</th>\n            <th>rain</th>\n            <th>snow</th>\n        </tr>\n    </thead>)\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}