{"ast":null,"code":"import i18n from 'i18next';\nexport const getWeatherDescription = weather => {\n  var weatherItemReduce = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n  };\n\n  console.log(\"language: \" + i18n.language);\n  weather.weather.forEach(element => {\n    console.log(\"dsec: \" + \"common.description.\" + i18n.t(element.description));\n    console.log(\"element.description: \" + element.description);\n  });\n  const arr = weather.weather.map(item => ({\n    \"description\": \"common.description.\" + i18n.t(item.description)\n  }));\n  arr.forEach(item => {\n    console.log(\"item: \" + JSON.stringify(item));\n  });\n  return arr.reduce(weatherItemReduce, '');\n};\nexport const displayDateTime = dateTime => {\n  return dateTime.toLocaleString(\"sk-SK\");\n};\nexport const convertTemperature = (convertTo, temp) => {\n  // console.log(\"convertTo: \" + convertTo)\n  if (convertTo === \"celsius\") return temp - 273.15;else if (convertTo === \"fahrenheit\") return (temp - 273.15) * 1.8 + 32;else return temp;\n};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/businessLogic/WeatherBusinessLogic.js"],"names":["i18n","getWeatherDescription","weather","weatherItemReduce","prevVal","currVal","idx","description","console","log","language","forEach","element","t","arr","map","item","JSON","stringify","reduce","displayDateTime","dateTime","toLocaleString","convertTemperature","convertTo","temp"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAO,MAAMC,qBAAqB,GAAIC,OAAD,IAAa;AAC9C,MAAIC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,KAA2B;AAC/C,WAAOA,GAAG,KAAK,CAAR,GAAYD,OAAO,CAACE,WAApB,GAAkCH,OAAO,GAAG,IAAV,GAAiBC,OAAO,CAACE,WAAlE;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeT,IAAI,CAACU,QAAhC;AACAR,EAAAA,OAAO,CAACA,OAAR,CAAgBS,OAAhB,CAAwBC,OAAO,IAAI;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,qBAAX,GAAmCT,IAAI,CAACa,CAAL,CAAOD,OAAO,CAACL,WAAf,CAA/C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BG,OAAO,CAACL,WAA9C;AACH,GAHD;AAIA,QAAMO,GAAG,GAAEZ,OAAO,CAACA,OAAR,CAAgBa,GAAhB,CAAqBC,IAAD,KAAW;AAAC,mBAAgB,wBAAwBhB,IAAI,CAACa,CAAL,CAAOG,IAAI,CAACT,WAAZ;AAAzC,GAAX,CAApB,CAAX;AACAO,EAAAA,GAAG,CAACH,OAAJ,CAAaK,IAAD,IAAU;AAACR,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWQ,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAvB;AAA6C,GAApE;AACA,SAAOF,GAAG,CAACK,MAAJ,CAAWhB,iBAAX,EAA8B,EAA9B,CAAP;AACH,CAZM;AAcP,OAAO,MAAMiB,eAAe,GAAIC,QAAD,IAAc;AACzC,SAAOA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACnD;AACA,MAAID,SAAS,KAAK,SAAlB,EACI,OAAOC,IAAI,GAAG,MAAd,CADJ,KAEK,IAAID,SAAS,KAAK,YAAlB,EACD,OAAO,CAACC,IAAI,GAAE,MAAP,IAAiB,GAAjB,GAAuB,EAA9B,CADC,KAEA,OAAOA,IAAP;AACR,CAPM","sourcesContent":["import i18n from 'i18next'\nexport const getWeatherDescription = (weather) => {\n    var weatherItemReduce = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.description : prevVal + \", \" + currVal.description;\n    }\n    console.log(\"language: \" + i18n.language)\n    weather.weather.forEach(element => {\n        console.log(\"dsec: \" + \"common.description.\" + i18n.t(element.description))\n        console.log(\"element.description: \" + element.description)\n    });\n    const arr= weather.weather.map((item) => ({\"description\" : \"common.description.\" + i18n.t(item.description)}))\n    arr.forEach((item) => {console.log(\"item: \" + JSON.stringify(item))})\n    return arr.reduce(weatherItemReduce, '')\n}\n\nexport const displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nexport const convertTemperature = (convertTo, temp) => {\n    // console.log(\"convertTo: \" + convertTo)\n    if (convertTo === \"celsius\")\n        return temp - 273.15\n    else if (convertTo === \"fahrenheit\")\n        return (temp -273.15) * 1.8 + 32\n    else return temp\n}"]},"metadata":{},"sourceType":"module"}