{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js\";\nimport React, { Component } from 'react';\nimport WeatherService from '../service/WeatherService';\nimport Pagination from './Pagination';\n\nclass WeatherListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.paginate = currentPage => {\n      this.setState({\n        currentPage: currentPage\n      });\n    };\n\n    this.state = {\n      weathers: [],\n      isAscending: true,\n      filters: [],\n      isFilter: false,\n      currentPage: 1,\n      itemsPerPage: 1000,\n      loading: false,\n      pageNumbers: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"som v componentDidMOunt\");\n    this.refreshWeathers();\n  }\n\n  refreshWeathers(sortBy, weathers) {\n    WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, weathers).then(response => {\n      this.setState({\n        weathers: response.data\n      });\n    }).then(() => {\n      if (sortBy) this.setState({\n        isAscending: !this.state.isAscending\n      });\n    }).then(() => {\n      if (typeof this.state.filters !== 'undefined' && this.state.pageNumbers.filters === 0) this.setState({\n        isFilter: false\n      });\n    });\n  }\n\n  keyExistsInArr(arr, key) {\n    arr === null || arr === void 0 ? void 0 : arr.some(item => {\n      if (item.hasOwnProperty([key])) return true;else return false;\n    });\n    return false;\n  }\n\n  findIndexInFilters(arr, key) {\n    var indexOfKey = 0;\n    arr === null || arr === void 0 ? void 0 : arr.some((filterName, index, filters) => {\n      if (filterName.hasOwnProperty([key])) {\n        indexOfKey = index;\n        return indexOfKey;\n      } else return false;\n    });\n    return indexOfKey;\n  }\n\n  onBlurEvent(event, filterName, filterOperator) {\n    if (event.target.value === \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      this.setState({\n        currentPage: 1\n      });\n      console.log(\"inside 1\");\n      this.setState({\n        isFilter: true\n      }); // this.state.currentPage = 0\n\n      console.log(\"isFilter: \" + this.state.isFilter);\n      var index = this.findIndexInFilters(this.state.filters, filterName);\n      if (this.state.filters[index][filterName][filterOperator]) delete this.state.filters[index][filterName][filterOperator];\n      console.log(\"filters is: \" + JSON.stringify(this.state.filters));\n      console.log(\"filters length: \" + this.state.filters.length);\n      if (Object.keys(this.state.filters[index][filterName]).length === 0) this.state.filters.splice(index, 1);\n      console.log(\"filters is: \" + JSON.stringify(this.state.filters));\n      console.log(\"filters length: \" + this.state.filters.length);\n      console.log(\"typeof this.state.filters !== 'undefined' && this.state.filters.length === 0\" + typeof this.state.filters !== 'undefined' && this.state.filters.length === 0);\n      if (typeof this.state.filters !== 'undefined' && this.state.filters.length === 0) this.setState({\n        isFilter: false\n      });\n      this.refreshWeathers(this.state.sortBy, this.state.weathers);\n    } else if (event.target.value !== \"\" && !this.keyExistsInArr(this.state.filters, filterName)) {\n      this.setState({\n        currentPage: 1\n      });\n      console.log(\"inside 2\");\n      this.setState({\n        isFilter: true\n      });\n      console.log(\"isFilter: \" + this.state.isFilter); // this.state.currentPage = 0\n\n      this.state.filters.push({\n        [filterName]: {\n          [filterOperator]: event.target.value\n        }\n      });\n      this.refreshWeathers(this.state.sortBy, this.state.weathers);\n    } else if (event.target.value !== \"\" && this.keyExistsInArr(this.state.filters, filterName)) {\n      this.setState({\n        currentPage: 1\n      });\n      console.log(\"inside 3\");\n      this.setState({\n        isFilter: true\n      }); // this.state.currentPage = 0\n\n      this.state.filters.forEach((item, index, filters) => {\n        if (item.hasOwnProperty([filterName])) {\n          filters[index][filterName][filterOperator] = event.target.value;\n        }\n      });\n      this.refreshWeathers(this.state.sortBy, this.state.weathers);\n    } else {\n      console.log(\"inside 4\");\n    }\n  }\n\n  filters() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Id\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"_id\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"City name\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"name\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Country\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"sys.country\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lat\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Latitude bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lat\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lon\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Longitude bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"coord.lon\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.humidity\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Humidity bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.humidity\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.feels_like\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Feel temperature bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.feels_like\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_max\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature max bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_max\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min smaller than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_min\", \"lte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Temperature min bigger than\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"weatherMain.temp_min\", \"gte\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        onBlur: event => {\n          this.onBlurEvent(event, \"description\", \"eq\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this);\n  }\n\n  header() {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"_id\", this.state.weathers),\n          children: \"cityId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"name\", this.state.weathers),\n          children: \"city Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lat\", this.state.weathers),\n          children: \"latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"coord.lon\", this.state.weathers),\n          children: \"longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"sys.country\", this.state.weathers),\n          children: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers),\n          children: \"humidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers),\n          children: \"feels like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp\", this.state.weathers),\n          children: \"temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers),\n          children: \"maximum temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers),\n          children: \"minimal temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => this.refreshWeathers(\"description\", this.state.weathers),\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }, this);\n  }\n\n  mainBody(currentPosts) {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: currentPosts.map(weather => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.coord.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.coord.lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.feels_like\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp_max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weatherMain.temp_min\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, weather._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    console.log(\"som v render\"); //to set page\n\n    const pagination = /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: this.state.itemsPerPage,\n      totalItems: this.state.weathers.length,\n      paginate: this.paginate.bind()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 28\n    }, this);\n\n    const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n    const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n    const currentWeathers = this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n    let container = [this.filters(), pagination];\n    if (this.state.weathers) container.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [this.header(), this.mainBody(currentWeathers)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 28\n    }, this));\n    console.log(\"items per page: \" + this.state.itemsPerPage);\n    console.log(\"currentPage: \" + this.state.currentPage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherListComponent;","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherListComponent.js"],"names":["React","Component","WeatherService","Pagination","WeatherListComponent","constructor","props","paginate","currentPage","setState","state","weathers","isAscending","filters","isFilter","itemsPerPage","loading","pageNumbers","componentDidMount","console","log","refreshWeathers","sortBy","retrieveAllWeathers","then","response","data","keyExistsInArr","arr","key","some","item","hasOwnProperty","findIndexInFilters","indexOfKey","filterName","index","onBlurEvent","event","filterOperator","target","value","JSON","stringify","length","Object","keys","splice","push","forEach","header","mainBody","currentPosts","map","weather","_id","name","coord","lat","lon","sys","country","weatherMain","humidity","feels_like","temp","temp_max","temp_min","description","render","pagination","bind","indexOfLastPost","indexOfFirstPost","currentWeathers","slice","container"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmLnBC,QAnLmB,GAmLPC,WAAD,IAAiB;AACzB,WAAKC,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAGA;AAAf,OAAd;AACF,KArLkB;;AAEf,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAE,IAFJ;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,QAAQ,EAAG,KAJF;AAKTN,MAAAA,WAAW,EAAG,CALL;AAMTO,MAAAA,YAAY,EAAG,IANN;AAOTC,MAAAA,OAAO,EAAG,KAPD;AAQTC,MAAAA,WAAW,EAAG;AARL,KAAb;AAUH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAKC,eAAL;AACH;;AAEDA,EAAAA,eAAe,CAACC,MAAD,EAASX,QAAT,EAAmB;AAC9BT,IAAAA,cAAc,CAACqB,mBAAf,CAAmCD,MAAnC,EAA2C,KAAKZ,KAAL,CAAWE,WAAtD,EAAmE,KAAKF,KAAL,CAAWG,OAA9E,EAAuF,KAAKH,KAAL,CAAWI,QAAlG,EAA4GH,QAA5G,EACKa,IADL,CAEQC,QAAQ,IAAI;AACR,WAAKhB,QAAL,CAAc;AAAEE,QAAAA,QAAQ,EAAEc,QAAQ,CAACC;AAArB,OAAd;AAEH,KALT,EAMMF,IANN,CAMY,MAAM;AAAC,UAAIF,MAAJ,EAAY,KAAKb,QAAL,CAAc;AAACG,QAAAA,WAAW,EAAG,CAAC,KAAKF,KAAL,CAAWE;AAA3B,OAAd;AAAuD,KANtF,EAOMY,IAPN,CAOY,MAAM;AAAC,UAAI,OAAO,KAAKd,KAAL,CAAWG,OAAlB,KAA8B,WAA9B,IAA6C,KAAKH,KAAL,CAAWO,WAAX,CAAuBJ,OAAvB,KAAmC,CAApF,EAAuF,KAAKJ,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AAAkC,KAP5I;AAQH;;AAEDa,EAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAU;AACpBD,IAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,IAAL,CAAUC,IAAI,IAAI;AACd,UAAGA,IAAI,CAACC,cAAL,CAAoB,CAACH,GAAD,CAApB,CAAH,EACI,OAAO,IAAP,CADJ,KAEK,OAAO,KAAP;AACR,KAJD;AAKA,WAAO,KAAP;AACH;;AAEDI,EAAAA,kBAAkB,CAACL,GAAD,EAAMC,GAAN,EAAU;AACxB,QAAIK,UAAU,GAAG,CAAjB;AACAN,IAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,IAAL,CAAU,CAACK,UAAD,EAAaC,KAAb,EAAoBvB,OAApB,KAAgC;AACtC,UAAGsB,UAAU,CAACH,cAAX,CAA0B,CAACH,GAAD,CAA1B,CAAH,EAAoC;AAChCK,QAAAA,UAAU,GAAGE,KAAb;AACA,eAAOF,UAAP;AACH,OAHD,MAIK,OAAO,KAAP;AACR,KAND;AAOA,WAAOA,UAAP;AACH;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQH,UAAR,EAAoBI,cAApB,EAAmC;AAC1C,QAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,IAA6B,KAAKd,cAAL,CAAoB,KAAKjB,KAAL,CAAWG,OAA/B,EAAuCsB,UAAvC,CAAjC,EAAsF;AAClF,WAAK1B,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAG;AAAf,OAAd;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKX,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAG;AAAZ,OAAd,EAJkF,CAKlF;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKV,KAAL,CAAWI,QAAtC;AAEA,UAAIsB,KAAK,GAAG,KAAKH,kBAAL,CAAwB,KAAKvB,KAAL,CAAWG,OAAnC,EAA4CsB,UAA5C,CAAZ;AAEA,UAAI,KAAKzB,KAAL,CAAWG,OAAX,CAAmBuB,KAAnB,EAA0BD,UAA1B,EAAsCI,cAAtC,CAAJ,EACI,OAAO,KAAK7B,KAAL,CAAWG,OAAX,CAAmBuB,KAAnB,EAA0BD,UAA1B,EAAsCI,cAAtC,CAAP;AAEApB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBsB,IAAI,CAACC,SAAL,CAAe,KAAKjC,KAAL,CAAWG,OAA1B,CAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKV,KAAL,CAAWG,OAAX,CAAmB+B,MAApD;AAEJ,UAAIC,MAAM,CAACC,IAAP,CAAY,KAAKpC,KAAL,CAAWG,OAAX,CAAmBuB,KAAnB,EAA0BD,UAA1B,CAAZ,EAAmDS,MAAnD,KAA8D,CAAlE,EACI,KAAKlC,KAAL,CAAWG,OAAX,CAAmBkC,MAAnB,CAA0BX,KAA1B,EAAiC,CAAjC;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBsB,IAAI,CAACC,SAAL,CAAe,KAAKjC,KAAL,CAAWG,OAA1B,CAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKV,KAAL,CAAWG,OAAX,CAAmB+B,MAApD;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,iFAAiF,OAAO,KAAKV,KAAL,CAAWG,OAAnG,KAA+G,WAA/G,IAA8H,KAAKH,KAAL,CAAWG,OAAX,CAAmB+B,MAAnB,KAA8B,CAAxK;AACJ,UAAI,OAAO,KAAKlC,KAAL,CAAWG,OAAlB,KAA8B,WAA9B,IAA6C,KAAKH,KAAL,CAAWG,OAAX,CAAmB+B,MAAnB,KAA8B,CAA/E,EAAkF,KAAKnC,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AAElF,WAAKO,eAAL,CAAqB,KAAKX,KAAL,CAAWY,MAAhC,EAAwC,KAAKZ,KAAL,CAAWC,QAAnD;AACH,KAxBD,MA0BK,IAAI2B,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,IAA6B,CAAE,KAAKd,cAAL,CAAoB,KAAKjB,KAAL,CAAWG,OAA/B,EAAwCsB,UAAxC,CAAnC,EAAwF;AACzF,WAAK1B,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAG;AAAf,OAAd;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKX,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKV,KAAL,CAAWI,QAAtC,EALyF,CAOzF;;AAEA,WAAKJ,KAAL,CAAWG,OAAX,CAAmBmC,IAAnB,CAAwB;AAAC,SAACb,UAAD,GAAc;AAAC,WAACI,cAAD,GAAmBD,KAAK,CAACE,MAAN,CAAaC;AAAjC;AAAf,OAAxB;AACA,WAAKpB,eAAL,CAAqB,KAAKX,KAAL,CAAWY,MAAhC,EAAwC,KAAKZ,KAAL,CAAWC,QAAnD;AACH,KAXI,MAaA,IAAI2B,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,IAA8B,KAAKd,cAAL,CAAoB,KAAKjB,KAAL,CAAWG,OAA/B,EAAwCsB,UAAxC,CAAlC,EAAuF;AACxF,WAAK1B,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAG;AAAf,OAAd;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKX,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAG;AAAZ,OAAd,EAJwF,CAKxF;;AAEA,WAAKJ,KAAL,CAAWG,OAAX,CAAmBoC,OAAnB,CAA2B,CAAClB,IAAD,EAAOK,KAAP,EAAcvB,OAAd,KAA0B;AACjD,YAAIkB,IAAI,CAACC,cAAL,CAAoB,CAACG,UAAD,CAApB,CAAJ,EAAsC;AAClCtB,UAAAA,OAAO,CAACuB,KAAD,CAAP,CAAeD,UAAf,EAA2BI,cAA3B,IAA6CD,KAAK,CAACE,MAAN,CAAaC,KAA1D;AACH;AACJ,OAJD;AAKA,WAAKpB,eAAL,CAAqB,KAAKX,KAAL,CAAWY,MAAhC,EAAwC,KAAKZ,KAAL,CAAWC,QAAnD;AACH,KAbI,MAcA;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEH;AACJ;;AAEFP,EAAAA,OAAO,GAAG;AACL,wBAAQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACP;AAAU,QAAA,WAAW,EAAE,IAAvB;AAA4B,QAAA,MAAM,EAAGyB,KAAK,IAAI;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,KAAxB,EAA+B,IAA/B;AAAqC;AAApF;AAAA;AAAA;AAAA;AAAA,cADO,eAEP;AAAU,QAAA,WAAW,EAAE,WAAvB;AAAmC,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,MAAxB,EAAgC,IAAhC;AAAsC;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFO,eAGP;AAAU,QAAA,WAAW,EAAE,SAAvB;AAAiC,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,aAAxB,EAAuC,IAAvC;AAA6C;AAAhG;AAAA;AAAA;AAAA;AAAA,cAHO,eAIP;AAAU,QAAA,WAAW,EAAE,uBAAvB;AAA+C,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,WAAxB,EAAqC,KAArC;AAA4C;AAA7G;AAAA;AAAA;AAAA;AAAA,cAJO,eAKP;AAAU,QAAA,WAAW,EAAE,sBAAvB;AAA8C,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,WAAxB,EAAqC,KAArC;AAA4C;AAA5G;AAAA;AAAA;AAAA;AAAA,cALO,eAMP;AAAU,QAAA,WAAW,EAAE,wBAAvB;AAAgD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,WAAxB,EAAqC,KAArC;AAA4C;AAA9G;AAAA;AAAA;AAAA;AAAA,cANO,eAOP;AAAU,QAAA,WAAW,EAAE,uBAAvB;AAA+C,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,WAAxB,EAAqC,KAArC;AAA4C;AAA7G;AAAA;AAAA;AAAA;AAAA,cAPO,eAQP;AAAU,QAAA,WAAW,EAAE,uBAAvB;AAA+C,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAAxH;AAAA;AAAA;AAAA;AAAA,cARO,eASP;AAAU,QAAA,WAAW,EAAE,sBAAvB;AAA8C,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAAvH;AAAA;AAAA;AAAA;AAAA,cATO,eAUP;AAAU,QAAA,WAAW,EAAE,+BAAvB;AAAuD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,wBAAxB,EAAkD,KAAlD;AAAyD;AAAlI;AAAA;AAAA;AAAA;AAAA,cAVO,eAWP;AAAU,QAAA,WAAW,EAAE,8BAAvB;AAAsD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,wBAAxB,EAAkD,KAAlD;AAAyD;AAAjI;AAAA;AAAA;AAAA;AAAA,cAXO,eAYP;AAAU,QAAA,WAAW,EAAE,0BAAvB;AAAkD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,kBAAxB,EAA4C,KAA5C;AAAmD;AAAvH;AAAA;AAAA;AAAA;AAAA,cAZO,eAaP;AAAU,QAAA,WAAW,EAAE,yBAAvB;AAAiD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,kBAAxB,EAA4C,KAA5C;AAAmD;AAAtH;AAAA;AAAA;AAAA;AAAA,cAbO,eAcP;AAAU,QAAA,WAAW,EAAE,8BAAvB;AAAsD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAA/H;AAAA;AAAA;AAAA;AAAA,cAdO,eAeP;AAAU,QAAA,WAAW,EAAE,6BAAvB;AAAqD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAA9H;AAAA;AAAA;AAAA;AAAA,cAfO,eAgBP;AAAU,QAAA,WAAW,EAAE,8BAAvB;AAAsD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAA/H;AAAA;AAAA;AAAA;AAAA,cAhBO,eAiBP;AAAU,QAAA,WAAW,EAAE,6BAAvB;AAAqD,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,sBAAxB,EAAgD,KAAhD;AAAuD;AAA9H;AAAA;AAAA;AAAA;AAAA,cAjBO,eAkBP;AAAU,QAAA,WAAW,EAAE,aAAvB;AAAqC,QAAA,MAAM,EAAGA,KAAK,IAAG;AAAC,eAAKD,WAAL,CAAiBC,KAAjB,EAAwB,aAAxB,EAAuC,IAAvC;AAA6C;AAApG;AAAA;AAAA;AAAA;AAAA,cAlBO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAoBJ;;AAEDY,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA,6BACR;AAAA,gCACI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAK7B,eAAL,CAAqB,KAArB,EAA4B,KAAKX,KAAL,CAAWC,QAAvC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,MAArB,EAA6B,KAAKX,KAAL,CAAWC,QAAxC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,WAArB,EAAkC,KAAKX,KAAL,CAAWC,QAA7C,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,WAArB,EAAkC,KAAKX,KAAL,CAAWC,QAA7C,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,aAArB,EAAoC,KAAKX,KAAL,CAAWC,QAA/C,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,sBAArB,EAA6C,KAAKX,KAAL,CAAWC,QAAxD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,wBAArB,EAA+C,KAAKX,KAAL,CAAWC,QAA1D,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,kBAArB,EAAyC,KAAKX,KAAL,CAAWC,QAApD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,sBAArB,EAA6C,KAAKX,KAAL,CAAWC,QAAxD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,sBAArB,EAA6C,KAAKX,KAAL,CAAWC,QAAxD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAI,UAAA,OAAO,EAAE,MAAK,KAAKU,eAAL,CAAqB,aAArB,EAAoC,KAAKX,KAAL,CAAWC,QAA/C,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YAAR;AAeH;;AAEDwC,EAAAA,QAAQ,CAACC,YAAD,EAAc;AACrB,wBAEA;AAAA,gBAEQA,YAAY,CAACC,GAAb,CACIC,OAAO,iBACH;AAAA,gCACI;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKF,OAAO,CAACG,KAAR,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKJ,OAAO,CAACG,KAAR,CAAcE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAKL,OAAO,CAACM,GAAR,CAAYC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAKP,OAAO,CAACQ,WAAR,CAAoBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,oBAAKT,OAAO,CAACQ,WAAR,CAAoBE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,oBAAKV,OAAO,CAACQ,WAAR,CAAoBG;AAAzB;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA,oBAAKX,OAAO,CAACQ,WAAR,CAAoBI;AAAzB;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAA,oBAAKZ,OAAO,CAACQ,WAAR,CAAoBK;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAA,oBAAKb,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBc;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SAASd,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,cAFR;AAFR;AAAA;AAAA;AAAA;AAAA,YAFA;AAwBA;;AAMAc,EAAAA,MAAM,GAAG;AACLlD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADK,CAGL;;AACA,UAAMkD,UAAU,gBAAG,QAAC,UAAD;AAAY,MAAA,YAAY,EAAI,KAAK5D,KAAL,CAAWK,YAAvC;AAAqD,MAAA,UAAU,EAAI,KAAKL,KAAL,CAAWC,QAAX,CAAoBiC,MAAvF;AAA+F,MAAA,QAAQ,EAAE,KAAKrC,QAAL,CAAcgE,IAAd;AAAzG;AAAA;AAAA;AAAA;AAAA,YAAnB;;AACA,UAAMC,eAAe,GAAG,KAAK9D,KAAL,CAAWF,WAAX,GAAyB,KAAKE,KAAL,CAAWK,YAA5D;AACA,UAAM0D,gBAAgB,GAAGD,eAAe,GAAG,KAAK9D,KAAL,CAAWK,YAAtD;AACA,UAAM2D,eAAe,GAAG,KAAKhE,KAAL,CAAWC,QAAX,CAAoBgE,KAApB,CAA0BF,gBAA1B,EAA4CD,eAA5C,CAAxB;AAEA,QAAII,SAAS,GAAE,CAAC,KAAK/D,OAAL,EAAD,EAAiByD,UAAjB,CAAf;AAEA,QAAI,KAAK5D,KAAL,CAAWC,QAAf,EACIiE,SAAS,CAAC5B,IAAV,eAAe;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,iBACV,KAAKE,MAAL,EADU,EAEV,KAAKC,QAAL,CAAcuB,eAAd,CAFU;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AAKJvD,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKV,KAAL,CAAWK,YAA5C;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKV,KAAL,CAAWF,WAAzC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACEoE;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnNwC;;AAqN7C,eAAexE,oBAAf","sourcesContent":["import React, { Component } from 'react'\nimport WeatherService from '../service/WeatherService';\nimport Pagination from './Pagination';\n\nclass WeatherListComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            weathers: [],\n            isAscending: true,\n            filters: [],\n            isFilter : false,\n            currentPage : 1,\n            itemsPerPage : 1000,\n            loading : false,\n            pageNumbers : []\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"som v componentDidMOunt\")\n        this.refreshWeathers();\n    }\n\n    refreshWeathers(sortBy, weathers) {\n        WeatherService.retrieveAllWeathers(sortBy, this.state.isAscending, this.state.filters, this.state.isFilter, weathers)\n            .then(\n                response => {\n                    this.setState({ weathers: response.data })\n\n                }\n            ).then( () => {if (sortBy) this.setState({isAscending : !this.state.isAscending})}\n            ).then( ()=>  {if (typeof this.state.filters !== 'undefined' && this.state.pageNumbers.filters === 0) this.setState({isFilter : false})})\n    }\n\n    keyExistsInArr(arr, key){\n        arr?.some(item => {\n            if(item.hasOwnProperty([key])) \n                return true\n            else return false\n        })\n        return false\n    }\n\n    findIndexInFilters(arr, key){\n        var indexOfKey = 0\n        arr?.some((filterName, index, filters) => {\n            if(filterName.hasOwnProperty([key])){ \n                indexOfKey = index\n                return indexOfKey\n            }\n            else return false\n        })\n        return indexOfKey\n    }\n\n    onBlurEvent(event, filterName, filterOperator){\n        if (event.target.value === \"\" && this.keyExistsInArr(this.state.filters,filterName))  {\n            this.setState({currentPage : 1})\n\n            console.log(\"inside 1\") \n            this.setState({isFilter : true})\n            // this.state.currentPage = 0\n            console.log(\"isFilter: \" + this.state.isFilter) \n\n            var index = this.findIndexInFilters(this.state.filters, filterName)\n\n            if (this.state.filters[index][filterName][filterOperator])\n                delete this.state.filters[index][filterName][filterOperator]  \n\n                console.log(\"filters is: \" + JSON.stringify(this.state.filters))\n                console.log(\"filters length: \" + this.state.filters.length)\n\n            if (Object.keys(this.state.filters[index][filterName]).length === 0)\n                this.state.filters.splice(index, 1)\n                console.log(\"filters is: \" + JSON.stringify(this.state.filters))\n                console.log(\"filters length: \" + this.state.filters.length)\n                console.log(\"typeof this.state.filters !== 'undefined' && this.state.filters.length === 0\" + typeof this.state.filters !== 'undefined' && this.state.filters.length === 0)\n            if (typeof this.state.filters !== 'undefined' && this.state.filters.length === 0) this.setState({isFilter : false})\n\n            this.refreshWeathers(this.state.sortBy, this.state.weathers)\n        }\n\n        else if (event.target.value !== \"\" && !(this.keyExistsInArr(this.state.filters, filterName))){\n            this.setState({currentPage : 1})\n\n            console.log(\"inside 2\")\n            this.setState({isFilter : true})\n            console.log(\"isFilter: \" + this.state.isFilter) \n\n            // this.state.currentPage = 0\n\n            this.state.filters.push({[filterName]: {[filterOperator] : event.target.value}})\n            this.refreshWeathers(this.state.sortBy, this.state.weathers)\n        }\n\n        else if (event.target.value !== \"\" && (this.keyExistsInArr(this.state.filters, filterName))){\n            this.setState({currentPage : 1})\n\n            console.log(\"inside 3\")        \n            this.setState({isFilter : true})\n            // this.state.currentPage = 0\n\n            this.state.filters.forEach((item, index, filters) => {\n                if (item.hasOwnProperty([filterName])){\n                    filters[index][filterName][filterOperator] = event.target.value\n                }\n            })\n            this.refreshWeathers(this.state.sortBy, this.state.weathers)\n        }\n        else {\n            console.log(\"inside 4\")\n\n        }\n    }\n\n   filters() {\n        return (<div className=\"row\">\n        {<textarea placeholder= \"Id\" onBlur= {event => {this.onBlurEvent(event, \"_id\", \"eq\")}}></textarea>}\n        {<textarea placeholder= \"City name\" onBlur= {event =>{this.onBlurEvent(event, \"name\", \"eq\")}}></textarea>}\n        {<textarea placeholder= \"Country\" onBlur= {event =>{this.onBlurEvent(event, \"sys.country\", \"eq\")}}></textarea>}\n        {<textarea placeholder= \"Latitude smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lat\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Latitude bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lat\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Longitude smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lon\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Longitude bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"coord.lon\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Humidity smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.humidity\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Humidity bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.humidity\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Feel temperature smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.feels_like\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Feel temperature bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.feels_like\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature max smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_max\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature max bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_max\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature min smaller than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_min\", \"lte\")}}></textarea>}\n        {<textarea placeholder= \"Temperature min bigger than\" onBlur= {event =>{this.onBlurEvent(event, \"weatherMain.temp_min\", \"gte\")}}></textarea>}\n        {<textarea placeholder= \"Description\" onBlur= {event =>{this.onBlurEvent(event, \"description\", \"eq\")}}></textarea>}\n    </div>)\n   }\n\n   header(){\n       return (<thead>\n       <tr>\n           <th onClick={() =>this.refreshWeathers(\"_id\", this.state.weathers) }>cityId</th>\n           <th onClick={() =>this.refreshWeathers(\"name\", this.state.weathers) }>city Name</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lat\", this.state.weathers) }>latitude</th>\n           <th onClick={() =>this.refreshWeathers(\"coord.lon\", this.state.weathers) }>longitude</th>\n           <th onClick={() =>this.refreshWeathers(\"sys.country\", this.state.weathers) }>country</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.humidity\", this.state.weathers) }>humidity</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.feels_like\", this.state.weathers) }>feels like</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp\", this.state.weathers) }>temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_max\", this.state.weathers) }>maximum temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"weatherMain.temp_min\", this.state.weathers) }>minimal temperature</th>\n           <th onClick={() =>this.refreshWeathers(\"description\", this.state.weathers) }>description</th>                                \n       </tr>\n   </thead>)\n   }\n\n   mainBody(currentPosts){\n    return (\n\n    <tbody>\n        {\n            currentPosts.map(\n                weather =>\n                    <tr key={weather._id}>\n                        <td>{weather._id}</td>\n                        <td>{weather.name}</td>\n                        <td>{weather.coord.lat}</td>\n                        <td>{weather.coord.lon}</td>\n                        <td>{weather.sys.country}</td>\n                        <td>{weather.weatherMain.humidity}</td>\n                        <td>{weather.weatherMain.feels_like}</td>\n                        <td>{weather.weatherMain.temp}</td>\n                        <td>{weather.weatherMain.temp_max}</td>\n                        <td>{weather.weatherMain.temp_min}</td>\n                        <td>{weather.weather[0].description}</td>\n\n                    </tr>\n            )\n        }\n        </tbody>\n    )\n   }\n\n    paginate = (currentPage) => {\n       this.setState({currentPage : currentPage})\n    }\n\n    render() {\n        console.log(\"som v render\")\n\n        //to set page\n        const pagination = <Pagination itemsPerPage = {this.state.itemsPerPage} totalItems = {this.state.weathers.length} paginate={this.paginate.bind()}/>\n        const indexOfLastPost = this.state.currentPage * this.state.itemsPerPage;\n        const indexOfFirstPost = indexOfLastPost - this.state.itemsPerPage;\n        const currentWeathers = this.state.weathers.slice(indexOfFirstPost, indexOfLastPost);\n\n        let container= [this.filters(), pagination]\n\n        if (this.state.weathers)\n            container.push(<table className=\"table\">\n                {this.header()}\n                {this.mainBody(currentWeathers)}\n            </table>)\n\n        console.log(\"items per page: \" + this.state.itemsPerPage)\n\n        console.log(\"currentPage: \" + this.state.currentPage)\n       \n        return (\n            <div className=\"container\">\n             {container}\n            </div>\n        )\n         \n    }\n}\nexport default WeatherListComponent\n"]},"metadata":{},"sourceType":"module"}