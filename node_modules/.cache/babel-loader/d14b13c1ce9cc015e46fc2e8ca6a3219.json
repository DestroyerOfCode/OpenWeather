{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\nfunction WeatherForecastComponent(props) {\n  _s();\n\n  var _dailyWeatherForecast, _dailyWeatherForecast2;\n\n  console.log(\"som vo forecast component\");\n  console.log(\"props: \" + JSON.stringify(props.history.location.state));\n  const [dailyWeatherForecast, setDailyWeatherForecast] = useState({});\n  useEffect(() => {\n    console.log(\"som v useEffect forecast component\");\n    console.log(\"func: \");\n    WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat, props.history.location.state.lon, \"Current,Hourly,Minutely\").then(response => setDailyWeatherForecast(response.data)); //    console.log(\"res: \" + JSON.stringify(res))\n    //    setDailyWeatherForecast(res);\n  }, [props.history.location.state.lat, props.history.location.state.lon]); // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n\n  console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: dailyWeatherForecast === null || dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast = dailyWeatherForecast.data) === null || _dailyWeatherForecast === void 0 ? void 0 : (_dailyWeatherForecast2 = _dailyWeatherForecast.daily) === null || _dailyWeatherForecast2 === void 0 ? void 0 : _dailyWeatherForecast2.map(dailyWeather => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyWeather.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, dailyWeather.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherForecastComponent, \"bJ5teWGutBLkVhno6XsU0CImiiw=\");\n\n_c = WeatherForecastComponent;\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n  console.log(\"som v metode getDailyWeatherForecast\");\n  const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\");\n  console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc));\n  return dailyWeatherForecastFunc;\n};\n\nexport default WeatherForecastComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/component/WeatherForecastComponent.js"],"names":["React","useState","useEffect","WeatherForecastService","WeatherForecastComponent","props","console","log","JSON","stringify","history","location","state","dailyWeatherForecast","setDailyWeatherForecast","getDailyForecastByCityName","lat","lon","then","response","data","daily","map","dailyWeather","id","getDailyWeatherForecast","dailyWeatherForecastFunc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAEC,SAASC,wBAAT,CAAkCC,KAAlC,EAAwC;AAAA;;AAAA;;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAtC,CAAxB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAEPI,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAJ,IAAAA,sBAAsB,CAACY,0BAAvB,CAAkDV,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA/E,EAAmFX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhH,EAAqH,yBAArH,EACAC,IADA,CACMC,QAAQ,IAAIL,uBAAuB,CAACK,QAAQ,CAACC,IAAV,CADzC,EAJQ,CAMX;AACA;AACE,GARG,EAQD,CAACf,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BI,GAA9B,EAAmCX,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BK,GAAhE,CARC,CAAT,CAPqC,CAiBrC;;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,IAAI,CAACC,SAAL,CAAeI,oBAAf,CAAvC;AACA,sBACA;AAAA,2BACI;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBACMA,oBADN,aACMA,oBADN,gDACMA,oBAAoB,CAAEO,IAD5B,oFACM,sBAA4BC,KADlC,2DACM,uBAAmCC,GAAnC,CAAuCC,YAAY,IAAG;AACpD,8BACI;AAAA,mCACI;AAAA,wBAAKA,YAAY,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAWD,YAAY,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIH,SALC;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAaH;;GAhCSpB,wB;;KAAAA,wB;;AAkCV,MAAMqB,uBAAuB,GAAG,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AAChDX,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,QAAMmB,wBAAwB,GAAG,MAAMvB,sBAAsB,CAACY,0BAAvB,CAAkDC,GAAlD,EAAuDC,GAAvD,EAA4D,yBAA5D,CAAvC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACC,SAAL,CAAeiB,wBAAf,CAA3C;AACA,SAAOA,wBAAP;AACH,CALD;;AAMA,eAAetB,wBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport WeatherForecastService from '../service/WeatherForecastService';\n\n function WeatherForecastComponent(props){\n\n    console.log(\"som vo forecast component\")\n    console.log(\"props: \" + JSON.stringify(props.history.location.state))\n\n    const [dailyWeatherForecast, setDailyWeatherForecast] = useState({} )\n    \n    useEffect(() =>{\n       \n            console.log(\"som v useEffect forecast component\")\n           console.log(\"func: \" )\n           WeatherForecastService.getDailyForecastByCityName(props.history.location.state.lat,props.history.location.state.lon, \"Current,Hourly,Minutely\").\n           then( response => setDailyWeatherForecast(response.data)) \n        //    console.log(\"res: \" + JSON.stringify(res))\n        //    setDailyWeatherForecast(res);\n         }, [props.history.location.state.lat, props.history.location.state.lon])\n\n    // setDailyWeatherForecast(getDailyWeatherForecast(props.history.location.state.lat, props.history.location.state.lon).data)\n    console.log(\"dailyWeatherForecast: \" + JSON.stringify(dailyWeatherForecast))\n    return (\n    <div>\n        <tbody>\n            <table className=\"table\">\n                { dailyWeatherForecast?.data?.daily?.map(dailyWeather =>{\n                    return( \n                        <tr key ={ dailyWeather.id}>\n                            <td>{dailyWeather.id}</td>\n                        </tr>)\n                })}\n            </table>\n        </tbody>\n    </div>)\n}\n\nconst getDailyWeatherForecast = async (lat, lon) => {\n    console.log(\"som v metode getDailyWeatherForecast\")\n    const dailyWeatherForecastFunc = await WeatherForecastService.getDailyForecastByCityName(lat, lon, \"Current,Hourly,Minutely\")\n    console.log(\"dailyWeatherForecastFunc: \" + JSON.stringify(dailyWeatherForecastFunc))\n    return dailyWeatherForecastFunc\n}\nexport default WeatherForecastComponent"]},"metadata":{},"sourceType":"module"}