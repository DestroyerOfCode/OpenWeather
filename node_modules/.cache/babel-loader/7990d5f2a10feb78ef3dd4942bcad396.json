{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss';\nimport { convertTemperature } from '../../businessLogic/WeatherBusinessLogic';\nimport i18n from 'i18next';\n\nfunction FiltersComponent(props) {\n  _s();\n\n  //TODO find out how to call setMethod in buildFilter function\n  const [filterKey, setFilterKey] = useState(\"\");\n  const [filtervalue, setFilterValue] = useState(\"\");\n  const [filterOperator, setFilterOperator] = useState(\"\");\n  useEffect(() => {\n    const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n    return () => clearTimeout(timeOutId);\n  }, [filterKey, filtervalue, filterOperator, props]);\n\n  var buildFilter = (filterValue, filterKey, filterOperator) => {\n    setFilterValue(filterValue);\n    setFilterKey(filterKey);\n    setFilterOperator(filterOperator);\n  };\n\n  const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n    // console.log(\"filterStringify: \" + JSON.stringify(filter))\n    // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n    let ret = \"\"; // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n\n    ret = i18n.t(`current.filters.${translationKey}`);\n    filter.some(item => {\n      // console.log( filterKey in item)\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey])); // setFunc(props.filters[filterKey][filterOperator])\n\n        ret += \" \" + item[filterKey][filterOperator];\n        return true;\n      } else return false;\n    });\n    return ret;\n  };\n\n  const getSelectedDescriptions = (filters, filterKey, filterOperator, descriptions) => {\n    let retArr = [];\n    console.log(filters);\n    filters.some(item => {\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        console.log(\"item[filterKey][filterOperator]: \" + item[filterKey][filterOperator]);\n        item[filterKey][filterOperator].split(\",\").forEach(description => {\n          let originalValue = \"\";\n          descriptions.some(item => {\n            console.log(item);\n\n            if (description === item.originalValue) {\n              originalValue = item.originalValue;\n              return true;\n            }\n\n            return false;\n          });\n          console.log(description);\n          retArr.push({\n            \"name\": i18n.t(`common.description.${description}`),\n            \"originalValue\": originalValue\n          });\n        });\n        return true;\n      }\n\n      return false;\n    });\n    console.log(retArr);\n    return retArr;\n  };\n\n  const getSelectedCountries = (filters, filterKey, filterOperator) => {\n    let retArr = [];\n    filters.some(item => {\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        item[filterKey][filterOperator].split(\",\").forEach(country => {\n          retArr.push({\n            \"name\": country\n          });\n        });\n        return true;\n      }\n\n      return false;\n    });\n    return retArr;\n  };\n\n  const getOriginalValue = (filter, temperature, filterKey, filterOperator) => {\n    // console.log(\"filterStringify: \" + JSON.stringify(filter))\n    // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n    let ret = \"\";\n    const temperatureKeys = [\"weatherMain.humidity\", \"weatherMain.humidity\", \"weatherMain.feels_like\", \"weatherMain.feels_like\", \"weatherMain.temp\", \"weatherMain.temp\", \"weatherMain.temp_max\", \"weatherMain.temp_max\", \"weatherMain.temp_min\", \"weatherMain.temp_min\"]; // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n\n    filter.some(item => {\n      // console.log( filterKey in item)\n      if (filterKey in item && filterOperator in item[filterKey]) {\n        // console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey]))\n        // setFunc(props.filters[filterKey][filterOperator])\n        console.log(temperature);\n        console.log(item[filterKey][filterOperator]);\n        console.log(Object.keys(item));\n        if (temperatureKeys.includes(Object.keys(item)[0])) ret = convertTemperature(temperature.units, item[filterKey][filterOperator]);else ret = item[filterKey][filterOperator];\n        return true;\n      } else return false;\n    });\n    console.log(ret !== \"\");\n    if (ret !== \"\") return ret;\n    return;\n  };\n\n  console.log(props.descriptions);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"currentFiltersWrappes\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"name\", \"eq\"),\n      placeholder: i18n.t(\"current.filters.cityName\"),\n      onChange: event => {\n        buildFilter(event.target.value, \"name\", \"eq\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.latitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) {\n          buildFilter(event.target.value, \"coord.lat\", \"gte\");\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.latitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.longitudeFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.longitudeTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.humidityFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.humidityTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.feelTemperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.feelTemperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMaxFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMaxTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"gte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMinFrom\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"lte\"),\n      placeholder: i18n.t(\"current.filters.temperatureMinTo\"),\n      onChange: event => {\n        if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions),\n      placeholder: i18n.t(\"current.filters.pickDescriptions\"),\n      options: props.descriptions,\n      displayValue: \"name\",\n      showCheckbox: true,\n      onSelect: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n      selectedValues: getSelectedCountries(props.filters, \"sys.country\", \"in\"),\n      placeholder: i18n.t(\"current.filters.pickCountries\"),\n      options: props.countries,\n      displayValue: \"name\",\n      onSelect: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      },\n      onRemove: event => {\n        buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n} // In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\n\n\n_s(FiltersComponent, \"zZRYoqm3bb8s4MlYdjRloDPx4qQ=\");\n\n_c = FiltersComponent;\n\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n  if (temperatureValue === \"\") return \"\";\n  if (temperatureUnits === 'celsius') return (parseFloat(temperatureValue) + 273.15).toString();\n  if (temperatureUnits === 'fahrenheit') return ((parseFloat(temperatureValue) + 459.67) * 5 / 9).toString();\n  return temperatureValue;\n};\n\nconst isNumber = item => {\n  var isNumber = !isNaN(item);\n  if (!isNumber) alert('You must pick a number in this field');\n  return isNumber;\n}; // this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\n\n\nconst makeStringFromDescriptions = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue;\n  };\n\n  console.log(items);\n  console.log(items.reduce(selectedItemsIntoString, ''));\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nconst makeStringFromCountries = items => {\n  var selectedItemsIntoString = (prevVal, currVal, idx) => {\n    return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name;\n  };\n\n  return items.reduce(selectedItemsIntoString, '');\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/components/current/Filters.js"],"names":["React","useState","useEffect","Multiselect","convertTemperature","i18n","FiltersComponent","props","filterKey","setFilterKey","filtervalue","setFilterValue","filterOperator","setFilterOperator","timeOutId","setTimeout","onChangeMethod","clearTimeout","buildFilter","filterValue","getPlaceholder","filter","translationKey","defaultCompareValue","ret","t","some","item","console","log","JSON","stringify","getSelectedDescriptions","filters","descriptions","retArr","split","forEach","description","originalValue","push","getSelectedCountries","country","getOriginalValue","temperature","temperatureKeys","Object","keys","includes","units","event","target","value","isNumber","calculateKelvins","temperatureUnits","makeStringFromDescriptions","countries","makeStringFromCountries","temperatureValue","parseFloat","toString","isNaN","alert","items","selectedItemsIntoString","prevVal","currVal","idx","reduce","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport '../../styles/current/Filters.scss'\nimport {convertTemperature} from '../../businessLogic/WeatherBusinessLogic'\nimport i18n from 'i18next'\n\nfunction FiltersComponent(props) {\n   \n    //TODO find out how to call setMethod in buildFilter function\n    const [filterKey, setFilterKey] = useState(\"\")\n    const [filtervalue, setFilterValue] = useState(\"\");\n    const [filterOperator, setFilterOperator] = useState(\"\");\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => props.onChangeMethod(filtervalue, filterKey, filterOperator), 500);\n        return () => clearTimeout(timeOutId);\n    }, [filterKey, filtervalue, filterOperator, props]);\n\n    var buildFilter = (filterValue, filterKey, filterOperator) => {\n        setFilterValue(filterValue); setFilterKey(filterKey); setFilterOperator(filterOperator)\n    }\n\n    const getPlaceholder = (filter, translationKey, filterKey, filterOperator, defaultCompareValue) => {\n        // console.log(\"filterStringify: \" + JSON.stringify(filter))\n        // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n        let ret = \"\"\n        // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n            ret = i18n.t(`current.filters.${translationKey}`);\n        filter.some((item) => {\n            // console.log( filterKey in item)\n            if ( filterKey in item && filterOperator in item[filterKey]) {\n                console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey]))\n\n                // setFunc(props.filters[filterKey][filterOperator])\n                ret += \" \" + item[filterKey][filterOperator];\n                return true;\n            }\n            else return false\n        })\n        return ret;\n    }\n\n    const getSelectedDescriptions= (filters, filterKey, filterOperator, descriptions) =>{\n\n        let retArr= []\n        console.log(filters)\n        filters.some((item) => {\n            if (filterKey in item && filterOperator in item[filterKey]){\n                console.log(\"item[filterKey][filterOperator]: \" + item[filterKey][filterOperator])\n                item[filterKey][filterOperator].split(\",\").forEach((description) => {\n                    let originalValue = \"\"\n                    descriptions.some((item) => {\n                        console.log(item)\n                        if(description === item.originalValue){\n                            originalValue = item.originalValue\n                            return true;\n                        } return false\n                    })\n                    console.log(description)\n                    retArr.push({\"name\": i18n.t(`common.description.${description}`), \"originalValue\": originalValue})\n                })\n                return true;\n            }\n            return false;\n        })\n        console.log(retArr)\n        return retArr\n    }\n\n    const getSelectedCountries= (filters, filterKey, filterOperator) =>{\n\n        let retArr = []\n        filters.some((item) =>{\n            if (filterKey in item && filterOperator in item[filterKey]){\n\n                item[filterKey][filterOperator].split(\",\").forEach((country) => {\n                    retArr.push({\"name\": country})\n                })\n                return true;\n            }\n            return false;\n        })\n        return retArr\n    }\n\n    const getOriginalValue = (filter, temperature, filterKey, filterOperator) => {\n        // console.log(\"filterStringify: \" + JSON.stringify(filter))\n        // console.log(\"filter[filterKey]: \" + filter[filterKey] + \" defaultCompareValue: \" + defaultCompareValue)\n        let ret = \"\"\n        const temperatureKeys= [\"weatherMain.humidity\",\n        \"weatherMain.humidity\",\n        \"weatherMain.feels_like\",\n        \"weatherMain.feels_like\",\n        \"weatherMain.temp\",\n        \"weatherMain.temp\",\n        \"weatherMain.temp_max\",\n        \"weatherMain.temp_max\",\n        \"weatherMain.temp_min\",\n        \"weatherMain.temp_min\"]\n        // if (translationKey !== \"pickDescriptions\" && translationKey !== \"pickCountries\")\n        filter.some((item) => {\n            // console.log( filterKey in item)\n            if ( filterKey in item && filterOperator in item[filterKey]) {\n                // console.log(\"item[filterKey]: \" + JSON.stringify(item[filterKey]))\n                // setFunc(props.filters[filterKey][filterOperator])\n                console.log(temperature)\n                console.log(item[filterKey][filterOperator])\n                console.log(Object.keys(item))\n                if (temperatureKeys.includes(Object.keys(item)[0]))\n                    ret = convertTemperature(temperature.units, item[filterKey][filterOperator])\n                else ret = item[filterKey][filterOperator]\n                return true;\n            }\n            else return false\n        })\n        console.log(ret !== \"\")\n        if(ret !== \"\")\n            return ret;\n        return;\n    }\n    console.log(props.descriptions)\n    return (\n        <form className=\"currentFiltersWrappes\">\n                {<input value={getOriginalValue(props.filters, props.temperature, \"name\", \"eq\")} placeholder= {i18n.t(\"current.filters.cityName\") } onChange= {event =>{buildFilter(event.target.value, \"name\", \"eq\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"gte\")} placeholder= {i18n.t(\"current.filters.latitudeFrom\")} onChange= {event =>{if (isNumber(event.target.value)) {buildFilter(event.target.value, \"coord.lat\", \"gte\")}}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"coord.lat\", \"lte\")} placeholder= {i18n.t(\"current.filters.latitudeTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lat\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"gte\")} placeholder= {i18n.t(\"current.filters.longitudeFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"coord.lon\", \"lte\")} placeholder= {i18n.t(\"current.filters.longitudeTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"coord.lon\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"gte\")} placeholder= {i18n.t(\"current.filters.humidityFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.humidity\", \"lte\")} placeholder= {i18n.t(\"current.filters.humidityTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(event.target.value, \"weatherMain.humidity\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"gte\")} placeholder= {i18n.t(\"current.filters.feelTemperatureFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.feels_like\", \"lte\")} placeholder= {i18n.t(\"current.filters.feelTemperatureTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.feels_like\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureMaxFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_max\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureMaxTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_max\", \"lte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"gte\")} placeholder= {i18n.t(\"current.filters.temperatureMinFrom\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"gte\")}}></input>}\n                {<input value={getOriginalValue(props.filters, props.temperature, \"weatherMain.temp_min\", \"lte\")} placeholder= {i18n.t(\"current.filters.temperatureMinTo\") } onChange= {event =>{if (isNumber(event.target.value)) buildFilter(calculateKelvins(props.temperatureUnits, event.target.value), \"weatherMain.temp_min\", \"lte\")}}></input>}\n                <br></br>\n                {<Multiselect selectedValues={getSelectedDescriptions(props.filters, \"weather.description\", \"in\", props.descriptions)} placeholder={i18n.t(\"current.filters.pickDescriptions\")} options = {props.descriptions} displayValue='name' showCheckbox={true} onSelect={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromDescriptions(event), \"weather.description\", \"in\")}}/>}\n                    {<Multiselect selectedValues={getSelectedCountries(props.filters, \"sys.country\", \"in\")} placeholder={i18n.t(\"current.filters.pickCountries\")} options ={props.countries} displayValue='name'  onSelect={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}\n                onRemove={event =>{buildFilter(makeStringFromCountries(event), \"sys.country\", \"in\")}}/>}\n        </form>\n        )\n}\n\n// In db values are in kelvin. The user can change it on the UI.\n// I must convert to same units\nconst calculateKelvins = (temperatureUnits, temperatureValue) => {\n    if(temperatureValue === \"\")\n        return \"\"\n    if (temperatureUnits === 'celsius')\n        return (parseFloat(temperatureValue) + 273.15).toString()\n    if (temperatureUnits === 'fahrenheit')\n        return (((parseFloat(temperatureValue) + 459.67) * 5) / 9).toString()\n    return temperatureValue\n}\n\n\nconst isNumber = (item) => {\n    var isNumber = !isNaN(item)\n    if (!isNumber) alert('You must pick a number in this field')\n    return isNumber\n}\n\n// this closure's purpose is to create strings to be sent to query params, as no \n// other way to send arrays exists\nconst makeStringFromDescriptions= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.originalValue : prevVal + \",\" + currVal.originalValue\n    }\n    console.log(items)\n    console.log(items.reduce(selectedItemsIntoString, ''))\n    return items.reduce(selectedItemsIntoString, '')\n}\nconst makeStringFromCountries= (items) => {\n    var selectedItemsIntoString = (prevVal, currVal, idx) => {\n        return idx === 0 ? currVal.name : prevVal + \",\" + currVal.name\n    }\n    return items.reduce(selectedItemsIntoString, '')\n}\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}