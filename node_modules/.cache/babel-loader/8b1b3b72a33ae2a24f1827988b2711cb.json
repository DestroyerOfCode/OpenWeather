{"ast":null,"code":"export const getWeatherDescription = (weather, i18n) => {\n  var weatherItemReduce = (prevVal, currVal, idx) => {\n    return idx === 0 ? i18n.t(currVal.description) : prevVal + \", \" + i18n.t(currVal.description);\n  };\n\n  return weather.weather.map(item => ({\n    \"description\": \"common.description.\" + i18n.t(item.description)\n  })).reduce(weatherItemReduce, '');\n};\nexport const displayDateTime = dateTime => {\n  return dateTime.toLocaleString(\"sk-SK\");\n};\nexport const convertTemperature = (convertTo, temp) => {\n  if (convertTo === \"celsius\") return temp - 273.15;else if (convertTo === \"fahrenheit\") return (temp - 273.15) * 1.8 + 32;else return temp;\n};","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/businessLogic/WeatherBusinessLogic.js"],"names":["getWeatherDescription","weather","i18n","weatherItemReduce","prevVal","currVal","idx","t","description","map","item","reduce","displayDateTime","dateTime","toLocaleString","convertTemperature","convertTo","temp"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACpD,MAAIC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,KAA2B;AAC/C,WAAOA,GAAG,KAAK,CAAR,GAAYJ,IAAI,CAACK,CAAL,CAAOF,OAAO,CAACG,WAAf,CAAZ,GAA0CJ,OAAO,GAAG,IAAV,GAAiBF,IAAI,CAACK,CAAL,CAAOF,OAAO,CAACG,WAAf,CAAlE;AACH,GAFD;;AAGA,SAAOP,OAAO,CAACA,OAAR,CAAgBQ,GAAhB,CAAqBC,IAAD,KAAW;AAAC,mBAAgB,wBAAwBR,IAAI,CAACK,CAAL,CAAOG,IAAI,CAACF,WAAZ;AAAzC,GAAX,CAApB,EAAoGG,MAApG,CAA2GR,iBAA3G,EAA8H,EAA9H,CAAP;AACH,CALM;AAOP,OAAO,MAAMS,eAAe,GAAIC,QAAD,IAAc;AACzC,SAAOA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACnD,MAAID,SAAS,KAAK,SAAlB,EACI,OAAOC,IAAI,GAAG,MAAd,CADJ,KAEK,IAAID,SAAS,KAAK,YAAlB,EACD,OAAO,CAACC,IAAI,GAAE,MAAP,IAAiB,GAAjB,GAAuB,EAA9B,CADC,KAEA,OAAOA,IAAP;AACR,CANM","sourcesContent":["export const getWeatherDescription = (weather, i18n) => {\n    var weatherItemReduce = (prevVal, currVal, idx) => {\n        return idx === 0 ? i18n.t(currVal.description) : prevVal + \", \" + i18n.t(currVal.description);\n    }\n    return weather.weather.map((item) => ({\"description\" : \"common.description.\" + i18n.t(item.description)})).reduce(weatherItemReduce, '')\n}\n\nexport const displayDateTime = (dateTime) => {\n    return dateTime.toLocaleString(\"sk-SK\")\n}\n\nexport const convertTemperature = (convertTo, temp) => {\n    if (convertTo === \"celsius\")\n        return temp - 273.15\n    else if (convertTo === \"fahrenheit\")\n        return (temp -273.15) * 1.8 + 32\n    else return temp\n}"]},"metadata":{},"sourceType":"module"}