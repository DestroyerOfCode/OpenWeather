{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, isFilter, weathers) {\n    var filterString = this.buildFilterString(filters, filterOperator); // console.log(\"filters?.length: \" + filters?.length)\n\n    console.log(JSON.stringify(filters));\n    if (!weathers) weathers = []; // console.log(\"weathers: \" + JSON.stringify(weathers))\n\n    const params = {\n      sortBy,\n      isAscending,\n      filterString,\n      isFilter,\n      filterOperator\n    }; // console.log(\"params: \" + JSON.stringify(params) )\n\n    console.log(\"filters.filteringNode: \" + JSON.stringify(filters.filteringNode));\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n  buildFilterString(filters, filterOperator) {\n    var filterString = \"\";\n\n    for (var i = 0; i <= (filters === null || filters === void 0 ? void 0 : filters.length) - 1; ++i) {\n      filterString += JSON.stringify({\n        \"filteringNode\": filters[i].filteringNode,\n        \"filterOperator\": filters[i].filterOperator\n      });\n      if (filters[i + 1]) filterString += \",\"; // console.log(\"filters[i]: \" + JSON.stringify(filters[i]))\n    }\n\n    return filterString;\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","filterOperator","isFilter","weathers","filterString","buildFilterString","console","log","JSON","stringify","params","filteringNode","post","i","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,QAA/C,EAAyDC,QAAzD,EAAmE;AAClF,QAAIC,YAAY,GAAG,KAAKC,iBAAL,CAAuBL,OAAvB,EAAgCC,cAAhC,CAAnB,CADkF,CAElF;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAZ;AACC,QAAG,CAACG,QAAJ,EACIA,QAAQ,GAAG,EAAX,CAL8E,CAM9E;;AACJ,UAAMO,MAAM,GAAG;AACXZ,MAAAA,MADW;AACHC,MAAAA,WADG;AACUK,MAAAA,YADV;AACwBF,MAAAA,QADxB;AACkCD,MAAAA;AADlC,KAAf,CAPkF,CAWlF;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BC,IAAI,CAACC,SAAL,CAAeT,OAAO,CAACW,aAAvB,CAAxC;AACA,WAAOlB,KAAK,CAACmB,IAAN,CAAY,GAAEjB,eAAgB,kBAA9B,EAAiDQ,QAAjD,EAA0D;AAACO,MAAAA;AAAD,KAA1D,CAAP;AACH;;AAEDL,EAAAA,iBAAiB,CAACL,OAAD,EAAUC,cAAV,EAAyB;AACtC,QAAIG,YAAY,GAAG,EAAnB;;AACA,SAAI,IAAIS,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAAAb,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEc,MAAT,IAAgB,CAApC,EAAuC,EAAED,CAAzC,EAA2C;AACvCT,MAAAA,YAAY,IAAGI,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAkBT,OAAO,CAACa,CAAD,CAAP,CAAWF,aAA9B;AAA6C,0BAAmBX,OAAO,CAACa,CAAD,CAAP,CAAWZ;AAA3E,OAAf,CAAf;AACA,UAAID,OAAO,CAACa,CAAC,GAAC,CAAH,CAAX,EACIT,YAAY,IAAI,GAAhB,CAHmC,CAIvC;AACH;;AACD,WAAOA,YAAP;AACH;;AA3BgB;;AA6BrB,eAAe,IAAIR,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, isFilter, weathers) {\n        var filterString = this.buildFilterString(filters, filterOperator)\n        // console.log(\"filters?.length: \" + filters?.length)\n       console.log(JSON.stringify(filters))\n        if(!weathers)\n            weathers = []\n            // console.log(\"weathers: \" + JSON.stringify(weathers))\n        const params = {\n            sortBy, isAscending, filterString, isFilter, filterOperator\n        }\n\n        // console.log(\"params: \" + JSON.stringify(params) )\n        console.log(\"filters.filteringNode: \" + JSON.stringify(filters.filteringNode))\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters, filterOperator){\n        var filterString = \"\"\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify({\"filteringNode\" : filters[i].filteringNode, \"filterOperator\" : filters[i].filterOperator});\n            if (filters[i+1])\n                filterString += \",\"\n            // console.log(\"filters[i]: \" + JSON.stringify(filters[i]))\n        }\n        return filterString\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}