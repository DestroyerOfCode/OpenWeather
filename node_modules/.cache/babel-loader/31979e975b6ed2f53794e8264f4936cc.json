{"ast":null,"code":"import axios from 'axios';\nimport WeatherListComponent from '../component/WeatherListComponent';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, isFilter, weathers, currentPage, itemsPerPage) {\n    var filterString = this.buildFilterString(filters);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filterString,\n      isFilter\n    };\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params\n    });\n  }\n\n  buildFilterString(filters) {\n    var filterString = \"\";\n    console.log(\"filters?.length: \" + (filters === null || filters === void 0 ? void 0 : filters.length));\n\n    for (var i = 0; i <= (filters === null || filters === void 0 ? void 0 : filters.length) - 1; ++i) {\n      filterString += JSON.stringify(filters[i]);\n      if (filters[i + 1]) filterString += \",\";\n    }\n\n    return filterString;\n  }\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","WeatherListComponent","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","isFilter","weathers","currentPage","itemsPerPage","filterString","buildFilterString","params","post","console","log","length","i","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,WAAnD,EAAgEC,YAAhE,EAA8E;AAC7F,QAAIC,YAAY,GAAG,KAAKC,iBAAL,CAAuBN,OAAvB,CAAnB;AACA,QAAG,CAACE,QAAJ,EACIA,QAAQ,GAAG,EAAX;AACJ,UAAMK,MAAM,GAAG;AACXT,MAAAA,MADW;AACHC,MAAAA,WADG;AACUM,MAAAA,YADV;AACwBJ,MAAAA;AADxB,KAAf;AAIA,WAAOT,KAAK,CAACgB,IAAN,CAAY,GAAEb,eAAgB,kBAA9B,EAAiDO,QAAjD,EAA0D;AAACK,MAAAA;AAAD,KAA1D,CAAP;AACH;;AAEDD,EAAAA,iBAAiB,CAACN,OAAD,EAAS;AACtB,QAAIK,YAAY,GAAG,EAAnB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBV,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEW,MAA/B,CAAZ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAAAZ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEW,MAAT,IAAgB,CAApC,EAAuC,EAAEC,CAAzC,EAA2C;AACvCP,MAAAA,YAAY,IAAGQ,IAAI,CAACC,SAAL,CAAed,OAAO,CAACY,CAAD,CAAtB,CAAf;AACA,UAAIZ,OAAO,CAACY,CAAC,GAAC,CAAH,CAAX,EACIP,YAAY,IAAI,GAAhB;AACP;;AACD,WAAOA,YAAP;AACH;;AAtBgB;;AAwBrB,eAAe,IAAIT,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport WeatherListComponent from '../component/WeatherListComponent';\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, weathers, currentPage, itemsPerPage) {\n        var filterString = this.buildFilterString(filters)\n        if(!weathers)\n            weathers = []\n        const params = {\n            sortBy, isAscending, filterString, isFilter\n        }\n\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params});\n    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        console.log(\"filters?.length: \" + filters?.length)\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify(filters[i]);\n            if (filters[i+1])\n                filterString += \",\"\n        }\n        return filterString\n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}