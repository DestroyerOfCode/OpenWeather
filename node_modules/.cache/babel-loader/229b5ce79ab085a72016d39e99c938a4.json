{"ast":null,"code":"import _classCallCheck from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var COURSE_API_URL='http://localhost:8080';var WEATHER_API_URL=\"\".concat(COURSE_API_URL,\"/weather\");import{trackPromise}from'react-promise-tracker';var WeatherService=/*#__PURE__*/function(){function WeatherService(){_classCallCheck(this,WeatherService);this.retrieveAllCountries=function(){return axios.get(\"\".concat(WEATHER_API_URL,\"/countries\"));};this.retrieveAllDescriptions=function(){return axios.get(\"\".concat(WEATHER_API_URL,\"/descriptions\"));};}_createClass(WeatherService,[{key:\"retrieveAllWeathers\",value:function retrieveAllWeathers(sortBy,isAscending,filters,isFilter,isAdditionalFilter,weathers){var filterString=this.buildFilterString(filters);if(!weathers)weathers=[];var params={sortBy:sortBy,isAscending:isAscending,filterString:filterString,isFilter:isFilter,isAdditionalFilter:isAdditionalFilter};console.log(JSON.stringify(filters));return trackPromise(axios.post(\"\".concat(WEATHER_API_URL,\"/retrieve/fromDb\"),weathers,{params:params}));s;}},{key:\"buildFilterString\",value:function buildFilterString(filters){var filterString=\"\";console.log(\"filters?.length: \"+(filters===null||filters===void 0?void 0:filters.length));for(var i=0;i<=(filters===null||filters===void 0?void 0:filters.length)-1;++i){filterString+=JSON.stringify(filters[i]);if(filters[i+1])filterString+=\",\";}return filterString;}// console.log(\"countries: \" + JSON.stringify(countries))\n// return countries\n}]);return WeatherService;}();export default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","trackPromise","WeatherService","retrieveAllCountries","get","retrieveAllDescriptions","sortBy","isAscending","filters","isFilter","isAdditionalFilter","weathers","filterString","buildFilterString","params","console","log","JSON","stringify","post","s","length","i"],"mappings":"gSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,CAAG,uBAAvB,CACA,GAAMC,CAAAA,eAAe,WAAMD,cAAN,YAArB,CACA,OAASE,YAAT,KAA4B,uBAA5B,C,GAEMC,CAAAA,c,6FAwBFC,oB,CAAuB,iBAAOL,CAAAA,KAAK,CAACM,GAAN,WAAaJ,eAAb,eAAP,E,MACvBK,uB,CAA0B,iBAAMP,CAAAA,KAAK,CAACM,GAAN,WAAaJ,eAAb,kBAAN,E,6FAvBNM,M,CAAQC,W,CAAaC,O,CAASC,Q,CAAUC,kB,CAAoBC,Q,CAAU,CACtF,GAAIC,CAAAA,YAAY,CAAG,KAAKC,iBAAL,CAAuBL,OAAvB,CAAnB,CACA,GAAG,CAACG,QAAJ,CACIA,QAAQ,CAAG,EAAX,CACJ,GAAMG,CAAAA,MAAM,CAAG,CACXR,MAAM,CAANA,MADW,CACHC,WAAW,CAAXA,WADG,CACUK,YAAY,CAAZA,YADV,CACwBH,QAAQ,CAARA,QADxB,CACkCC,kBAAkB,CAAlBA,kBADlC,CAAf,CAGIK,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAZ,EACJ,MAAOP,CAAAA,YAAY,CAACH,KAAK,CAACqB,IAAN,WAAcnB,eAAd,qBAAiDW,QAAjD,CAA0D,CAACG,MAAM,CAANA,MAAD,CAA1D,CAAD,CAAnB,CACRM,CAAC,CAAK,C,4DAEgBZ,O,CAAQ,CACtB,GAAII,CAAAA,YAAY,CAAG,EAAnB,CACAG,OAAO,CAACC,GAAR,CAAY,qBAAsBR,OAAtB,SAAsBA,OAAtB,iBAAsBA,OAAO,CAAEa,MAA/B,CAAZ,EACA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAAAd,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEa,MAAT,EAAgB,CAApC,CAAuC,EAAEC,CAAzC,CAA2C,CACvCV,YAAY,EAAGK,IAAI,CAACC,SAAL,CAAeV,OAAO,CAACc,CAAD,CAAtB,CAAf,CACA,GAAId,OAAO,CAACc,CAAC,CAAC,CAAH,CAAX,CACIV,YAAY,EAAI,GAAhB,CACP,CACD,MAAOA,CAAAA,YAAP,CACH,CAIG;AACA;8BAIR,cAAe,IAAIV,CAAAA,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\nimport { trackPromise} from 'react-promise-tracker';\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, isFilter, isAdditionalFilter, weathers) {\n        var filterString = this.buildFilterString(filters)\n        if(!weathers)\n            weathers = []\n        const params = {\n            sortBy, isAscending, filterString, isFilter, isAdditionalFilter\n        }\n            console.log(JSON.stringify(filters))\n        return trackPromise(axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params}));\ns    }\n\n    buildFilterString(filters){\n        var filterString = \"\"\n        console.log(\"filters?.length: \" + filters?.length)\n        for(var i = 0; i <= filters?.length-1; ++i){\n            filterString+= JSON.stringify(filters[i]);\n            if (filters[i+1])\n                filterString += \",\"\n        }\n        return filterString\n    }\n\n    retrieveAllCountries = () =>  axios.get(`${WEATHER_API_URL}/countries`)\n    retrieveAllDescriptions = () => axios.get(`${WEATHER_API_URL}/descriptions`)\n        // console.log(\"countries: \" + JSON.stringify(countries))\n        // return countries\n    \n\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}