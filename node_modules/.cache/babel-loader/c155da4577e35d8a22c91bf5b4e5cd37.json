{"ast":null,"code":"import axios from 'axios';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`;\n\nclass WeatherService {\n  retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n    let filtersString = \"\";\n\n    if (!filters.length) {// console.log(\"filters: \" + JSON.stringify(filters));\n    } else {\n      // console.log(\"filter not: \" + JSON.stringify(filters))\n      // console.log(\"filter not: \" + (filters))\n      filters.forEach(item => {\n        filtersString += JSON.stringify(item);\n        filtersString += \",\"; // console.log(\"item: \" + JSON.stringify(item))\n      }); // filters = JSON.stringify(filters)\n    }\n\n    console.log(\"filtersString: \" + filtersString);\n    if (!weathers) weathers = [];\n    const params = {\n      sortBy,\n      isAscending,\n      filtersString,\n      filterOperator\n    }; // console.log(\"params: \" + JSON.stringify(params) )\n\n    return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers, {\n      params,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  buildFilterParamString(filters) {}\n\n}\n\nexport default new WeatherService();","map":{"version":3,"sources":["/home/prepelicamangalica/WorkspaceGit/SuperProjekt/src/main/ui/src/service/WeatherService.js"],"names":["axios","COURSE_API_URL","WEATHER_API_URL","WeatherService","retrieveAllWeathers","sortBy","isAscending","filters","filterOperator","weathers","filtersString","length","forEach","item","JSON","stringify","console","log","params","post","headers","buildFilterParamString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,eAAe,GAAI,GAAED,cAAe,UAA1C;;AAEA,MAAME,cAAN,CAAqB;AAEjBC,EAAAA,mBAAmB,CAACC,MAAD,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,QAA/C,EAAyD;AAExE,QAAIC,aAAa,GAAC,EAAlB;;AACA,QAAG,CAACH,OAAO,CAACI,MAAZ,EAAmB,CACf;AAEH,KAHD,MAII;AACA;AACA;AACAJ,MAAAA,OAAO,CAACK,OAAR,CAAkBC,IAAD,IAAS;AACtBH,QAAAA,aAAa,IAAGI,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAhB;AACAH,QAAAA,aAAa,IAAI,GAAjB,CAFsB,CAGtB;AAEH,OALD,EAHA,CAUA;AACH;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAqBP,aAAjC;AACA,QAAG,CAACD,QAAJ,EACIA,QAAQ,GAAG,EAAX;AAEJ,UAAMS,MAAM,GAAG;AACXb,MAAAA,MADW;AACHC,MAAAA,WADG;AACUI,MAAAA,aADV;AACyBF,MAAAA;AADzB,KAAf,CAvBwE,CA2BxE;;AACA,WAAOR,KAAK,CAACmB,IAAN,CAAY,GAAEjB,eAAgB,kBAA9B,EAAiDO,QAAjD,EAA0D;AAACS,MAAAA,MAAD;AAASE,MAAAA,OAAO,EAAE;AAC/E,wBAAgB;AAD+D;AAAlB,KAA1D,CAAP;AAGH;;AAKDC,EAAAA,sBAAsB,CAACd,OAAD,EAAS,CAE9B;;AAxCgB;;AA0CrB,eAAe,IAAIJ,cAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst COURSE_API_URL = 'http://localhost:8080'\nconst WEATHER_API_URL = `${COURSE_API_URL}/weather`\n\nclass WeatherService {\n\n    retrieveAllWeathers(sortBy, isAscending, filters, filterOperator, weathers) {\n       \n        let filtersString=\"\"\n        if(!filters.length){\n            // console.log(\"filters: \" + JSON.stringify(filters));\n       \n        }\n        else{\n            // console.log(\"filter not: \" + JSON.stringify(filters))\n            // console.log(\"filter not: \" + (filters))\n            filters.forEach( (item) =>{\n                filtersString+= JSON.stringify(item);\n                filtersString += \",\"\n                // console.log(\"item: \" + JSON.stringify(item))\n\n            }\n            );\n            // filters = JSON.stringify(filters)\n        }\n        console.log(\"filtersString: \" + (filtersString))\n        if(!weathers)\n            weathers = []\n            \n        const params = {\n            sortBy, isAscending, filtersString, filterOperator\n        }\n\n        // console.log(\"params: \" + JSON.stringify(params) )\n        return axios.post(`${WEATHER_API_URL}/retrieve/fromDb`, weathers,{params, headers: {\n            'Content-Type': 'application/json',\n        }});\n    }\n\n\n\n    \n    buildFilterParamString(filters){\n        \n    }\n}\nexport default new WeatherService()\n"]},"metadata":{},"sourceType":"module"}